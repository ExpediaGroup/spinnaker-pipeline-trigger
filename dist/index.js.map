{"version":3,"file":"index.js","sources":["../webpack://spinnaker-pipeline-trigger/./lib/main.js","../webpack://spinnaker-pipeline-trigger/./node_modules/@actions/core/lib/command.js","../webpack://spinnaker-pipeline-trigger/./node_modules/@actions/core/lib/core.js","../webpack://spinnaker-pipeline-trigger/./node_modules/@actions/core/lib/file-command.js","../webpack://spinnaker-pipeline-trigger/./node_modules/@actions/core/lib/utils.js","../webpack://spinnaker-pipeline-trigger/./node_modules/@aws-sdk/client-sns/dist-cjs/SNS.js","../webpack://spinnaker-pipeline-trigger/./node_modules/@aws-sdk/client-sns/dist-cjs/SNSClient.js","../webpack://spinnaker-pipeline-trigger/./node_modules/@aws-sdk/client-sns/dist-cjs/commands/AddPermissionCommand.js","../webpack://spinnaker-pipeline-trigger/./node_modules/@aws-sdk/client-sns/dist-cjs/commands/CheckIfPhoneNumberIsOptedOutCommand.js","../webpack://spinnaker-pipeline-trigger/./node_modules/@aws-sdk/client-sns/dist-cjs/commands/ConfirmSubscriptionCommand.js","../webpack://spinnaker-pipeline-trigger/./node_modules/@aws-sdk/client-sns/dist-cjs/commands/CreatePlatformApplicationCommand.js","../webpack://spinnaker-pipeline-trigger/./node_modules/@aws-sdk/client-sns/dist-cjs/commands/CreatePlatformEndpointCommand.js","../webpack://spinnaker-pipeline-trigger/./node_modules/@aws-sdk/client-sns/dist-cjs/commands/CreateSMSSandboxPhoneNumberCommand.js","../webpack://spinnaker-pipeline-trigger/./node_modules/@aws-sdk/client-sns/dist-cjs/commands/CreateTopicCommand.js","../webpack://spinnaker-pipeline-trigger/./node_modules/@aws-sdk/client-sns/dist-cjs/commands/DeleteEndpointCommand.js","../webpack://spinnaker-pipeline-trigger/./node_modules/@aws-sdk/client-sns/dist-cjs/commands/DeletePlatformApplicationCommand.js","../webpack://spinnaker-pipeline-trigger/./node_modules/@aws-sdk/client-sns/dist-cjs/commands/DeleteSMSSandboxPhoneNumberCommand.js","../webpack://spinnaker-pipeline-trigger/./node_modules/@aws-sdk/client-sns/dist-cjs/commands/DeleteTopicCommand.js","../webpack://spinnaker-pipeline-trigger/./node_modules/@aws-sdk/client-sns/dist-cjs/commands/GetEndpointAttributesCommand.js","../webpack://spinnaker-pipeline-trigger/./node_modules/@aws-sdk/client-sns/dist-cjs/commands/GetPlatformApplicationAttributesCommand.js","../webpack://spinnaker-pipeline-trigger/./node_modules/@aws-sdk/client-sns/dist-cjs/commands/GetSMSAttributesCommand.js","../webpack://spinnaker-pipeline-trigger/./node_modules/@aws-sdk/client-sns/dist-cjs/commands/GetSMSSandboxAccountStatusCommand.js","../webpack://spinnaker-pipeline-trigger/./node_modules/@aws-sdk/client-sns/dist-cjs/commands/GetSubscriptionAttributesCommand.js","../webpack://spinnaker-pipeline-trigger/./node_modules/@aws-sdk/client-sns/dist-cjs/commands/GetTopicAttributesCommand.js","../webpack://spinnaker-pipeline-trigger/./node_modules/@aws-sdk/client-sns/dist-cjs/commands/ListEndpointsByPlatformApplicationCommand.js","../webpack://spinnaker-pipeline-trigger/./node_modules/@aws-sdk/client-sns/dist-cjs/commands/ListOriginationNumbersCommand.js","../webpack://spinnaker-pipeline-trigger/./node_modules/@aws-sdk/client-sns/dist-cjs/commands/ListPhoneNumbersOptedOutCommand.js","../webpack://spinnaker-pipeline-trigger/./node_modules/@aws-sdk/client-sns/dist-cjs/commands/ListPlatformApplicationsCommand.js","../webpack://spinnaker-pipeline-trigger/./node_modules/@aws-sdk/client-sns/dist-cjs/commands/ListSMSSandboxPhoneNumbersCommand.js","../webpack://spinnaker-pipeline-trigger/./node_modules/@aws-sdk/client-sns/dist-cjs/commands/ListSubscriptionsByTopicCommand.js","../webpack://spinnaker-pipeline-trigger/./node_modules/@aws-sdk/client-sns/dist-cjs/commands/ListSubscriptionsCommand.js","../webpack://spinnaker-pipeline-trigger/./node_modules/@aws-sdk/client-sns/dist-cjs/commands/ListTagsForResourceCommand.js","../webpack://spinnaker-pipeline-trigger/./node_modules/@aws-sdk/client-sns/dist-cjs/commands/ListTopicsCommand.js","../webpack://spinnaker-pipeline-trigger/./node_modules/@aws-sdk/client-sns/dist-cjs/commands/OptInPhoneNumberCommand.js","../webpack://spinnaker-pipeline-trigger/./node_modules/@aws-sdk/client-sns/dist-cjs/commands/PublishBatchCommand.js","../webpack://spinnaker-pipeline-trigger/./node_modules/@aws-sdk/client-sns/dist-cjs/commands/PublishCommand.js","../webpack://spinnaker-pipeline-trigger/./node_modules/@aws-sdk/client-sns/dist-cjs/commands/RemovePermissionCommand.js","../webpack://spinnaker-pipeline-trigger/./node_modules/@aws-sdk/client-sns/dist-cjs/commands/SetEndpointAttributesCommand.js","../webpack://spinnaker-pipeline-trigger/./node_modules/@aws-sdk/client-sns/dist-cjs/commands/SetPlatformApplicationAttributesCommand.js","../webpack://spinnaker-pipeline-trigger/./node_modules/@aws-sdk/client-sns/dist-cjs/commands/SetSMSAttributesCommand.js","../webpack://spinnaker-pipeline-trigger/./node_modules/@aws-sdk/client-sns/dist-cjs/commands/SetSubscriptionAttributesCommand.js","../webpack://spinnaker-pipeline-trigger/./node_modules/@aws-sdk/client-sns/dist-cjs/commands/SetTopicAttributesCommand.js","../webpack://spinnaker-pipeline-trigger/./node_modules/@aws-sdk/client-sns/dist-cjs/commands/SubscribeCommand.js","../webpack://spinnaker-pipeline-trigger/./node_modules/@aws-sdk/client-sns/dist-cjs/commands/TagResourceCommand.js","../webpack://spinnaker-pipeline-trigger/./node_modules/@aws-sdk/client-sns/dist-cjs/commands/UnsubscribeCommand.js","../webpack://spinnaker-pipeline-trigger/./node_modules/@aws-sdk/client-sns/dist-cjs/commands/UntagResourceCommand.js","../webpack://spinnaker-pipeline-trigger/./node_modules/@aws-sdk/client-sns/dist-cjs/commands/VerifySMSSandboxPhoneNumberCommand.js","../webpack://spinnaker-pipeline-trigger/./node_modules/@aws-sdk/client-sns/dist-cjs/commands/index.js","../webpack://spinnaker-pipeline-trigger/./node_modules/@aws-sdk/client-sns/dist-cjs/endpoints.js","../webpack://spinnaker-pipeline-trigger/./node_modules/@aws-sdk/client-sns/dist-cjs/index.js","../webpack://spinnaker-pipeline-trigger/./node_modules/@aws-sdk/client-sns/dist-cjs/models/index.js","../webpack://spinnaker-pipeline-trigger/./node_modules/@aws-sdk/client-sns/dist-cjs/models/models_0.js","../webpack://spinnaker-pipeline-trigger/./node_modules/@aws-sdk/client-sns/dist-cjs/pagination/Interfaces.js","../webpack://spinnaker-pipeline-trigger/./node_modules/@aws-sdk/client-sns/dist-cjs/pagination/ListEndpointsByPlatformApplicationPaginator.js","../webpack://spinnaker-pipeline-trigger/./node_modules/@aws-sdk/client-sns/dist-cjs/pagination/ListOriginationNumbersPaginator.js","../webpack://spinnaker-pipeline-trigger/./node_modules/@aws-sdk/client-sns/dist-cjs/pagination/ListPhoneNumbersOptedOutPaginator.js","../webpack://spinnaker-pipeline-trigger/./node_modules/@aws-sdk/client-sns/dist-cjs/pagination/ListPlatformApplicationsPaginator.js","../webpack://spinnaker-pipeline-trigger/./node_modules/@aws-sdk/client-sns/dist-cjs/pagination/ListSMSSandboxPhoneNumbersPaginator.js","../webpack://spinnaker-pipeline-trigger/./node_modules/@aws-sdk/client-sns/dist-cjs/pagination/ListSubscriptionsByTopicPaginator.js","../webpack://spinnaker-pipeline-trigger/./node_modules/@aws-sdk/client-sns/dist-cjs/pagination/ListSubscriptionsPaginator.js","../webpack://spinnaker-pipeline-trigger/./node_modules/@aws-sdk/client-sns/dist-cjs/pagination/ListTopicsPaginator.js","../webpack://spinnaker-pipeline-trigger/./node_modules/@aws-sdk/client-sns/dist-cjs/pagination/index.js","../webpack://spinnaker-pipeline-trigger/./node_modules/@aws-sdk/client-sns/dist-cjs/protocols/Aws_query.js","../webpack://spinnaker-pipeline-trigger/./node_modules/@aws-sdk/client-sns/dist-cjs/runtimeConfig.js","../webpack://spinnaker-pipeline-trigger/./node_modules/@aws-sdk/client-sns/dist-cjs/runtimeConfig.shared.js","../webpack://spinnaker-pipeline-trigger/./node_modules/@aws-sdk/client-sso/dist-cjs/SSO.js","../webpack://spinnaker-pipeline-trigger/./node_modules/@aws-sdk/client-sso/dist-cjs/SSOClient.js","../webpack://spinnaker-pipeline-trigger/./node_modules/@aws-sdk/client-sso/dist-cjs/commands/GetRoleCredentialsCommand.js","../webpack://spinnaker-pipeline-trigger/./node_modules/@aws-sdk/client-sso/dist-cjs/commands/ListAccountRolesCommand.js","../webpack://spinnaker-pipeline-trigger/./node_modules/@aws-sdk/client-sso/dist-cjs/commands/ListAccountsCommand.js","../webpack://spinnaker-pipeline-trigger/./node_modules/@aws-sdk/client-sso/dist-cjs/commands/LogoutCommand.js","../webpack://spinnaker-pipeline-trigger/./node_modules/@aws-sdk/client-sso/dist-cjs/commands/index.js","../webpack://spinnaker-pipeline-trigger/./node_modules/@aws-sdk/client-sso/dist-cjs/endpoints.js","../webpack://spinnaker-pipeline-trigger/./node_modules/@aws-sdk/client-sso/dist-cjs/index.js","../webpack://spinnaker-pipeline-trigger/./node_modules/@aws-sdk/client-sso/dist-cjs/models/index.js","../webpack://spinnaker-pipeline-trigger/./node_modules/@aws-sdk/client-sso/dist-cjs/models/models_0.js","../webpack://spinnaker-pipeline-trigger/./node_modules/@aws-sdk/client-sso/dist-cjs/pagination/Interfaces.js","../webpack://spinnaker-pipeline-trigger/./node_modules/@aws-sdk/client-sso/dist-cjs/pagination/ListAccountRolesPaginator.js","../webpack://spinnaker-pipeline-trigger/./node_modules/@aws-sdk/client-sso/dist-cjs/pagination/ListAccountsPaginator.js","../webpack://spinnaker-pipeline-trigger/./node_modules/@aws-sdk/client-sso/dist-cjs/pagination/index.js","../webpack://spinnaker-pipeline-trigger/./node_modules/@aws-sdk/client-sso/dist-cjs/protocols/Aws_restJson1.js","../webpack://spinnaker-pipeline-trigger/./node_modules/@aws-sdk/client-sso/dist-cjs/runtimeConfig.js","../webpack://spinnaker-pipeline-trigger/./node_modules/@aws-sdk/client-sso/dist-cjs/runtimeConfig.shared.js","../webpack://spinnaker-pipeline-trigger/./node_modules/@aws-sdk/client-sts/dist-cjs/STS.js","../webpack://spinnaker-pipeline-trigger/./node_modules/@aws-sdk/client-sts/dist-cjs/STSClient.js","../webpack://spinnaker-pipeline-trigger/./node_modules/@aws-sdk/client-sts/dist-cjs/commands/AssumeRoleCommand.js","../webpack://spinnaker-pipeline-trigger/./node_modules/@aws-sdk/client-sts/dist-cjs/commands/AssumeRoleWithSAMLCommand.js","../webpack://spinnaker-pipeline-trigger/./node_modules/@aws-sdk/client-sts/dist-cjs/commands/AssumeRoleWithWebIdentityCommand.js","../webpack://spinnaker-pipeline-trigger/./node_modules/@aws-sdk/client-sts/dist-cjs/commands/DecodeAuthorizationMessageCommand.js","../webpack://spinnaker-pipeline-trigger/./node_modules/@aws-sdk/client-sts/dist-cjs/commands/GetAccessKeyInfoCommand.js","../webpack://spinnaker-pipeline-trigger/./node_modules/@aws-sdk/client-sts/dist-cjs/commands/GetCallerIdentityCommand.js","../webpack://spinnaker-pipeline-trigger/./node_modules/@aws-sdk/client-sts/dist-cjs/commands/GetFederationTokenCommand.js","../webpack://spinnaker-pipeline-trigger/./node_modules/@aws-sdk/client-sts/dist-cjs/commands/GetSessionTokenCommand.js","../webpack://spinnaker-pipeline-trigger/./node_modules/@aws-sdk/client-sts/dist-cjs/commands/index.js","../webpack://spinnaker-pipeline-trigger/./node_modules/@aws-sdk/client-sts/dist-cjs/defaultRoleAssumers.js","../webpack://spinnaker-pipeline-trigger/./node_modules/@aws-sdk/client-sts/dist-cjs/defaultStsRoleAssumers.js","../webpack://spinnaker-pipeline-trigger/./node_modules/@aws-sdk/client-sts/dist-cjs/endpoints.js","../webpack://spinnaker-pipeline-trigger/./node_modules/@aws-sdk/client-sts/dist-cjs/index.js","../webpack://spinnaker-pipeline-trigger/./node_modules/@aws-sdk/client-sts/dist-cjs/models/index.js","../webpack://spinnaker-pipeline-trigger/./node_modules/@aws-sdk/client-sts/dist-cjs/models/models_0.js","../webpack://spinnaker-pipeline-trigger/./node_modules/@aws-sdk/client-sts/dist-cjs/protocols/Aws_query.js","../webpack://spinnaker-pipeline-trigger/./node_modules/@aws-sdk/client-sts/dist-cjs/runtimeConfig.js","../webpack://spinnaker-pipeline-trigger/./node_modules/@aws-sdk/client-sts/dist-cjs/runtimeConfig.shared.js","../webpack://spinnaker-pipeline-trigger/./node_modules/@aws-sdk/config-resolver/dist-cjs/endpointsConfig/NodeUseDualstackEndpointConfigOptions.js","../webpack://spinnaker-pipeline-trigger/./node_modules/@aws-sdk/config-resolver/dist-cjs/endpointsConfig/NodeUseFipsEndpointConfigOptions.js","../webpack://spinnaker-pipeline-trigger/./node_modules/@aws-sdk/config-resolver/dist-cjs/endpointsConfig/index.js","../webpack://spinnaker-pipeline-trigger/./node_modules/@aws-sdk/config-resolver/dist-cjs/endpointsConfig/resolveCustomEndpointsConfig.js","../webpack://spinnaker-pipeline-trigger/./node_modules/@aws-sdk/config-resolver/dist-cjs/endpointsConfig/resolveEndpointsConfig.js","../webpack://spinnaker-pipeline-trigger/./node_modules/@aws-sdk/config-resolver/dist-cjs/endpointsConfig/utils/getEndpointFromRegion.js","../webpack://spinnaker-pipeline-trigger/./node_modules/@aws-sdk/config-resolver/dist-cjs/endpointsConfig/utils/normalizeBoolean.js","../webpack://spinnaker-pipeline-trigger/./node_modules/@aws-sdk/config-resolver/dist-cjs/endpointsConfig/utils/normalizeEndpoint.js","../webpack://spinnaker-pipeline-trigger/./node_modules/@aws-sdk/config-resolver/dist-cjs/index.js","../webpack://spinnaker-pipeline-trigger/./node_modules/@aws-sdk/config-resolver/dist-cjs/regionConfig/config.js","../webpack://spinnaker-pipeline-trigger/./node_modules/@aws-sdk/config-resolver/dist-cjs/regionConfig/getRealRegion.js","../webpack://spinnaker-pipeline-trigger/./node_modules/@aws-sdk/config-resolver/dist-cjs/regionConfig/index.js","../webpack://spinnaker-pipeline-trigger/./node_modules/@aws-sdk/config-resolver/dist-cjs/regionConfig/isFipsRegion.js","../webpack://spinnaker-pipeline-trigger/./node_modules/@aws-sdk/config-resolver/dist-cjs/regionConfig/resolveRegionConfig.js","../webpack://spinnaker-pipeline-trigger/./node_modules/@aws-sdk/config-resolver/dist-cjs/regionInfo/PartitionHash.js","../webpack://spinnaker-pipeline-trigger/./node_modules/@aws-sdk/config-resolver/dist-cjs/regionInfo/RegionHash.js","../webpack://spinnaker-pipeline-trigger/./node_modules/@aws-sdk/config-resolver/dist-cjs/regionInfo/getHostnameFromVariants.js","../webpack://spinnaker-pipeline-trigger/./node_modules/@aws-sdk/config-resolver/dist-cjs/regionInfo/getRegionInfo.js","../webpack://spinnaker-pipeline-trigger/./node_modules/@aws-sdk/config-resolver/dist-cjs/regionInfo/getResolvedHostname.js","../webpack://spinnaker-pipeline-trigger/./node_modules/@aws-sdk/config-resolver/dist-cjs/regionInfo/getResolvedPartition.js","../webpack://spinnaker-pipeline-trigger/./node_modules/@aws-sdk/config-resolver/dist-cjs/regionInfo/getResolvedSigningRegion.js","../webpack://spinnaker-pipeline-trigger/./node_modules/@aws-sdk/config-resolver/dist-cjs/regionInfo/index.js","../webpack://spinnaker-pipeline-trigger/./node_modules/@aws-sdk/credential-provider-env/dist-cjs/index.js","../webpack://spinnaker-pipeline-trigger/./node_modules/@aws-sdk/credential-provider-imds/dist-cjs/config/Endpoint.js","../webpack://spinnaker-pipeline-trigger/./node_modules/@aws-sdk/credential-provider-imds/dist-cjs/config/EndpointConfigOptions.js","../webpack://spinnaker-pipeline-trigger/./node_modules/@aws-sdk/credential-provider-imds/dist-cjs/config/EndpointMode.js","../webpack://spinnaker-pipeline-trigger/./node_modules/@aws-sdk/credential-provider-imds/dist-cjs/config/EndpointModeConfigOptions.js","../webpack://spinnaker-pipeline-trigger/./node_modules/@aws-sdk/credential-provider-imds/dist-cjs/fromContainerMetadata.js","../webpack://spinnaker-pipeline-trigger/./node_modules/@aws-sdk/credential-provider-imds/dist-cjs/fromInstanceMetadata.js","../webpack://spinnaker-pipeline-trigger/./node_modules/@aws-sdk/credential-provider-imds/dist-cjs/index.js","../webpack://spinnaker-pipeline-trigger/./node_modules/@aws-sdk/credential-provider-imds/dist-cjs/remoteProvider/ImdsCredentials.js","../webpack://spinnaker-pipeline-trigger/./node_modules/@aws-sdk/credential-provider-imds/dist-cjs/remoteProvider/RemoteProviderInit.js","../webpack://spinnaker-pipeline-trigger/./node_modules/@aws-sdk/credential-provider-imds/dist-cjs/remoteProvider/httpRequest.js","../webpack://spinnaker-pipeline-trigger/./node_modules/@aws-sdk/credential-provider-imds/dist-cjs/remoteProvider/retry.js","../webpack://spinnaker-pipeline-trigger/./node_modules/@aws-sdk/credential-provider-imds/dist-cjs/utils/getInstanceMetadataEndpoint.js","../webpack://spinnaker-pipeline-trigger/./node_modules/@aws-sdk/credential-provider-ini/dist-cjs/index.js","../webpack://spinnaker-pipeline-trigger/./node_modules/@aws-sdk/credential-provider-node/dist-cjs/index.js","../webpack://spinnaker-pipeline-trigger/./node_modules/@aws-sdk/credential-provider-process/dist-cjs/index.js","../webpack://spinnaker-pipeline-trigger/./node_modules/@aws-sdk/credential-provider-sso/dist-cjs/index.js","../webpack://spinnaker-pipeline-trigger/./node_modules/@aws-sdk/credential-provider-web-identity/dist-cjs/fromTokenFile.js","../webpack://spinnaker-pipeline-trigger/./node_modules/@aws-sdk/credential-provider-web-identity/dist-cjs/fromWebToken.js","../webpack://spinnaker-pipeline-trigger/./node_modules/@aws-sdk/credential-provider-web-identity/dist-cjs/index.js","../webpack://spinnaker-pipeline-trigger/./node_modules/@aws-sdk/hash-node/dist-cjs/index.js","../webpack://spinnaker-pipeline-trigger/./node_modules/@aws-sdk/is-array-buffer/dist-cjs/index.js","../webpack://spinnaker-pipeline-trigger/./node_modules/@aws-sdk/middleware-content-length/dist-cjs/index.js","../webpack://spinnaker-pipeline-trigger/./node_modules/@aws-sdk/middleware-host-header/dist-cjs/index.js","../webpack://spinnaker-pipeline-trigger/./node_modules/@aws-sdk/middleware-logger/dist-cjs/index.js","../webpack://spinnaker-pipeline-trigger/./node_modules/@aws-sdk/middleware-logger/dist-cjs/loggerMiddleware.js","../webpack://spinnaker-pipeline-trigger/./node_modules/@aws-sdk/middleware-retry/dist-cjs/AdaptiveRetryStrategy.js","../webpack://spinnaker-pipeline-trigger/./node_modules/@aws-sdk/middleware-retry/dist-cjs/DefaultRateLimiter.js","../webpack://spinnaker-pipeline-trigger/./node_modules/@aws-sdk/middleware-retry/dist-cjs/StandardRetryStrategy.js","../webpack://spinnaker-pipeline-trigger/./node_modules/@aws-sdk/middleware-retry/dist-cjs/config.js","../webpack://spinnaker-pipeline-trigger/./node_modules/@aws-sdk/middleware-retry/dist-cjs/configurations.js","../webpack://spinnaker-pipeline-trigger/./node_modules/@aws-sdk/middleware-retry/dist-cjs/constants.js","../webpack://spinnaker-pipeline-trigger/./node_modules/@aws-sdk/middleware-retry/dist-cjs/defaultRetryQuota.js","../webpack://spinnaker-pipeline-trigger/./node_modules/@aws-sdk/middleware-retry/dist-cjs/delayDecider.js","../webpack://spinnaker-pipeline-trigger/./node_modules/@aws-sdk/middleware-retry/dist-cjs/index.js","../webpack://spinnaker-pipeline-trigger/./node_modules/@aws-sdk/middleware-retry/dist-cjs/omitRetryHeadersMiddleware.js","../webpack://spinnaker-pipeline-trigger/./node_modules/@aws-sdk/middleware-retry/dist-cjs/retryDecider.js","../webpack://spinnaker-pipeline-trigger/./node_modules/@aws-sdk/middleware-retry/dist-cjs/retryMiddleware.js","../webpack://spinnaker-pipeline-trigger/./node_modules/@aws-sdk/middleware-retry/dist-cjs/types.js","../webpack://spinnaker-pipeline-trigger/./node_modules/@aws-sdk/middleware-retry/node_modules/uuid/dist/index.js","../webpack://spinnaker-pipeline-trigger/./node_modules/@aws-sdk/middleware-retry/node_modules/uuid/dist/md5.js","../webpack://spinnaker-pipeline-trigger/./node_modules/@aws-sdk/middleware-retry/node_modules/uuid/dist/nil.js","../webpack://spinnaker-pipeline-trigger/./node_modules/@aws-sdk/middleware-retry/node_modules/uuid/dist/parse.js","../webpack://spinnaker-pipeline-trigger/./node_modules/@aws-sdk/middleware-retry/node_modules/uuid/dist/regex.js","../webpack://spinnaker-pipeline-trigger/./node_modules/@aws-sdk/middleware-retry/node_modules/uuid/dist/rng.js","../webpack://spinnaker-pipeline-trigger/./node_modules/@aws-sdk/middleware-retry/node_modules/uuid/dist/sha1.js","../webpack://spinnaker-pipeline-trigger/./node_modules/@aws-sdk/middleware-retry/node_modules/uuid/dist/stringify.js","../webpack://spinnaker-pipeline-trigger/./node_modules/@aws-sdk/middleware-retry/node_modules/uuid/dist/v1.js","../webpack://spinnaker-pipeline-trigger/./node_modules/@aws-sdk/middleware-retry/node_modules/uuid/dist/v3.js","../webpack://spinnaker-pipeline-trigger/./node_modules/@aws-sdk/middleware-retry/node_modules/uuid/dist/v35.js","../webpack://spinnaker-pipeline-trigger/./node_modules/@aws-sdk/middleware-retry/node_modules/uuid/dist/v4.js","../webpack://spinnaker-pipeline-trigger/./node_modules/@aws-sdk/middleware-retry/node_modules/uuid/dist/v5.js","../webpack://spinnaker-pipeline-trigger/./node_modules/@aws-sdk/middleware-retry/node_modules/uuid/dist/validate.js","../webpack://spinnaker-pipeline-trigger/./node_modules/@aws-sdk/middleware-retry/node_modules/uuid/dist/version.js","../webpack://spinnaker-pipeline-trigger/./node_modules/@aws-sdk/middleware-sdk-sts/dist-cjs/index.js","../webpack://spinnaker-pipeline-trigger/./node_modules/@aws-sdk/middleware-serde/dist-cjs/deserializerMiddleware.js","../webpack://spinnaker-pipeline-trigger/./node_modules/@aws-sdk/middleware-serde/dist-cjs/index.js","../webpack://spinnaker-pipeline-trigger/./node_modules/@aws-sdk/middleware-serde/dist-cjs/serdePlugin.js","../webpack://spinnaker-pipeline-trigger/./node_modules/@aws-sdk/middleware-serde/dist-cjs/serializerMiddleware.js","../webpack://spinnaker-pipeline-trigger/./node_modules/@aws-sdk/middleware-signing/dist-cjs/configurations.js","../webpack://spinnaker-pipeline-trigger/./node_modules/@aws-sdk/middleware-signing/dist-cjs/index.js","../webpack://spinnaker-pipeline-trigger/./node_modules/@aws-sdk/middleware-signing/dist-cjs/middleware.js","../webpack://spinnaker-pipeline-trigger/./node_modules/@aws-sdk/middleware-signing/dist-cjs/utils/getSkewCorrectedDate.js","../webpack://spinnaker-pipeline-trigger/./node_modules/@aws-sdk/middleware-signing/dist-cjs/utils/getUpdatedSystemClockOffset.js","../webpack://spinnaker-pipeline-trigger/./node_modules/@aws-sdk/middleware-signing/dist-cjs/utils/isClockSkewed.js","../webpack://spinnaker-pipeline-trigger/./node_modules/@aws-sdk/middleware-stack/dist-cjs/MiddlewareStack.js","../webpack://spinnaker-pipeline-trigger/./node_modules/@aws-sdk/middleware-stack/dist-cjs/index.js","../webpack://spinnaker-pipeline-trigger/./node_modules/@aws-sdk/middleware-user-agent/dist-cjs/configurations.js","../webpack://spinnaker-pipeline-trigger/./node_modules/@aws-sdk/middleware-user-agent/dist-cjs/constants.js","../webpack://spinnaker-pipeline-trigger/./node_modules/@aws-sdk/middleware-user-agent/dist-cjs/index.js","../webpack://spinnaker-pipeline-trigger/./node_modules/@aws-sdk/middleware-user-agent/dist-cjs/user-agent-middleware.js","../webpack://spinnaker-pipeline-trigger/./node_modules/@aws-sdk/node-config-provider/dist-cjs/configLoader.js","../webpack://spinnaker-pipeline-trigger/./node_modules/@aws-sdk/node-config-provider/dist-cjs/fromEnv.js","../webpack://spinnaker-pipeline-trigger/./node_modules/@aws-sdk/node-config-provider/dist-cjs/fromSharedConfigFiles.js","../webpack://spinnaker-pipeline-trigger/./node_modules/@aws-sdk/node-config-provider/dist-cjs/fromStatic.js","../webpack://spinnaker-pipeline-trigger/./node_modules/@aws-sdk/node-config-provider/dist-cjs/index.js","../webpack://spinnaker-pipeline-trigger/./node_modules/@aws-sdk/node-http-handler/dist-cjs/constants.js","../webpack://spinnaker-pipeline-trigger/./node_modules/@aws-sdk/node-http-handler/dist-cjs/get-transformed-headers.js","../webpack://spinnaker-pipeline-trigger/./node_modules/@aws-sdk/node-http-handler/dist-cjs/index.js","../webpack://spinnaker-pipeline-trigger/./node_modules/@aws-sdk/node-http-handler/dist-cjs/node-http-handler.js","../webpack://spinnaker-pipeline-trigger/./node_modules/@aws-sdk/node-http-handler/dist-cjs/node-http2-handler.js","../webpack://spinnaker-pipeline-trigger/./node_modules/@aws-sdk/node-http-handler/dist-cjs/set-connection-timeout.js","../webpack://spinnaker-pipeline-trigger/./node_modules/@aws-sdk/node-http-handler/dist-cjs/set-socket-timeout.js","../webpack://spinnaker-pipeline-trigger/./node_modules/@aws-sdk/node-http-handler/dist-cjs/stream-collector/collector.js","../webpack://spinnaker-pipeline-trigger/./node_modules/@aws-sdk/node-http-handler/dist-cjs/stream-collector/index.js","../webpack://spinnaker-pipeline-trigger/./node_modules/@aws-sdk/node-http-handler/dist-cjs/write-request-body.js","../webpack://spinnaker-pipeline-trigger/./node_modules/@aws-sdk/property-provider/dist-cjs/ProviderError.js","../webpack://spinnaker-pipeline-trigger/./node_modules/@aws-sdk/property-provider/dist-cjs/chain.js","../webpack://spinnaker-pipeline-trigger/./node_modules/@aws-sdk/property-provider/dist-cjs/fromStatic.js","../webpack://spinnaker-pipeline-trigger/./node_modules/@aws-sdk/property-provider/dist-cjs/index.js","../webpack://spinnaker-pipeline-trigger/./node_modules/@aws-sdk/property-provider/dist-cjs/memoize.js","../webpack://spinnaker-pipeline-trigger/./node_modules/@aws-sdk/protocol-http/dist-cjs/httpHandler.js","../webpack://spinnaker-pipeline-trigger/./node_modules/@aws-sdk/protocol-http/dist-cjs/httpRequest.js","../webpack://spinnaker-pipeline-trigger/./node_modules/@aws-sdk/protocol-http/dist-cjs/httpResponse.js","../webpack://spinnaker-pipeline-trigger/./node_modules/@aws-sdk/protocol-http/dist-cjs/index.js","../webpack://spinnaker-pipeline-trigger/./node_modules/@aws-sdk/protocol-http/dist-cjs/isValidHostname.js","../webpack://spinnaker-pipeline-trigger/./node_modules/@aws-sdk/querystring-builder/dist-cjs/index.js","../webpack://spinnaker-pipeline-trigger/./node_modules/@aws-sdk/querystring-parser/dist-cjs/index.js","../webpack://spinnaker-pipeline-trigger/./node_modules/@aws-sdk/service-error-classification/dist-cjs/constants.js","../webpack://spinnaker-pipeline-trigger/./node_modules/@aws-sdk/service-error-classification/dist-cjs/index.js","../webpack://spinnaker-pipeline-trigger/./node_modules/@aws-sdk/shared-ini-file-loader/dist-cjs/index.js","../webpack://spinnaker-pipeline-trigger/./node_modules/@aws-sdk/signature-v4/dist-cjs/SignatureV4.js","../webpack://spinnaker-pipeline-trigger/./node_modules/@aws-sdk/signature-v4/dist-cjs/cloneRequest.js","../webpack://spinnaker-pipeline-trigger/./node_modules/@aws-sdk/signature-v4/dist-cjs/constants.js","../webpack://spinnaker-pipeline-trigger/./node_modules/@aws-sdk/signature-v4/dist-cjs/credentialDerivation.js","../webpack://spinnaker-pipeline-trigger/./node_modules/@aws-sdk/signature-v4/dist-cjs/getCanonicalHeaders.js","../webpack://spinnaker-pipeline-trigger/./node_modules/@aws-sdk/signature-v4/dist-cjs/getCanonicalQuery.js","../webpack://spinnaker-pipeline-trigger/./node_modules/@aws-sdk/signature-v4/dist-cjs/getPayloadHash.js","../webpack://spinnaker-pipeline-trigger/./node_modules/@aws-sdk/signature-v4/dist-cjs/headerUtil.js","../webpack://spinnaker-pipeline-trigger/./node_modules/@aws-sdk/signature-v4/dist-cjs/index.js","../webpack://spinnaker-pipeline-trigger/./node_modules/@aws-sdk/signature-v4/dist-cjs/moveHeadersToQuery.js","../webpack://spinnaker-pipeline-trigger/./node_modules/@aws-sdk/signature-v4/dist-cjs/normalizeProvider.js","../webpack://spinnaker-pipeline-trigger/./node_modules/@aws-sdk/signature-v4/dist-cjs/prepareRequest.js","../webpack://spinnaker-pipeline-trigger/./node_modules/@aws-sdk/signature-v4/dist-cjs/utilDate.js","../webpack://spinnaker-pipeline-trigger/./node_modules/@aws-sdk/smithy-client/dist-cjs/client.js","../webpack://spinnaker-pipeline-trigger/./node_modules/@aws-sdk/smithy-client/dist-cjs/command.js","../webpack://spinnaker-pipeline-trigger/./node_modules/@aws-sdk/smithy-client/dist-cjs/constants.js","../webpack://spinnaker-pipeline-trigger/./node_modules/@aws-sdk/smithy-client/dist-cjs/date-utils.js","../webpack://spinnaker-pipeline-trigger/./node_modules/@aws-sdk/smithy-client/dist-cjs/defaults-mode.js","../webpack://spinnaker-pipeline-trigger/./node_modules/@aws-sdk/smithy-client/dist-cjs/emitWarningIfUnsupportedVersion.js","../webpack://spinnaker-pipeline-trigger/./node_modules/@aws-sdk/smithy-client/dist-cjs/extended-encode-uri-component.js","../webpack://spinnaker-pipeline-trigger/./node_modules/@aws-sdk/smithy-client/dist-cjs/get-array-if-single-item.js","../webpack://spinnaker-pipeline-trigger/./node_modules/@aws-sdk/smithy-client/dist-cjs/get-value-from-text-node.js","../webpack://spinnaker-pipeline-trigger/./node_modules/@aws-sdk/smithy-client/dist-cjs/index.js","../webpack://spinnaker-pipeline-trigger/./node_modules/@aws-sdk/smithy-client/dist-cjs/lazy-json.js","../webpack://spinnaker-pipeline-trigger/./node_modules/@aws-sdk/smithy-client/dist-cjs/parse-utils.js","../webpack://spinnaker-pipeline-trigger/./node_modules/@aws-sdk/smithy-client/dist-cjs/ser-utils.js","../webpack://spinnaker-pipeline-trigger/./node_modules/@aws-sdk/smithy-client/dist-cjs/split-every.js","../webpack://spinnaker-pipeline-trigger/./node_modules/@aws-sdk/url-parser/dist-cjs/index.js","../webpack://spinnaker-pipeline-trigger/./node_modules/@aws-sdk/util-base64-node/dist-cjs/index.js","../webpack://spinnaker-pipeline-trigger/./node_modules/@aws-sdk/util-body-length-node/dist-cjs/index.js","../webpack://spinnaker-pipeline-trigger/./node_modules/@aws-sdk/util-buffer-from/dist-cjs/index.js","../webpack://spinnaker-pipeline-trigger/./node_modules/@aws-sdk/util-config-provider/dist-cjs/booleanSelector.js","../webpack://spinnaker-pipeline-trigger/./node_modules/@aws-sdk/util-config-provider/dist-cjs/index.js","../webpack://spinnaker-pipeline-trigger/./node_modules/@aws-sdk/util-credentials/dist-cjs/index.js","../webpack://spinnaker-pipeline-trigger/./node_modules/@aws-sdk/util-defaults-mode-node/dist-cjs/constants.js","../webpack://spinnaker-pipeline-trigger/./node_modules/@aws-sdk/util-defaults-mode-node/dist-cjs/defaultsModeConfig.js","../webpack://spinnaker-pipeline-trigger/./node_modules/@aws-sdk/util-defaults-mode-node/dist-cjs/index.js","../webpack://spinnaker-pipeline-trigger/./node_modules/@aws-sdk/util-defaults-mode-node/dist-cjs/resolveDefaultsModeConfig.js","../webpack://spinnaker-pipeline-trigger/./node_modules/@aws-sdk/util-hex-encoding/dist-cjs/index.js","../webpack://spinnaker-pipeline-trigger/./node_modules/@aws-sdk/util-uri-escape/dist-cjs/escape-uri-path.js","../webpack://spinnaker-pipeline-trigger/./node_modules/@aws-sdk/util-uri-escape/dist-cjs/escape-uri.js","../webpack://spinnaker-pipeline-trigger/./node_modules/@aws-sdk/util-uri-escape/dist-cjs/index.js","../webpack://spinnaker-pipeline-trigger/./node_modules/@aws-sdk/util-user-agent-node/dist-cjs/index.js","../webpack://spinnaker-pipeline-trigger/./node_modules/@aws-sdk/util-user-agent-node/dist-cjs/is-crt-available.js","../webpack://spinnaker-pipeline-trigger/./node_modules/@aws-sdk/util-utf8-node/dist-cjs/index.js","../webpack://spinnaker-pipeline-trigger/./node_modules/entities/lib/decode.js","../webpack://spinnaker-pipeline-trigger/./node_modules/entities/lib/decode_codepoint.js","../webpack://spinnaker-pipeline-trigger/./node_modules/entities/lib/encode.js","../webpack://spinnaker-pipeline-trigger/./node_modules/entities/lib/index.js","../webpack://spinnaker-pipeline-trigger/./node_modules/fast-xml-parser/src/json2xml.js","../webpack://spinnaker-pipeline-trigger/./node_modules/fast-xml-parser/src/nimndata.js","../webpack://spinnaker-pipeline-trigger/./node_modules/fast-xml-parser/src/node2json.js","../webpack://spinnaker-pipeline-trigger/./node_modules/fast-xml-parser/src/node2json_str.js","../webpack://spinnaker-pipeline-trigger/./node_modules/fast-xml-parser/src/parser.js","../webpack://spinnaker-pipeline-trigger/./node_modules/fast-xml-parser/src/util.js","../webpack://spinnaker-pipeline-trigger/./node_modules/fast-xml-parser/src/validator.js","../webpack://spinnaker-pipeline-trigger/./node_modules/fast-xml-parser/src/xmlNode.js","../webpack://spinnaker-pipeline-trigger/./node_modules/fast-xml-parser/src/xmlstr2xmlnode.js","../webpack://spinnaker-pipeline-trigger/./node_modules/js-yaml/index.js","../webpack://spinnaker-pipeline-trigger/./node_modules/js-yaml/lib/common.js","../webpack://spinnaker-pipeline-trigger/./node_modules/js-yaml/lib/dumper.js","../webpack://spinnaker-pipeline-trigger/./node_modules/js-yaml/lib/exception.js","../webpack://spinnaker-pipeline-trigger/./node_modules/js-yaml/lib/loader.js","../webpack://spinnaker-pipeline-trigger/./node_modules/js-yaml/lib/schema.js","../webpack://spinnaker-pipeline-trigger/./node_modules/js-yaml/lib/schema/core.js","../webpack://spinnaker-pipeline-trigger/./node_modules/js-yaml/lib/schema/default.js","../webpack://spinnaker-pipeline-trigger/./node_modules/js-yaml/lib/schema/failsafe.js","../webpack://spinnaker-pipeline-trigger/./node_modules/js-yaml/lib/schema/json.js","../webpack://spinnaker-pipeline-trigger/./node_modules/js-yaml/lib/snippet.js","../webpack://spinnaker-pipeline-trigger/./node_modules/js-yaml/lib/type.js","../webpack://spinnaker-pipeline-trigger/./node_modules/js-yaml/lib/type/binary.js","../webpack://spinnaker-pipeline-trigger/./node_modules/js-yaml/lib/type/bool.js","../webpack://spinnaker-pipeline-trigger/./node_modules/js-yaml/lib/type/float.js","../webpack://spinnaker-pipeline-trigger/./node_modules/js-yaml/lib/type/int.js","../webpack://spinnaker-pipeline-trigger/./node_modules/js-yaml/lib/type/map.js","../webpack://spinnaker-pipeline-trigger/./node_modules/js-yaml/lib/type/merge.js","../webpack://spinnaker-pipeline-trigger/./node_modules/js-yaml/lib/type/null.js","../webpack://spinnaker-pipeline-trigger/./node_modules/js-yaml/lib/type/omap.js","../webpack://spinnaker-pipeline-trigger/./node_modules/js-yaml/lib/type/pairs.js","../webpack://spinnaker-pipeline-trigger/./node_modules/js-yaml/lib/type/seq.js","../webpack://spinnaker-pipeline-trigger/./node_modules/js-yaml/lib/type/set.js","../webpack://spinnaker-pipeline-trigger/./node_modules/js-yaml/lib/type/str.js","../webpack://spinnaker-pipeline-trigger/./node_modules/js-yaml/lib/type/timestamp.js","../webpack://spinnaker-pipeline-trigger/./node_modules/tslib/tslib.js","../webpack://spinnaker-pipeline-trigger/./node_modules/@vercel/ncc/dist/ncc/@@notfound.js","../webpack://spinnaker-pipeline-trigger/external \"buffer\"","../webpack://spinnaker-pipeline-trigger/external \"child_process\"","../webpack://spinnaker-pipeline-trigger/external \"crypto\"","../webpack://spinnaker-pipeline-trigger/external \"fs\"","../webpack://spinnaker-pipeline-trigger/external \"http\"","../webpack://spinnaker-pipeline-trigger/external \"http2\"","../webpack://spinnaker-pipeline-trigger/external \"https\"","../webpack://spinnaker-pipeline-trigger/external \"os\"","../webpack://spinnaker-pipeline-trigger/external \"path\"","../webpack://spinnaker-pipeline-trigger/external \"process\"","../webpack://spinnaker-pipeline-trigger/external \"stream\"","../webpack://spinnaker-pipeline-trigger/external \"url\"","../webpack://spinnaker-pipeline-trigger/webpack/bootstrap","../webpack://spinnaker-pipeline-trigger/webpack/runtime/compat","../webpack://spinnaker-pipeline-trigger/./lib/index.js"],"sourcesContent":["\"use strict\";\n/*\nCopyright 2021 Expedia, Inc.\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    https://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.run = void 0;\nconst core = __importStar(require(\"@actions/core\"));\nconst yaml = __importStar(require(\"js-yaml\"));\nconst client_sns_1 = require(\"@aws-sdk/client-sns\");\nfunction publish(message, topicArn, region) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const messageString = JSON.stringify(message);\n        core.debug(messageString);\n        const input = {\n            Message: messageString,\n            TopicArn: topicArn\n        };\n        const config = { region };\n        const client = new client_sns_1.SNSClient(config);\n        const command = new client_sns_1.PublishCommand(input);\n        const response = yield client.send(command);\n        core.debug(JSON.stringify(response.MessageId));\n        return JSON.stringify(response.MessageId);\n    });\n}\nfunction constructMessage() {\n    const repository = process.env.GITHUB_REPOSITORY;\n    const commit = process.env.GITHUB_SHA;\n    const ref = process.env.GITHUB_REF || '';\n    const githubAction = process.env.GITHUB_ACTION || '';\n    const githubEventName = process.env.GITHUB_EVENT_NAME || '';\n    const githubActor = process.env.GITHUB_ACTOR || '';\n    const parameters = yaml.load(core.getInput('parameters')) || {};\n    const messageAttributes = core.getInput('message_attributes') || {};\n    return {\n        repository,\n        commit,\n        ref,\n        githubEventName,\n        githubActor,\n        githubAction,\n        parameters,\n        messageAttributes\n    };\n}\nfunction run() {\n    return __awaiter(this, void 0, void 0, function* () {\n        core.info('Spinnaker Pipeline Trigger :shipit:');\n        const topicArn = core.getInput('topic_arn');\n        const region = core.getInput('aws_region') || 'us-west-2';\n        try {\n            if (!topicArn) {\n                throw new Error('Topic ARN is required.');\n            }\n            const message = constructMessage();\n            core.debug(JSON.stringify(message));\n            yield publish(message, topicArn, region);\n        }\n        catch (error) {\n            core.warning('Failed to publish message.');\n            core.setFailed(error.message);\n        }\n    });\n}\nexports.run = run;\n//# sourceMappingURL=main.js.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.issue = exports.issueCommand = void 0;\nconst os = __importStar(require(\"os\"));\nconst utils_1 = require(\"./utils\");\n/**\n * Commands\n *\n * Command Format:\n *   ::name key=value,key=value::message\n *\n * Examples:\n *   ::warning::This is the message\n *   ::set-env name=MY_VAR::some value\n */\nfunction issueCommand(command, properties, message) {\n    const cmd = new Command(command, properties, message);\n    process.stdout.write(cmd.toString() + os.EOL);\n}\nexports.issueCommand = issueCommand;\nfunction issue(name, message = '') {\n    issueCommand(name, {}, message);\n}\nexports.issue = issue;\nconst CMD_STRING = '::';\nclass Command {\n    constructor(command, properties, message) {\n        if (!command) {\n            command = 'missing.command';\n        }\n        this.command = command;\n        this.properties = properties;\n        this.message = message;\n    }\n    toString() {\n        let cmdStr = CMD_STRING + this.command;\n        if (this.properties && Object.keys(this.properties).length > 0) {\n            cmdStr += ' ';\n            let first = true;\n            for (const key in this.properties) {\n                if (this.properties.hasOwnProperty(key)) {\n                    const val = this.properties[key];\n                    if (val) {\n                        if (first) {\n                            first = false;\n                        }\n                        else {\n                            cmdStr += ',';\n                        }\n                        cmdStr += `${key}=${escapeProperty(val)}`;\n                    }\n                }\n            }\n        }\n        cmdStr += `${CMD_STRING}${escapeData(this.message)}`;\n        return cmdStr;\n    }\n}\nfunction escapeData(s) {\n    return utils_1.toCommandValue(s)\n        .replace(/%/g, '%25')\n        .replace(/\\r/g, '%0D')\n        .replace(/\\n/g, '%0A');\n}\nfunction escapeProperty(s) {\n    return utils_1.toCommandValue(s)\n        .replace(/%/g, '%25')\n        .replace(/\\r/g, '%0D')\n        .replace(/\\n/g, '%0A')\n        .replace(/:/g, '%3A')\n        .replace(/,/g, '%2C');\n}\n//# sourceMappingURL=command.js.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getState = exports.saveState = exports.group = exports.endGroup = exports.startGroup = exports.info = exports.warning = exports.error = exports.debug = exports.isDebug = exports.setFailed = exports.setCommandEcho = exports.setOutput = exports.getBooleanInput = exports.getMultilineInput = exports.getInput = exports.addPath = exports.setSecret = exports.exportVariable = exports.ExitCode = void 0;\nconst command_1 = require(\"./command\");\nconst file_command_1 = require(\"./file-command\");\nconst utils_1 = require(\"./utils\");\nconst os = __importStar(require(\"os\"));\nconst path = __importStar(require(\"path\"));\n/**\n * The code to exit an action\n */\nvar ExitCode;\n(function (ExitCode) {\n    /**\n     * A code indicating that the action was successful\n     */\n    ExitCode[ExitCode[\"Success\"] = 0] = \"Success\";\n    /**\n     * A code indicating that the action was a failure\n     */\n    ExitCode[ExitCode[\"Failure\"] = 1] = \"Failure\";\n})(ExitCode = exports.ExitCode || (exports.ExitCode = {}));\n//-----------------------------------------------------------------------\n// Variables\n//-----------------------------------------------------------------------\n/**\n * Sets env variable for this action and future actions in the job\n * @param name the name of the variable to set\n * @param val the value of the variable. Non-string values will be converted to a string via JSON.stringify\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction exportVariable(name, val) {\n    const convertedVal = utils_1.toCommandValue(val);\n    process.env[name] = convertedVal;\n    const filePath = process.env['GITHUB_ENV'] || '';\n    if (filePath) {\n        const delimiter = '_GitHubActionsFileCommandDelimeter_';\n        const commandValue = `${name}<<${delimiter}${os.EOL}${convertedVal}${os.EOL}${delimiter}`;\n        file_command_1.issueCommand('ENV', commandValue);\n    }\n    else {\n        command_1.issueCommand('set-env', { name }, convertedVal);\n    }\n}\nexports.exportVariable = exportVariable;\n/**\n * Registers a secret which will get masked from logs\n * @param secret value of the secret\n */\nfunction setSecret(secret) {\n    command_1.issueCommand('add-mask', {}, secret);\n}\nexports.setSecret = setSecret;\n/**\n * Prepends inputPath to the PATH (for this action and future actions)\n * @param inputPath\n */\nfunction addPath(inputPath) {\n    const filePath = process.env['GITHUB_PATH'] || '';\n    if (filePath) {\n        file_command_1.issueCommand('PATH', inputPath);\n    }\n    else {\n        command_1.issueCommand('add-path', {}, inputPath);\n    }\n    process.env['PATH'] = `${inputPath}${path.delimiter}${process.env['PATH']}`;\n}\nexports.addPath = addPath;\n/**\n * Gets the value of an input.\n * Unless trimWhitespace is set to false in InputOptions, the value is also trimmed.\n * Returns an empty string if the value is not defined.\n *\n * @param     name     name of the input to get\n * @param     options  optional. See InputOptions.\n * @returns   string\n */\nfunction getInput(name, options) {\n    const val = process.env[`INPUT_${name.replace(/ /g, '_').toUpperCase()}`] || '';\n    if (options && options.required && !val) {\n        throw new Error(`Input required and not supplied: ${name}`);\n    }\n    if (options && options.trimWhitespace === false) {\n        return val;\n    }\n    return val.trim();\n}\nexports.getInput = getInput;\n/**\n * Gets the values of an multiline input.  Each value is also trimmed.\n *\n * @param     name     name of the input to get\n * @param     options  optional. See InputOptions.\n * @returns   string[]\n *\n */\nfunction getMultilineInput(name, options) {\n    const inputs = getInput(name, options)\n        .split('\\n')\n        .filter(x => x !== '');\n    return inputs;\n}\nexports.getMultilineInput = getMultilineInput;\n/**\n * Gets the input value of the boolean type in the YAML 1.2 \"core schema\" specification.\n * Support boolean input list: `true | True | TRUE | false | False | FALSE` .\n * The return value is also in boolean type.\n * ref: https://yaml.org/spec/1.2/spec.html#id2804923\n *\n * @param     name     name of the input to get\n * @param     options  optional. See InputOptions.\n * @returns   boolean\n */\nfunction getBooleanInput(name, options) {\n    const trueValue = ['true', 'True', 'TRUE'];\n    const falseValue = ['false', 'False', 'FALSE'];\n    const val = getInput(name, options);\n    if (trueValue.includes(val))\n        return true;\n    if (falseValue.includes(val))\n        return false;\n    throw new TypeError(`Input does not meet YAML 1.2 \"Core Schema\" specification: ${name}\\n` +\n        `Support boolean input list: \\`true | True | TRUE | false | False | FALSE\\``);\n}\nexports.getBooleanInput = getBooleanInput;\n/**\n * Sets the value of an output.\n *\n * @param     name     name of the output to set\n * @param     value    value to store. Non-string values will be converted to a string via JSON.stringify\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction setOutput(name, value) {\n    process.stdout.write(os.EOL);\n    command_1.issueCommand('set-output', { name }, value);\n}\nexports.setOutput = setOutput;\n/**\n * Enables or disables the echoing of commands into stdout for the rest of the step.\n * Echoing is disabled by default if ACTIONS_STEP_DEBUG is not set.\n *\n */\nfunction setCommandEcho(enabled) {\n    command_1.issue('echo', enabled ? 'on' : 'off');\n}\nexports.setCommandEcho = setCommandEcho;\n//-----------------------------------------------------------------------\n// Results\n//-----------------------------------------------------------------------\n/**\n * Sets the action status to failed.\n * When the action exits it will be with an exit code of 1\n * @param message add error issue message\n */\nfunction setFailed(message) {\n    process.exitCode = ExitCode.Failure;\n    error(message);\n}\nexports.setFailed = setFailed;\n//-----------------------------------------------------------------------\n// Logging Commands\n//-----------------------------------------------------------------------\n/**\n * Gets whether Actions Step Debug is on or not\n */\nfunction isDebug() {\n    return process.env['RUNNER_DEBUG'] === '1';\n}\nexports.isDebug = isDebug;\n/**\n * Writes debug message to user log\n * @param message debug message\n */\nfunction debug(message) {\n    command_1.issueCommand('debug', {}, message);\n}\nexports.debug = debug;\n/**\n * Adds an error issue\n * @param message error issue message. Errors will be converted to string via toString()\n */\nfunction error(message) {\n    command_1.issue('error', message instanceof Error ? message.toString() : message);\n}\nexports.error = error;\n/**\n * Adds an warning issue\n * @param message warning issue message. Errors will be converted to string via toString()\n */\nfunction warning(message) {\n    command_1.issue('warning', message instanceof Error ? message.toString() : message);\n}\nexports.warning = warning;\n/**\n * Writes info to log with console.log.\n * @param message info message\n */\nfunction info(message) {\n    process.stdout.write(message + os.EOL);\n}\nexports.info = info;\n/**\n * Begin an output group.\n *\n * Output until the next `groupEnd` will be foldable in this group\n *\n * @param name The name of the output group\n */\nfunction startGroup(name) {\n    command_1.issue('group', name);\n}\nexports.startGroup = startGroup;\n/**\n * End an output group.\n */\nfunction endGroup() {\n    command_1.issue('endgroup');\n}\nexports.endGroup = endGroup;\n/**\n * Wrap an asynchronous function call in a group.\n *\n * Returns the same type as the function itself.\n *\n * @param name The name of the group\n * @param fn The function to wrap in the group\n */\nfunction group(name, fn) {\n    return __awaiter(this, void 0, void 0, function* () {\n        startGroup(name);\n        let result;\n        try {\n            result = yield fn();\n        }\n        finally {\n            endGroup();\n        }\n        return result;\n    });\n}\nexports.group = group;\n//-----------------------------------------------------------------------\n// Wrapper action state\n//-----------------------------------------------------------------------\n/**\n * Saves state for current action, the state can only be retrieved by this action's post job execution.\n *\n * @param     name     name of the state to store\n * @param     value    value to store. Non-string values will be converted to a string via JSON.stringify\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction saveState(name, value) {\n    command_1.issueCommand('save-state', { name }, value);\n}\nexports.saveState = saveState;\n/**\n * Gets the value of an state set by this action's main execution.\n *\n * @param     name     name of the state to get\n * @returns   string\n */\nfunction getState(name) {\n    return process.env[`STATE_${name}`] || '';\n}\nexports.getState = getState;\n//# sourceMappingURL=core.js.map","\"use strict\";\n// For internal use, subject to change.\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.issueCommand = void 0;\n// We use any as a valid input type\n/* eslint-disable @typescript-eslint/no-explicit-any */\nconst fs = __importStar(require(\"fs\"));\nconst os = __importStar(require(\"os\"));\nconst utils_1 = require(\"./utils\");\nfunction issueCommand(command, message) {\n    const filePath = process.env[`GITHUB_${command}`];\n    if (!filePath) {\n        throw new Error(`Unable to find environment variable for file command ${command}`);\n    }\n    if (!fs.existsSync(filePath)) {\n        throw new Error(`Missing file at path: ${filePath}`);\n    }\n    fs.appendFileSync(filePath, `${utils_1.toCommandValue(message)}${os.EOL}`, {\n        encoding: 'utf8'\n    });\n}\nexports.issueCommand = issueCommand;\n//# sourceMappingURL=file-command.js.map","\"use strict\";\n// We use any as a valid input type\n/* eslint-disable @typescript-eslint/no-explicit-any */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.toCommandValue = void 0;\n/**\n * Sanitizes an input into a string so it can be passed into issueCommand safely\n * @param input input to sanitize into a string\n */\nfunction toCommandValue(input) {\n    if (input === null || input === undefined) {\n        return '';\n    }\n    else if (typeof input === 'string' || input instanceof String) {\n        return input;\n    }\n    return JSON.stringify(input);\n}\nexports.toCommandValue = toCommandValue;\n//# sourceMappingURL=utils.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SNS = void 0;\nconst AddPermissionCommand_1 = require(\"./commands/AddPermissionCommand\");\nconst CheckIfPhoneNumberIsOptedOutCommand_1 = require(\"./commands/CheckIfPhoneNumberIsOptedOutCommand\");\nconst ConfirmSubscriptionCommand_1 = require(\"./commands/ConfirmSubscriptionCommand\");\nconst CreatePlatformApplicationCommand_1 = require(\"./commands/CreatePlatformApplicationCommand\");\nconst CreatePlatformEndpointCommand_1 = require(\"./commands/CreatePlatformEndpointCommand\");\nconst CreateSMSSandboxPhoneNumberCommand_1 = require(\"./commands/CreateSMSSandboxPhoneNumberCommand\");\nconst CreateTopicCommand_1 = require(\"./commands/CreateTopicCommand\");\nconst DeleteEndpointCommand_1 = require(\"./commands/DeleteEndpointCommand\");\nconst DeletePlatformApplicationCommand_1 = require(\"./commands/DeletePlatformApplicationCommand\");\nconst DeleteSMSSandboxPhoneNumberCommand_1 = require(\"./commands/DeleteSMSSandboxPhoneNumberCommand\");\nconst DeleteTopicCommand_1 = require(\"./commands/DeleteTopicCommand\");\nconst GetEndpointAttributesCommand_1 = require(\"./commands/GetEndpointAttributesCommand\");\nconst GetPlatformApplicationAttributesCommand_1 = require(\"./commands/GetPlatformApplicationAttributesCommand\");\nconst GetSMSAttributesCommand_1 = require(\"./commands/GetSMSAttributesCommand\");\nconst GetSMSSandboxAccountStatusCommand_1 = require(\"./commands/GetSMSSandboxAccountStatusCommand\");\nconst GetSubscriptionAttributesCommand_1 = require(\"./commands/GetSubscriptionAttributesCommand\");\nconst GetTopicAttributesCommand_1 = require(\"./commands/GetTopicAttributesCommand\");\nconst ListEndpointsByPlatformApplicationCommand_1 = require(\"./commands/ListEndpointsByPlatformApplicationCommand\");\nconst ListOriginationNumbersCommand_1 = require(\"./commands/ListOriginationNumbersCommand\");\nconst ListPhoneNumbersOptedOutCommand_1 = require(\"./commands/ListPhoneNumbersOptedOutCommand\");\nconst ListPlatformApplicationsCommand_1 = require(\"./commands/ListPlatformApplicationsCommand\");\nconst ListSMSSandboxPhoneNumbersCommand_1 = require(\"./commands/ListSMSSandboxPhoneNumbersCommand\");\nconst ListSubscriptionsByTopicCommand_1 = require(\"./commands/ListSubscriptionsByTopicCommand\");\nconst ListSubscriptionsCommand_1 = require(\"./commands/ListSubscriptionsCommand\");\nconst ListTagsForResourceCommand_1 = require(\"./commands/ListTagsForResourceCommand\");\nconst ListTopicsCommand_1 = require(\"./commands/ListTopicsCommand\");\nconst OptInPhoneNumberCommand_1 = require(\"./commands/OptInPhoneNumberCommand\");\nconst PublishBatchCommand_1 = require(\"./commands/PublishBatchCommand\");\nconst PublishCommand_1 = require(\"./commands/PublishCommand\");\nconst RemovePermissionCommand_1 = require(\"./commands/RemovePermissionCommand\");\nconst SetEndpointAttributesCommand_1 = require(\"./commands/SetEndpointAttributesCommand\");\nconst SetPlatformApplicationAttributesCommand_1 = require(\"./commands/SetPlatformApplicationAttributesCommand\");\nconst SetSMSAttributesCommand_1 = require(\"./commands/SetSMSAttributesCommand\");\nconst SetSubscriptionAttributesCommand_1 = require(\"./commands/SetSubscriptionAttributesCommand\");\nconst SetTopicAttributesCommand_1 = require(\"./commands/SetTopicAttributesCommand\");\nconst SubscribeCommand_1 = require(\"./commands/SubscribeCommand\");\nconst TagResourceCommand_1 = require(\"./commands/TagResourceCommand\");\nconst UnsubscribeCommand_1 = require(\"./commands/UnsubscribeCommand\");\nconst UntagResourceCommand_1 = require(\"./commands/UntagResourceCommand\");\nconst VerifySMSSandboxPhoneNumberCommand_1 = require(\"./commands/VerifySMSSandboxPhoneNumberCommand\");\nconst SNSClient_1 = require(\"./SNSClient\");\nclass SNS extends SNSClient_1.SNSClient {\n    addPermission(args, optionsOrCb, cb) {\n        const command = new AddPermissionCommand_1.AddPermissionCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    checkIfPhoneNumberIsOptedOut(args, optionsOrCb, cb) {\n        const command = new CheckIfPhoneNumberIsOptedOutCommand_1.CheckIfPhoneNumberIsOptedOutCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    confirmSubscription(args, optionsOrCb, cb) {\n        const command = new ConfirmSubscriptionCommand_1.ConfirmSubscriptionCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    createPlatformApplication(args, optionsOrCb, cb) {\n        const command = new CreatePlatformApplicationCommand_1.CreatePlatformApplicationCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    createPlatformEndpoint(args, optionsOrCb, cb) {\n        const command = new CreatePlatformEndpointCommand_1.CreatePlatformEndpointCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    createSMSSandboxPhoneNumber(args, optionsOrCb, cb) {\n        const command = new CreateSMSSandboxPhoneNumberCommand_1.CreateSMSSandboxPhoneNumberCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    createTopic(args, optionsOrCb, cb) {\n        const command = new CreateTopicCommand_1.CreateTopicCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    deleteEndpoint(args, optionsOrCb, cb) {\n        const command = new DeleteEndpointCommand_1.DeleteEndpointCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    deletePlatformApplication(args, optionsOrCb, cb) {\n        const command = new DeletePlatformApplicationCommand_1.DeletePlatformApplicationCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    deleteSMSSandboxPhoneNumber(args, optionsOrCb, cb) {\n        const command = new DeleteSMSSandboxPhoneNumberCommand_1.DeleteSMSSandboxPhoneNumberCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    deleteTopic(args, optionsOrCb, cb) {\n        const command = new DeleteTopicCommand_1.DeleteTopicCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    getEndpointAttributes(args, optionsOrCb, cb) {\n        const command = new GetEndpointAttributesCommand_1.GetEndpointAttributesCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    getPlatformApplicationAttributes(args, optionsOrCb, cb) {\n        const command = new GetPlatformApplicationAttributesCommand_1.GetPlatformApplicationAttributesCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    getSMSAttributes(args, optionsOrCb, cb) {\n        const command = new GetSMSAttributesCommand_1.GetSMSAttributesCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    getSMSSandboxAccountStatus(args, optionsOrCb, cb) {\n        const command = new GetSMSSandboxAccountStatusCommand_1.GetSMSSandboxAccountStatusCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    getSubscriptionAttributes(args, optionsOrCb, cb) {\n        const command = new GetSubscriptionAttributesCommand_1.GetSubscriptionAttributesCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    getTopicAttributes(args, optionsOrCb, cb) {\n        const command = new GetTopicAttributesCommand_1.GetTopicAttributesCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    listEndpointsByPlatformApplication(args, optionsOrCb, cb) {\n        const command = new ListEndpointsByPlatformApplicationCommand_1.ListEndpointsByPlatformApplicationCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    listOriginationNumbers(args, optionsOrCb, cb) {\n        const command = new ListOriginationNumbersCommand_1.ListOriginationNumbersCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    listPhoneNumbersOptedOut(args, optionsOrCb, cb) {\n        const command = new ListPhoneNumbersOptedOutCommand_1.ListPhoneNumbersOptedOutCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    listPlatformApplications(args, optionsOrCb, cb) {\n        const command = new ListPlatformApplicationsCommand_1.ListPlatformApplicationsCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    listSMSSandboxPhoneNumbers(args, optionsOrCb, cb) {\n        const command = new ListSMSSandboxPhoneNumbersCommand_1.ListSMSSandboxPhoneNumbersCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    listSubscriptions(args, optionsOrCb, cb) {\n        const command = new ListSubscriptionsCommand_1.ListSubscriptionsCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    listSubscriptionsByTopic(args, optionsOrCb, cb) {\n        const command = new ListSubscriptionsByTopicCommand_1.ListSubscriptionsByTopicCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    listTagsForResource(args, optionsOrCb, cb) {\n        const command = new ListTagsForResourceCommand_1.ListTagsForResourceCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    listTopics(args, optionsOrCb, cb) {\n        const command = new ListTopicsCommand_1.ListTopicsCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    optInPhoneNumber(args, optionsOrCb, cb) {\n        const command = new OptInPhoneNumberCommand_1.OptInPhoneNumberCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    publish(args, optionsOrCb, cb) {\n        const command = new PublishCommand_1.PublishCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    publishBatch(args, optionsOrCb, cb) {\n        const command = new PublishBatchCommand_1.PublishBatchCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    removePermission(args, optionsOrCb, cb) {\n        const command = new RemovePermissionCommand_1.RemovePermissionCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    setEndpointAttributes(args, optionsOrCb, cb) {\n        const command = new SetEndpointAttributesCommand_1.SetEndpointAttributesCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    setPlatformApplicationAttributes(args, optionsOrCb, cb) {\n        const command = new SetPlatformApplicationAttributesCommand_1.SetPlatformApplicationAttributesCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    setSMSAttributes(args, optionsOrCb, cb) {\n        const command = new SetSMSAttributesCommand_1.SetSMSAttributesCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    setSubscriptionAttributes(args, optionsOrCb, cb) {\n        const command = new SetSubscriptionAttributesCommand_1.SetSubscriptionAttributesCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    setTopicAttributes(args, optionsOrCb, cb) {\n        const command = new SetTopicAttributesCommand_1.SetTopicAttributesCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    subscribe(args, optionsOrCb, cb) {\n        const command = new SubscribeCommand_1.SubscribeCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    tagResource(args, optionsOrCb, cb) {\n        const command = new TagResourceCommand_1.TagResourceCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    unsubscribe(args, optionsOrCb, cb) {\n        const command = new UnsubscribeCommand_1.UnsubscribeCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    untagResource(args, optionsOrCb, cb) {\n        const command = new UntagResourceCommand_1.UntagResourceCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    verifySMSSandboxPhoneNumber(args, optionsOrCb, cb) {\n        const command = new VerifySMSSandboxPhoneNumberCommand_1.VerifySMSSandboxPhoneNumberCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n}\nexports.SNS = SNS;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SNSClient = void 0;\nconst config_resolver_1 = require(\"@aws-sdk/config-resolver\");\nconst middleware_content_length_1 = require(\"@aws-sdk/middleware-content-length\");\nconst middleware_host_header_1 = require(\"@aws-sdk/middleware-host-header\");\nconst middleware_logger_1 = require(\"@aws-sdk/middleware-logger\");\nconst middleware_retry_1 = require(\"@aws-sdk/middleware-retry\");\nconst middleware_signing_1 = require(\"@aws-sdk/middleware-signing\");\nconst middleware_user_agent_1 = require(\"@aws-sdk/middleware-user-agent\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\nconst runtimeConfig_1 = require(\"./runtimeConfig\");\nclass SNSClient extends smithy_client_1.Client {\n    constructor(configuration) {\n        const _config_0 = runtimeConfig_1.getRuntimeConfig(configuration);\n        const _config_1 = config_resolver_1.resolveRegionConfig(_config_0);\n        const _config_2 = config_resolver_1.resolveEndpointsConfig(_config_1);\n        const _config_3 = middleware_retry_1.resolveRetryConfig(_config_2);\n        const _config_4 = middleware_host_header_1.resolveHostHeaderConfig(_config_3);\n        const _config_5 = middleware_signing_1.resolveAwsAuthConfig(_config_4);\n        const _config_6 = middleware_user_agent_1.resolveUserAgentConfig(_config_5);\n        super(_config_6);\n        this.config = _config_6;\n        this.middlewareStack.use(middleware_retry_1.getRetryPlugin(this.config));\n        this.middlewareStack.use(middleware_content_length_1.getContentLengthPlugin(this.config));\n        this.middlewareStack.use(middleware_host_header_1.getHostHeaderPlugin(this.config));\n        this.middlewareStack.use(middleware_logger_1.getLoggerPlugin(this.config));\n        this.middlewareStack.use(middleware_signing_1.getAwsAuthPlugin(this.config));\n        this.middlewareStack.use(middleware_user_agent_1.getUserAgentPlugin(this.config));\n    }\n    destroy() {\n        super.destroy();\n    }\n}\nexports.SNSClient = SNSClient;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AddPermissionCommand = void 0;\nconst middleware_serde_1 = require(\"@aws-sdk/middleware-serde\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\nconst models_0_1 = require(\"../models/models_0\");\nconst Aws_query_1 = require(\"../protocols/Aws_query\");\nclass AddPermissionCommand extends smithy_client_1.Command {\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use(middleware_serde_1.getSerdePlugin(configuration, this.serialize, this.deserialize));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"SNSClient\";\n        const commandName = \"AddPermissionCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: models_0_1.AddPermissionInput.filterSensitiveLog,\n            outputFilterSensitiveLog: (output) => output,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return Aws_query_1.serializeAws_queryAddPermissionCommand(input, context);\n    }\n    deserialize(output, context) {\n        return Aws_query_1.deserializeAws_queryAddPermissionCommand(output, context);\n    }\n}\nexports.AddPermissionCommand = AddPermissionCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CheckIfPhoneNumberIsOptedOutCommand = void 0;\nconst middleware_serde_1 = require(\"@aws-sdk/middleware-serde\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\nconst models_0_1 = require(\"../models/models_0\");\nconst Aws_query_1 = require(\"../protocols/Aws_query\");\nclass CheckIfPhoneNumberIsOptedOutCommand extends smithy_client_1.Command {\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use(middleware_serde_1.getSerdePlugin(configuration, this.serialize, this.deserialize));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"SNSClient\";\n        const commandName = \"CheckIfPhoneNumberIsOptedOutCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: models_0_1.CheckIfPhoneNumberIsOptedOutInput.filterSensitiveLog,\n            outputFilterSensitiveLog: models_0_1.CheckIfPhoneNumberIsOptedOutResponse.filterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return Aws_query_1.serializeAws_queryCheckIfPhoneNumberIsOptedOutCommand(input, context);\n    }\n    deserialize(output, context) {\n        return Aws_query_1.deserializeAws_queryCheckIfPhoneNumberIsOptedOutCommand(output, context);\n    }\n}\nexports.CheckIfPhoneNumberIsOptedOutCommand = CheckIfPhoneNumberIsOptedOutCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ConfirmSubscriptionCommand = void 0;\nconst middleware_serde_1 = require(\"@aws-sdk/middleware-serde\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\nconst models_0_1 = require(\"../models/models_0\");\nconst Aws_query_1 = require(\"../protocols/Aws_query\");\nclass ConfirmSubscriptionCommand extends smithy_client_1.Command {\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use(middleware_serde_1.getSerdePlugin(configuration, this.serialize, this.deserialize));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"SNSClient\";\n        const commandName = \"ConfirmSubscriptionCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: models_0_1.ConfirmSubscriptionInput.filterSensitiveLog,\n            outputFilterSensitiveLog: models_0_1.ConfirmSubscriptionResponse.filterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return Aws_query_1.serializeAws_queryConfirmSubscriptionCommand(input, context);\n    }\n    deserialize(output, context) {\n        return Aws_query_1.deserializeAws_queryConfirmSubscriptionCommand(output, context);\n    }\n}\nexports.ConfirmSubscriptionCommand = ConfirmSubscriptionCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CreatePlatformApplicationCommand = void 0;\nconst middleware_serde_1 = require(\"@aws-sdk/middleware-serde\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\nconst models_0_1 = require(\"../models/models_0\");\nconst Aws_query_1 = require(\"../protocols/Aws_query\");\nclass CreatePlatformApplicationCommand extends smithy_client_1.Command {\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use(middleware_serde_1.getSerdePlugin(configuration, this.serialize, this.deserialize));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"SNSClient\";\n        const commandName = \"CreatePlatformApplicationCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: models_0_1.CreatePlatformApplicationInput.filterSensitiveLog,\n            outputFilterSensitiveLog: models_0_1.CreatePlatformApplicationResponse.filterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return Aws_query_1.serializeAws_queryCreatePlatformApplicationCommand(input, context);\n    }\n    deserialize(output, context) {\n        return Aws_query_1.deserializeAws_queryCreatePlatformApplicationCommand(output, context);\n    }\n}\nexports.CreatePlatformApplicationCommand = CreatePlatformApplicationCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CreatePlatformEndpointCommand = void 0;\nconst middleware_serde_1 = require(\"@aws-sdk/middleware-serde\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\nconst models_0_1 = require(\"../models/models_0\");\nconst Aws_query_1 = require(\"../protocols/Aws_query\");\nclass CreatePlatformEndpointCommand extends smithy_client_1.Command {\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use(middleware_serde_1.getSerdePlugin(configuration, this.serialize, this.deserialize));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"SNSClient\";\n        const commandName = \"CreatePlatformEndpointCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: models_0_1.CreatePlatformEndpointInput.filterSensitiveLog,\n            outputFilterSensitiveLog: models_0_1.CreateEndpointResponse.filterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return Aws_query_1.serializeAws_queryCreatePlatformEndpointCommand(input, context);\n    }\n    deserialize(output, context) {\n        return Aws_query_1.deserializeAws_queryCreatePlatformEndpointCommand(output, context);\n    }\n}\nexports.CreatePlatformEndpointCommand = CreatePlatformEndpointCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CreateSMSSandboxPhoneNumberCommand = void 0;\nconst middleware_serde_1 = require(\"@aws-sdk/middleware-serde\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\nconst models_0_1 = require(\"../models/models_0\");\nconst Aws_query_1 = require(\"../protocols/Aws_query\");\nclass CreateSMSSandboxPhoneNumberCommand extends smithy_client_1.Command {\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use(middleware_serde_1.getSerdePlugin(configuration, this.serialize, this.deserialize));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"SNSClient\";\n        const commandName = \"CreateSMSSandboxPhoneNumberCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: models_0_1.CreateSMSSandboxPhoneNumberInput.filterSensitiveLog,\n            outputFilterSensitiveLog: models_0_1.CreateSMSSandboxPhoneNumberResult.filterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return Aws_query_1.serializeAws_queryCreateSMSSandboxPhoneNumberCommand(input, context);\n    }\n    deserialize(output, context) {\n        return Aws_query_1.deserializeAws_queryCreateSMSSandboxPhoneNumberCommand(output, context);\n    }\n}\nexports.CreateSMSSandboxPhoneNumberCommand = CreateSMSSandboxPhoneNumberCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CreateTopicCommand = void 0;\nconst middleware_serde_1 = require(\"@aws-sdk/middleware-serde\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\nconst models_0_1 = require(\"../models/models_0\");\nconst Aws_query_1 = require(\"../protocols/Aws_query\");\nclass CreateTopicCommand extends smithy_client_1.Command {\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use(middleware_serde_1.getSerdePlugin(configuration, this.serialize, this.deserialize));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"SNSClient\";\n        const commandName = \"CreateTopicCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: models_0_1.CreateTopicInput.filterSensitiveLog,\n            outputFilterSensitiveLog: models_0_1.CreateTopicResponse.filterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return Aws_query_1.serializeAws_queryCreateTopicCommand(input, context);\n    }\n    deserialize(output, context) {\n        return Aws_query_1.deserializeAws_queryCreateTopicCommand(output, context);\n    }\n}\nexports.CreateTopicCommand = CreateTopicCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DeleteEndpointCommand = void 0;\nconst middleware_serde_1 = require(\"@aws-sdk/middleware-serde\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\nconst models_0_1 = require(\"../models/models_0\");\nconst Aws_query_1 = require(\"../protocols/Aws_query\");\nclass DeleteEndpointCommand extends smithy_client_1.Command {\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use(middleware_serde_1.getSerdePlugin(configuration, this.serialize, this.deserialize));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"SNSClient\";\n        const commandName = \"DeleteEndpointCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: models_0_1.DeleteEndpointInput.filterSensitiveLog,\n            outputFilterSensitiveLog: (output) => output,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return Aws_query_1.serializeAws_queryDeleteEndpointCommand(input, context);\n    }\n    deserialize(output, context) {\n        return Aws_query_1.deserializeAws_queryDeleteEndpointCommand(output, context);\n    }\n}\nexports.DeleteEndpointCommand = DeleteEndpointCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DeletePlatformApplicationCommand = void 0;\nconst middleware_serde_1 = require(\"@aws-sdk/middleware-serde\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\nconst models_0_1 = require(\"../models/models_0\");\nconst Aws_query_1 = require(\"../protocols/Aws_query\");\nclass DeletePlatformApplicationCommand extends smithy_client_1.Command {\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use(middleware_serde_1.getSerdePlugin(configuration, this.serialize, this.deserialize));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"SNSClient\";\n        const commandName = \"DeletePlatformApplicationCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: models_0_1.DeletePlatformApplicationInput.filterSensitiveLog,\n            outputFilterSensitiveLog: (output) => output,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return Aws_query_1.serializeAws_queryDeletePlatformApplicationCommand(input, context);\n    }\n    deserialize(output, context) {\n        return Aws_query_1.deserializeAws_queryDeletePlatformApplicationCommand(output, context);\n    }\n}\nexports.DeletePlatformApplicationCommand = DeletePlatformApplicationCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DeleteSMSSandboxPhoneNumberCommand = void 0;\nconst middleware_serde_1 = require(\"@aws-sdk/middleware-serde\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\nconst models_0_1 = require(\"../models/models_0\");\nconst Aws_query_1 = require(\"../protocols/Aws_query\");\nclass DeleteSMSSandboxPhoneNumberCommand extends smithy_client_1.Command {\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use(middleware_serde_1.getSerdePlugin(configuration, this.serialize, this.deserialize));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"SNSClient\";\n        const commandName = \"DeleteSMSSandboxPhoneNumberCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: models_0_1.DeleteSMSSandboxPhoneNumberInput.filterSensitiveLog,\n            outputFilterSensitiveLog: models_0_1.DeleteSMSSandboxPhoneNumberResult.filterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return Aws_query_1.serializeAws_queryDeleteSMSSandboxPhoneNumberCommand(input, context);\n    }\n    deserialize(output, context) {\n        return Aws_query_1.deserializeAws_queryDeleteSMSSandboxPhoneNumberCommand(output, context);\n    }\n}\nexports.DeleteSMSSandboxPhoneNumberCommand = DeleteSMSSandboxPhoneNumberCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DeleteTopicCommand = void 0;\nconst middleware_serde_1 = require(\"@aws-sdk/middleware-serde\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\nconst models_0_1 = require(\"../models/models_0\");\nconst Aws_query_1 = require(\"../protocols/Aws_query\");\nclass DeleteTopicCommand extends smithy_client_1.Command {\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use(middleware_serde_1.getSerdePlugin(configuration, this.serialize, this.deserialize));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"SNSClient\";\n        const commandName = \"DeleteTopicCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: models_0_1.DeleteTopicInput.filterSensitiveLog,\n            outputFilterSensitiveLog: (output) => output,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return Aws_query_1.serializeAws_queryDeleteTopicCommand(input, context);\n    }\n    deserialize(output, context) {\n        return Aws_query_1.deserializeAws_queryDeleteTopicCommand(output, context);\n    }\n}\nexports.DeleteTopicCommand = DeleteTopicCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.GetEndpointAttributesCommand = void 0;\nconst middleware_serde_1 = require(\"@aws-sdk/middleware-serde\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\nconst models_0_1 = require(\"../models/models_0\");\nconst Aws_query_1 = require(\"../protocols/Aws_query\");\nclass GetEndpointAttributesCommand extends smithy_client_1.Command {\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use(middleware_serde_1.getSerdePlugin(configuration, this.serialize, this.deserialize));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"SNSClient\";\n        const commandName = \"GetEndpointAttributesCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: models_0_1.GetEndpointAttributesInput.filterSensitiveLog,\n            outputFilterSensitiveLog: models_0_1.GetEndpointAttributesResponse.filterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return Aws_query_1.serializeAws_queryGetEndpointAttributesCommand(input, context);\n    }\n    deserialize(output, context) {\n        return Aws_query_1.deserializeAws_queryGetEndpointAttributesCommand(output, context);\n    }\n}\nexports.GetEndpointAttributesCommand = GetEndpointAttributesCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.GetPlatformApplicationAttributesCommand = void 0;\nconst middleware_serde_1 = require(\"@aws-sdk/middleware-serde\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\nconst models_0_1 = require(\"../models/models_0\");\nconst Aws_query_1 = require(\"../protocols/Aws_query\");\nclass GetPlatformApplicationAttributesCommand extends smithy_client_1.Command {\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use(middleware_serde_1.getSerdePlugin(configuration, this.serialize, this.deserialize));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"SNSClient\";\n        const commandName = \"GetPlatformApplicationAttributesCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: models_0_1.GetPlatformApplicationAttributesInput.filterSensitiveLog,\n            outputFilterSensitiveLog: models_0_1.GetPlatformApplicationAttributesResponse.filterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return Aws_query_1.serializeAws_queryGetPlatformApplicationAttributesCommand(input, context);\n    }\n    deserialize(output, context) {\n        return Aws_query_1.deserializeAws_queryGetPlatformApplicationAttributesCommand(output, context);\n    }\n}\nexports.GetPlatformApplicationAttributesCommand = GetPlatformApplicationAttributesCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.GetSMSAttributesCommand = void 0;\nconst middleware_serde_1 = require(\"@aws-sdk/middleware-serde\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\nconst models_0_1 = require(\"../models/models_0\");\nconst Aws_query_1 = require(\"../protocols/Aws_query\");\nclass GetSMSAttributesCommand extends smithy_client_1.Command {\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use(middleware_serde_1.getSerdePlugin(configuration, this.serialize, this.deserialize));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"SNSClient\";\n        const commandName = \"GetSMSAttributesCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: models_0_1.GetSMSAttributesInput.filterSensitiveLog,\n            outputFilterSensitiveLog: models_0_1.GetSMSAttributesResponse.filterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return Aws_query_1.serializeAws_queryGetSMSAttributesCommand(input, context);\n    }\n    deserialize(output, context) {\n        return Aws_query_1.deserializeAws_queryGetSMSAttributesCommand(output, context);\n    }\n}\nexports.GetSMSAttributesCommand = GetSMSAttributesCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.GetSMSSandboxAccountStatusCommand = void 0;\nconst middleware_serde_1 = require(\"@aws-sdk/middleware-serde\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\nconst models_0_1 = require(\"../models/models_0\");\nconst Aws_query_1 = require(\"../protocols/Aws_query\");\nclass GetSMSSandboxAccountStatusCommand extends smithy_client_1.Command {\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use(middleware_serde_1.getSerdePlugin(configuration, this.serialize, this.deserialize));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"SNSClient\";\n        const commandName = \"GetSMSSandboxAccountStatusCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: models_0_1.GetSMSSandboxAccountStatusInput.filterSensitiveLog,\n            outputFilterSensitiveLog: models_0_1.GetSMSSandboxAccountStatusResult.filterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return Aws_query_1.serializeAws_queryGetSMSSandboxAccountStatusCommand(input, context);\n    }\n    deserialize(output, context) {\n        return Aws_query_1.deserializeAws_queryGetSMSSandboxAccountStatusCommand(output, context);\n    }\n}\nexports.GetSMSSandboxAccountStatusCommand = GetSMSSandboxAccountStatusCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.GetSubscriptionAttributesCommand = void 0;\nconst middleware_serde_1 = require(\"@aws-sdk/middleware-serde\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\nconst models_0_1 = require(\"../models/models_0\");\nconst Aws_query_1 = require(\"../protocols/Aws_query\");\nclass GetSubscriptionAttributesCommand extends smithy_client_1.Command {\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use(middleware_serde_1.getSerdePlugin(configuration, this.serialize, this.deserialize));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"SNSClient\";\n        const commandName = \"GetSubscriptionAttributesCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: models_0_1.GetSubscriptionAttributesInput.filterSensitiveLog,\n            outputFilterSensitiveLog: models_0_1.GetSubscriptionAttributesResponse.filterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return Aws_query_1.serializeAws_queryGetSubscriptionAttributesCommand(input, context);\n    }\n    deserialize(output, context) {\n        return Aws_query_1.deserializeAws_queryGetSubscriptionAttributesCommand(output, context);\n    }\n}\nexports.GetSubscriptionAttributesCommand = GetSubscriptionAttributesCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.GetTopicAttributesCommand = void 0;\nconst middleware_serde_1 = require(\"@aws-sdk/middleware-serde\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\nconst models_0_1 = require(\"../models/models_0\");\nconst Aws_query_1 = require(\"../protocols/Aws_query\");\nclass GetTopicAttributesCommand extends smithy_client_1.Command {\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use(middleware_serde_1.getSerdePlugin(configuration, this.serialize, this.deserialize));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"SNSClient\";\n        const commandName = \"GetTopicAttributesCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: models_0_1.GetTopicAttributesInput.filterSensitiveLog,\n            outputFilterSensitiveLog: models_0_1.GetTopicAttributesResponse.filterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return Aws_query_1.serializeAws_queryGetTopicAttributesCommand(input, context);\n    }\n    deserialize(output, context) {\n        return Aws_query_1.deserializeAws_queryGetTopicAttributesCommand(output, context);\n    }\n}\nexports.GetTopicAttributesCommand = GetTopicAttributesCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ListEndpointsByPlatformApplicationCommand = void 0;\nconst middleware_serde_1 = require(\"@aws-sdk/middleware-serde\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\nconst models_0_1 = require(\"../models/models_0\");\nconst Aws_query_1 = require(\"../protocols/Aws_query\");\nclass ListEndpointsByPlatformApplicationCommand extends smithy_client_1.Command {\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use(middleware_serde_1.getSerdePlugin(configuration, this.serialize, this.deserialize));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"SNSClient\";\n        const commandName = \"ListEndpointsByPlatformApplicationCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: models_0_1.ListEndpointsByPlatformApplicationInput.filterSensitiveLog,\n            outputFilterSensitiveLog: models_0_1.ListEndpointsByPlatformApplicationResponse.filterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return Aws_query_1.serializeAws_queryListEndpointsByPlatformApplicationCommand(input, context);\n    }\n    deserialize(output, context) {\n        return Aws_query_1.deserializeAws_queryListEndpointsByPlatformApplicationCommand(output, context);\n    }\n}\nexports.ListEndpointsByPlatformApplicationCommand = ListEndpointsByPlatformApplicationCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ListOriginationNumbersCommand = void 0;\nconst middleware_serde_1 = require(\"@aws-sdk/middleware-serde\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\nconst models_0_1 = require(\"../models/models_0\");\nconst Aws_query_1 = require(\"../protocols/Aws_query\");\nclass ListOriginationNumbersCommand extends smithy_client_1.Command {\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use(middleware_serde_1.getSerdePlugin(configuration, this.serialize, this.deserialize));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"SNSClient\";\n        const commandName = \"ListOriginationNumbersCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: models_0_1.ListOriginationNumbersRequest.filterSensitiveLog,\n            outputFilterSensitiveLog: models_0_1.ListOriginationNumbersResult.filterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return Aws_query_1.serializeAws_queryListOriginationNumbersCommand(input, context);\n    }\n    deserialize(output, context) {\n        return Aws_query_1.deserializeAws_queryListOriginationNumbersCommand(output, context);\n    }\n}\nexports.ListOriginationNumbersCommand = ListOriginationNumbersCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ListPhoneNumbersOptedOutCommand = void 0;\nconst middleware_serde_1 = require(\"@aws-sdk/middleware-serde\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\nconst models_0_1 = require(\"../models/models_0\");\nconst Aws_query_1 = require(\"../protocols/Aws_query\");\nclass ListPhoneNumbersOptedOutCommand extends smithy_client_1.Command {\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use(middleware_serde_1.getSerdePlugin(configuration, this.serialize, this.deserialize));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"SNSClient\";\n        const commandName = \"ListPhoneNumbersOptedOutCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: models_0_1.ListPhoneNumbersOptedOutInput.filterSensitiveLog,\n            outputFilterSensitiveLog: models_0_1.ListPhoneNumbersOptedOutResponse.filterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return Aws_query_1.serializeAws_queryListPhoneNumbersOptedOutCommand(input, context);\n    }\n    deserialize(output, context) {\n        return Aws_query_1.deserializeAws_queryListPhoneNumbersOptedOutCommand(output, context);\n    }\n}\nexports.ListPhoneNumbersOptedOutCommand = ListPhoneNumbersOptedOutCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ListPlatformApplicationsCommand = void 0;\nconst middleware_serde_1 = require(\"@aws-sdk/middleware-serde\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\nconst models_0_1 = require(\"../models/models_0\");\nconst Aws_query_1 = require(\"../protocols/Aws_query\");\nclass ListPlatformApplicationsCommand extends smithy_client_1.Command {\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use(middleware_serde_1.getSerdePlugin(configuration, this.serialize, this.deserialize));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"SNSClient\";\n        const commandName = \"ListPlatformApplicationsCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: models_0_1.ListPlatformApplicationsInput.filterSensitiveLog,\n            outputFilterSensitiveLog: models_0_1.ListPlatformApplicationsResponse.filterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return Aws_query_1.serializeAws_queryListPlatformApplicationsCommand(input, context);\n    }\n    deserialize(output, context) {\n        return Aws_query_1.deserializeAws_queryListPlatformApplicationsCommand(output, context);\n    }\n}\nexports.ListPlatformApplicationsCommand = ListPlatformApplicationsCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ListSMSSandboxPhoneNumbersCommand = void 0;\nconst middleware_serde_1 = require(\"@aws-sdk/middleware-serde\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\nconst models_0_1 = require(\"../models/models_0\");\nconst Aws_query_1 = require(\"../protocols/Aws_query\");\nclass ListSMSSandboxPhoneNumbersCommand extends smithy_client_1.Command {\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use(middleware_serde_1.getSerdePlugin(configuration, this.serialize, this.deserialize));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"SNSClient\";\n        const commandName = \"ListSMSSandboxPhoneNumbersCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: models_0_1.ListSMSSandboxPhoneNumbersInput.filterSensitiveLog,\n            outputFilterSensitiveLog: models_0_1.ListSMSSandboxPhoneNumbersResult.filterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return Aws_query_1.serializeAws_queryListSMSSandboxPhoneNumbersCommand(input, context);\n    }\n    deserialize(output, context) {\n        return Aws_query_1.deserializeAws_queryListSMSSandboxPhoneNumbersCommand(output, context);\n    }\n}\nexports.ListSMSSandboxPhoneNumbersCommand = ListSMSSandboxPhoneNumbersCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ListSubscriptionsByTopicCommand = void 0;\nconst middleware_serde_1 = require(\"@aws-sdk/middleware-serde\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\nconst models_0_1 = require(\"../models/models_0\");\nconst Aws_query_1 = require(\"../protocols/Aws_query\");\nclass ListSubscriptionsByTopicCommand extends smithy_client_1.Command {\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use(middleware_serde_1.getSerdePlugin(configuration, this.serialize, this.deserialize));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"SNSClient\";\n        const commandName = \"ListSubscriptionsByTopicCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: models_0_1.ListSubscriptionsByTopicInput.filterSensitiveLog,\n            outputFilterSensitiveLog: models_0_1.ListSubscriptionsByTopicResponse.filterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return Aws_query_1.serializeAws_queryListSubscriptionsByTopicCommand(input, context);\n    }\n    deserialize(output, context) {\n        return Aws_query_1.deserializeAws_queryListSubscriptionsByTopicCommand(output, context);\n    }\n}\nexports.ListSubscriptionsByTopicCommand = ListSubscriptionsByTopicCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ListSubscriptionsCommand = void 0;\nconst middleware_serde_1 = require(\"@aws-sdk/middleware-serde\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\nconst models_0_1 = require(\"../models/models_0\");\nconst Aws_query_1 = require(\"../protocols/Aws_query\");\nclass ListSubscriptionsCommand extends smithy_client_1.Command {\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use(middleware_serde_1.getSerdePlugin(configuration, this.serialize, this.deserialize));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"SNSClient\";\n        const commandName = \"ListSubscriptionsCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: models_0_1.ListSubscriptionsInput.filterSensitiveLog,\n            outputFilterSensitiveLog: models_0_1.ListSubscriptionsResponse.filterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return Aws_query_1.serializeAws_queryListSubscriptionsCommand(input, context);\n    }\n    deserialize(output, context) {\n        return Aws_query_1.deserializeAws_queryListSubscriptionsCommand(output, context);\n    }\n}\nexports.ListSubscriptionsCommand = ListSubscriptionsCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ListTagsForResourceCommand = void 0;\nconst middleware_serde_1 = require(\"@aws-sdk/middleware-serde\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\nconst models_0_1 = require(\"../models/models_0\");\nconst Aws_query_1 = require(\"../protocols/Aws_query\");\nclass ListTagsForResourceCommand extends smithy_client_1.Command {\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use(middleware_serde_1.getSerdePlugin(configuration, this.serialize, this.deserialize));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"SNSClient\";\n        const commandName = \"ListTagsForResourceCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: models_0_1.ListTagsForResourceRequest.filterSensitiveLog,\n            outputFilterSensitiveLog: models_0_1.ListTagsForResourceResponse.filterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return Aws_query_1.serializeAws_queryListTagsForResourceCommand(input, context);\n    }\n    deserialize(output, context) {\n        return Aws_query_1.deserializeAws_queryListTagsForResourceCommand(output, context);\n    }\n}\nexports.ListTagsForResourceCommand = ListTagsForResourceCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ListTopicsCommand = void 0;\nconst middleware_serde_1 = require(\"@aws-sdk/middleware-serde\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\nconst models_0_1 = require(\"../models/models_0\");\nconst Aws_query_1 = require(\"../protocols/Aws_query\");\nclass ListTopicsCommand extends smithy_client_1.Command {\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use(middleware_serde_1.getSerdePlugin(configuration, this.serialize, this.deserialize));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"SNSClient\";\n        const commandName = \"ListTopicsCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: models_0_1.ListTopicsInput.filterSensitiveLog,\n            outputFilterSensitiveLog: models_0_1.ListTopicsResponse.filterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return Aws_query_1.serializeAws_queryListTopicsCommand(input, context);\n    }\n    deserialize(output, context) {\n        return Aws_query_1.deserializeAws_queryListTopicsCommand(output, context);\n    }\n}\nexports.ListTopicsCommand = ListTopicsCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OptInPhoneNumberCommand = void 0;\nconst middleware_serde_1 = require(\"@aws-sdk/middleware-serde\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\nconst models_0_1 = require(\"../models/models_0\");\nconst Aws_query_1 = require(\"../protocols/Aws_query\");\nclass OptInPhoneNumberCommand extends smithy_client_1.Command {\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use(middleware_serde_1.getSerdePlugin(configuration, this.serialize, this.deserialize));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"SNSClient\";\n        const commandName = \"OptInPhoneNumberCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: models_0_1.OptInPhoneNumberInput.filterSensitiveLog,\n            outputFilterSensitiveLog: models_0_1.OptInPhoneNumberResponse.filterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return Aws_query_1.serializeAws_queryOptInPhoneNumberCommand(input, context);\n    }\n    deserialize(output, context) {\n        return Aws_query_1.deserializeAws_queryOptInPhoneNumberCommand(output, context);\n    }\n}\nexports.OptInPhoneNumberCommand = OptInPhoneNumberCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.PublishBatchCommand = void 0;\nconst middleware_serde_1 = require(\"@aws-sdk/middleware-serde\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\nconst models_0_1 = require(\"../models/models_0\");\nconst Aws_query_1 = require(\"../protocols/Aws_query\");\nclass PublishBatchCommand extends smithy_client_1.Command {\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use(middleware_serde_1.getSerdePlugin(configuration, this.serialize, this.deserialize));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"SNSClient\";\n        const commandName = \"PublishBatchCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: models_0_1.PublishBatchInput.filterSensitiveLog,\n            outputFilterSensitiveLog: models_0_1.PublishBatchResponse.filterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return Aws_query_1.serializeAws_queryPublishBatchCommand(input, context);\n    }\n    deserialize(output, context) {\n        return Aws_query_1.deserializeAws_queryPublishBatchCommand(output, context);\n    }\n}\nexports.PublishBatchCommand = PublishBatchCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.PublishCommand = void 0;\nconst middleware_serde_1 = require(\"@aws-sdk/middleware-serde\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\nconst models_0_1 = require(\"../models/models_0\");\nconst Aws_query_1 = require(\"../protocols/Aws_query\");\nclass PublishCommand extends smithy_client_1.Command {\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use(middleware_serde_1.getSerdePlugin(configuration, this.serialize, this.deserialize));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"SNSClient\";\n        const commandName = \"PublishCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: models_0_1.PublishInput.filterSensitiveLog,\n            outputFilterSensitiveLog: models_0_1.PublishResponse.filterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return Aws_query_1.serializeAws_queryPublishCommand(input, context);\n    }\n    deserialize(output, context) {\n        return Aws_query_1.deserializeAws_queryPublishCommand(output, context);\n    }\n}\nexports.PublishCommand = PublishCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.RemovePermissionCommand = void 0;\nconst middleware_serde_1 = require(\"@aws-sdk/middleware-serde\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\nconst models_0_1 = require(\"../models/models_0\");\nconst Aws_query_1 = require(\"../protocols/Aws_query\");\nclass RemovePermissionCommand extends smithy_client_1.Command {\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use(middleware_serde_1.getSerdePlugin(configuration, this.serialize, this.deserialize));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"SNSClient\";\n        const commandName = \"RemovePermissionCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: models_0_1.RemovePermissionInput.filterSensitiveLog,\n            outputFilterSensitiveLog: (output) => output,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return Aws_query_1.serializeAws_queryRemovePermissionCommand(input, context);\n    }\n    deserialize(output, context) {\n        return Aws_query_1.deserializeAws_queryRemovePermissionCommand(output, context);\n    }\n}\nexports.RemovePermissionCommand = RemovePermissionCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SetEndpointAttributesCommand = void 0;\nconst middleware_serde_1 = require(\"@aws-sdk/middleware-serde\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\nconst models_0_1 = require(\"../models/models_0\");\nconst Aws_query_1 = require(\"../protocols/Aws_query\");\nclass SetEndpointAttributesCommand extends smithy_client_1.Command {\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use(middleware_serde_1.getSerdePlugin(configuration, this.serialize, this.deserialize));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"SNSClient\";\n        const commandName = \"SetEndpointAttributesCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: models_0_1.SetEndpointAttributesInput.filterSensitiveLog,\n            outputFilterSensitiveLog: (output) => output,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return Aws_query_1.serializeAws_querySetEndpointAttributesCommand(input, context);\n    }\n    deserialize(output, context) {\n        return Aws_query_1.deserializeAws_querySetEndpointAttributesCommand(output, context);\n    }\n}\nexports.SetEndpointAttributesCommand = SetEndpointAttributesCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SetPlatformApplicationAttributesCommand = void 0;\nconst middleware_serde_1 = require(\"@aws-sdk/middleware-serde\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\nconst models_0_1 = require(\"../models/models_0\");\nconst Aws_query_1 = require(\"../protocols/Aws_query\");\nclass SetPlatformApplicationAttributesCommand extends smithy_client_1.Command {\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use(middleware_serde_1.getSerdePlugin(configuration, this.serialize, this.deserialize));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"SNSClient\";\n        const commandName = \"SetPlatformApplicationAttributesCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: models_0_1.SetPlatformApplicationAttributesInput.filterSensitiveLog,\n            outputFilterSensitiveLog: (output) => output,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return Aws_query_1.serializeAws_querySetPlatformApplicationAttributesCommand(input, context);\n    }\n    deserialize(output, context) {\n        return Aws_query_1.deserializeAws_querySetPlatformApplicationAttributesCommand(output, context);\n    }\n}\nexports.SetPlatformApplicationAttributesCommand = SetPlatformApplicationAttributesCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SetSMSAttributesCommand = void 0;\nconst middleware_serde_1 = require(\"@aws-sdk/middleware-serde\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\nconst models_0_1 = require(\"../models/models_0\");\nconst Aws_query_1 = require(\"../protocols/Aws_query\");\nclass SetSMSAttributesCommand extends smithy_client_1.Command {\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use(middleware_serde_1.getSerdePlugin(configuration, this.serialize, this.deserialize));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"SNSClient\";\n        const commandName = \"SetSMSAttributesCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: models_0_1.SetSMSAttributesInput.filterSensitiveLog,\n            outputFilterSensitiveLog: models_0_1.SetSMSAttributesResponse.filterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return Aws_query_1.serializeAws_querySetSMSAttributesCommand(input, context);\n    }\n    deserialize(output, context) {\n        return Aws_query_1.deserializeAws_querySetSMSAttributesCommand(output, context);\n    }\n}\nexports.SetSMSAttributesCommand = SetSMSAttributesCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SetSubscriptionAttributesCommand = void 0;\nconst middleware_serde_1 = require(\"@aws-sdk/middleware-serde\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\nconst models_0_1 = require(\"../models/models_0\");\nconst Aws_query_1 = require(\"../protocols/Aws_query\");\nclass SetSubscriptionAttributesCommand extends smithy_client_1.Command {\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use(middleware_serde_1.getSerdePlugin(configuration, this.serialize, this.deserialize));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"SNSClient\";\n        const commandName = \"SetSubscriptionAttributesCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: models_0_1.SetSubscriptionAttributesInput.filterSensitiveLog,\n            outputFilterSensitiveLog: (output) => output,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return Aws_query_1.serializeAws_querySetSubscriptionAttributesCommand(input, context);\n    }\n    deserialize(output, context) {\n        return Aws_query_1.deserializeAws_querySetSubscriptionAttributesCommand(output, context);\n    }\n}\nexports.SetSubscriptionAttributesCommand = SetSubscriptionAttributesCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SetTopicAttributesCommand = void 0;\nconst middleware_serde_1 = require(\"@aws-sdk/middleware-serde\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\nconst models_0_1 = require(\"../models/models_0\");\nconst Aws_query_1 = require(\"../protocols/Aws_query\");\nclass SetTopicAttributesCommand extends smithy_client_1.Command {\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use(middleware_serde_1.getSerdePlugin(configuration, this.serialize, this.deserialize));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"SNSClient\";\n        const commandName = \"SetTopicAttributesCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: models_0_1.SetTopicAttributesInput.filterSensitiveLog,\n            outputFilterSensitiveLog: (output) => output,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return Aws_query_1.serializeAws_querySetTopicAttributesCommand(input, context);\n    }\n    deserialize(output, context) {\n        return Aws_query_1.deserializeAws_querySetTopicAttributesCommand(output, context);\n    }\n}\nexports.SetTopicAttributesCommand = SetTopicAttributesCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SubscribeCommand = void 0;\nconst middleware_serde_1 = require(\"@aws-sdk/middleware-serde\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\nconst models_0_1 = require(\"../models/models_0\");\nconst Aws_query_1 = require(\"../protocols/Aws_query\");\nclass SubscribeCommand extends smithy_client_1.Command {\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use(middleware_serde_1.getSerdePlugin(configuration, this.serialize, this.deserialize));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"SNSClient\";\n        const commandName = \"SubscribeCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: models_0_1.SubscribeInput.filterSensitiveLog,\n            outputFilterSensitiveLog: models_0_1.SubscribeResponse.filterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return Aws_query_1.serializeAws_querySubscribeCommand(input, context);\n    }\n    deserialize(output, context) {\n        return Aws_query_1.deserializeAws_querySubscribeCommand(output, context);\n    }\n}\nexports.SubscribeCommand = SubscribeCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TagResourceCommand = void 0;\nconst middleware_serde_1 = require(\"@aws-sdk/middleware-serde\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\nconst models_0_1 = require(\"../models/models_0\");\nconst Aws_query_1 = require(\"../protocols/Aws_query\");\nclass TagResourceCommand extends smithy_client_1.Command {\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use(middleware_serde_1.getSerdePlugin(configuration, this.serialize, this.deserialize));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"SNSClient\";\n        const commandName = \"TagResourceCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: models_0_1.TagResourceRequest.filterSensitiveLog,\n            outputFilterSensitiveLog: models_0_1.TagResourceResponse.filterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return Aws_query_1.serializeAws_queryTagResourceCommand(input, context);\n    }\n    deserialize(output, context) {\n        return Aws_query_1.deserializeAws_queryTagResourceCommand(output, context);\n    }\n}\nexports.TagResourceCommand = TagResourceCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.UnsubscribeCommand = void 0;\nconst middleware_serde_1 = require(\"@aws-sdk/middleware-serde\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\nconst models_0_1 = require(\"../models/models_0\");\nconst Aws_query_1 = require(\"../protocols/Aws_query\");\nclass UnsubscribeCommand extends smithy_client_1.Command {\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use(middleware_serde_1.getSerdePlugin(configuration, this.serialize, this.deserialize));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"SNSClient\";\n        const commandName = \"UnsubscribeCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: models_0_1.UnsubscribeInput.filterSensitiveLog,\n            outputFilterSensitiveLog: (output) => output,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return Aws_query_1.serializeAws_queryUnsubscribeCommand(input, context);\n    }\n    deserialize(output, context) {\n        return Aws_query_1.deserializeAws_queryUnsubscribeCommand(output, context);\n    }\n}\nexports.UnsubscribeCommand = UnsubscribeCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.UntagResourceCommand = void 0;\nconst middleware_serde_1 = require(\"@aws-sdk/middleware-serde\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\nconst models_0_1 = require(\"../models/models_0\");\nconst Aws_query_1 = require(\"../protocols/Aws_query\");\nclass UntagResourceCommand extends smithy_client_1.Command {\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use(middleware_serde_1.getSerdePlugin(configuration, this.serialize, this.deserialize));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"SNSClient\";\n        const commandName = \"UntagResourceCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: models_0_1.UntagResourceRequest.filterSensitiveLog,\n            outputFilterSensitiveLog: models_0_1.UntagResourceResponse.filterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return Aws_query_1.serializeAws_queryUntagResourceCommand(input, context);\n    }\n    deserialize(output, context) {\n        return Aws_query_1.deserializeAws_queryUntagResourceCommand(output, context);\n    }\n}\nexports.UntagResourceCommand = UntagResourceCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.VerifySMSSandboxPhoneNumberCommand = void 0;\nconst middleware_serde_1 = require(\"@aws-sdk/middleware-serde\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\nconst models_0_1 = require(\"../models/models_0\");\nconst Aws_query_1 = require(\"../protocols/Aws_query\");\nclass VerifySMSSandboxPhoneNumberCommand extends smithy_client_1.Command {\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use(middleware_serde_1.getSerdePlugin(configuration, this.serialize, this.deserialize));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"SNSClient\";\n        const commandName = \"VerifySMSSandboxPhoneNumberCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: models_0_1.VerifySMSSandboxPhoneNumberInput.filterSensitiveLog,\n            outputFilterSensitiveLog: models_0_1.VerifySMSSandboxPhoneNumberResult.filterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return Aws_query_1.serializeAws_queryVerifySMSSandboxPhoneNumberCommand(input, context);\n    }\n    deserialize(output, context) {\n        return Aws_query_1.deserializeAws_queryVerifySMSSandboxPhoneNumberCommand(output, context);\n    }\n}\nexports.VerifySMSSandboxPhoneNumberCommand = VerifySMSSandboxPhoneNumberCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = require(\"tslib\");\ntslib_1.__exportStar(require(\"./AddPermissionCommand\"), exports);\ntslib_1.__exportStar(require(\"./CheckIfPhoneNumberIsOptedOutCommand\"), exports);\ntslib_1.__exportStar(require(\"./ConfirmSubscriptionCommand\"), exports);\ntslib_1.__exportStar(require(\"./CreatePlatformApplicationCommand\"), exports);\ntslib_1.__exportStar(require(\"./CreatePlatformEndpointCommand\"), exports);\ntslib_1.__exportStar(require(\"./CreateSMSSandboxPhoneNumberCommand\"), exports);\ntslib_1.__exportStar(require(\"./CreateTopicCommand\"), exports);\ntslib_1.__exportStar(require(\"./DeleteEndpointCommand\"), exports);\ntslib_1.__exportStar(require(\"./DeletePlatformApplicationCommand\"), exports);\ntslib_1.__exportStar(require(\"./DeleteSMSSandboxPhoneNumberCommand\"), exports);\ntslib_1.__exportStar(require(\"./DeleteTopicCommand\"), exports);\ntslib_1.__exportStar(require(\"./GetEndpointAttributesCommand\"), exports);\ntslib_1.__exportStar(require(\"./GetPlatformApplicationAttributesCommand\"), exports);\ntslib_1.__exportStar(require(\"./GetSMSAttributesCommand\"), exports);\ntslib_1.__exportStar(require(\"./GetSMSSandboxAccountStatusCommand\"), exports);\ntslib_1.__exportStar(require(\"./GetSubscriptionAttributesCommand\"), exports);\ntslib_1.__exportStar(require(\"./GetTopicAttributesCommand\"), exports);\ntslib_1.__exportStar(require(\"./ListEndpointsByPlatformApplicationCommand\"), exports);\ntslib_1.__exportStar(require(\"./ListOriginationNumbersCommand\"), exports);\ntslib_1.__exportStar(require(\"./ListPhoneNumbersOptedOutCommand\"), exports);\ntslib_1.__exportStar(require(\"./ListPlatformApplicationsCommand\"), exports);\ntslib_1.__exportStar(require(\"./ListSMSSandboxPhoneNumbersCommand\"), exports);\ntslib_1.__exportStar(require(\"./ListSubscriptionsByTopicCommand\"), exports);\ntslib_1.__exportStar(require(\"./ListSubscriptionsCommand\"), exports);\ntslib_1.__exportStar(require(\"./ListTagsForResourceCommand\"), exports);\ntslib_1.__exportStar(require(\"./ListTopicsCommand\"), exports);\ntslib_1.__exportStar(require(\"./OptInPhoneNumberCommand\"), exports);\ntslib_1.__exportStar(require(\"./PublishBatchCommand\"), exports);\ntslib_1.__exportStar(require(\"./PublishCommand\"), exports);\ntslib_1.__exportStar(require(\"./RemovePermissionCommand\"), exports);\ntslib_1.__exportStar(require(\"./SetEndpointAttributesCommand\"), exports);\ntslib_1.__exportStar(require(\"./SetPlatformApplicationAttributesCommand\"), exports);\ntslib_1.__exportStar(require(\"./SetSMSAttributesCommand\"), exports);\ntslib_1.__exportStar(require(\"./SetSubscriptionAttributesCommand\"), exports);\ntslib_1.__exportStar(require(\"./SetTopicAttributesCommand\"), exports);\ntslib_1.__exportStar(require(\"./SubscribeCommand\"), exports);\ntslib_1.__exportStar(require(\"./TagResourceCommand\"), exports);\ntslib_1.__exportStar(require(\"./UnsubscribeCommand\"), exports);\ntslib_1.__exportStar(require(\"./UntagResourceCommand\"), exports);\ntslib_1.__exportStar(require(\"./VerifySMSSandboxPhoneNumberCommand\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.defaultRegionInfoProvider = void 0;\nconst config_resolver_1 = require(\"@aws-sdk/config-resolver\");\nconst regionHash = {\n    \"us-east-1\": {\n        variants: [\n            {\n                hostname: \"sns-fips.us-east-1.amazonaws.com\",\n                tags: [\"fips\"],\n            },\n        ],\n    },\n    \"us-east-2\": {\n        variants: [\n            {\n                hostname: \"sns-fips.us-east-2.amazonaws.com\",\n                tags: [\"fips\"],\n            },\n        ],\n    },\n    \"us-gov-east-1\": {\n        variants: [\n            {\n                hostname: \"sns.us-gov-east-1.amazonaws.com\",\n                tags: [],\n            },\n        ],\n        signingRegion: \"us-gov-east-1\",\n    },\n    \"us-gov-west-1\": {\n        variants: [\n            {\n                hostname: \"sns.us-gov-west-1.amazonaws.com\",\n                tags: [],\n            },\n        ],\n        signingRegion: \"us-gov-west-1\",\n    },\n    \"us-west-1\": {\n        variants: [\n            {\n                hostname: \"sns-fips.us-west-1.amazonaws.com\",\n                tags: [\"fips\"],\n            },\n        ],\n    },\n    \"us-west-2\": {\n        variants: [\n            {\n                hostname: \"sns-fips.us-west-2.amazonaws.com\",\n                tags: [\"fips\"],\n            },\n        ],\n    },\n};\nconst partitionHash = {\n    aws: {\n        regions: [\n            \"af-south-1\",\n            \"ap-east-1\",\n            \"ap-northeast-1\",\n            \"ap-northeast-2\",\n            \"ap-northeast-3\",\n            \"ap-south-1\",\n            \"ap-southeast-1\",\n            \"ap-southeast-2\",\n            \"ap-southeast-3\",\n            \"ca-central-1\",\n            \"eu-central-1\",\n            \"eu-north-1\",\n            \"eu-south-1\",\n            \"eu-west-1\",\n            \"eu-west-2\",\n            \"eu-west-3\",\n            \"fips-us-east-1\",\n            \"fips-us-east-2\",\n            \"fips-us-west-1\",\n            \"fips-us-west-2\",\n            \"me-south-1\",\n            \"sa-east-1\",\n            \"us-east-1\",\n            \"us-east-2\",\n            \"us-west-1\",\n            \"us-west-2\",\n        ],\n        regionRegex: \"^(us|eu|ap|sa|ca|me|af)\\\\-\\\\w+\\\\-\\\\d+$\",\n        variants: [\n            {\n                hostname: \"sns.{region}.amazonaws.com\",\n                tags: [],\n            },\n            {\n                hostname: \"sns-fips.{region}.amazonaws.com\",\n                tags: [\"fips\"],\n            },\n            {\n                hostname: \"sns-fips.{region}.api.aws\",\n                tags: [\"dualstack\", \"fips\"],\n            },\n            {\n                hostname: \"sns.{region}.api.aws\",\n                tags: [\"dualstack\"],\n            },\n        ],\n    },\n    \"aws-cn\": {\n        regions: [\"cn-north-1\", \"cn-northwest-1\"],\n        regionRegex: \"^cn\\\\-\\\\w+\\\\-\\\\d+$\",\n        variants: [\n            {\n                hostname: \"sns.{region}.amazonaws.com.cn\",\n                tags: [],\n            },\n            {\n                hostname: \"sns-fips.{region}.amazonaws.com.cn\",\n                tags: [\"fips\"],\n            },\n            {\n                hostname: \"sns-fips.{region}.api.amazonwebservices.com.cn\",\n                tags: [\"dualstack\", \"fips\"],\n            },\n            {\n                hostname: \"sns.{region}.api.amazonwebservices.com.cn\",\n                tags: [\"dualstack\"],\n            },\n        ],\n    },\n    \"aws-iso\": {\n        regions: [\"us-iso-east-1\", \"us-iso-west-1\"],\n        regionRegex: \"^us\\\\-iso\\\\-\\\\w+\\\\-\\\\d+$\",\n        variants: [\n            {\n                hostname: \"sns.{region}.c2s.ic.gov\",\n                tags: [],\n            },\n            {\n                hostname: \"sns-fips.{region}.c2s.ic.gov\",\n                tags: [\"fips\"],\n            },\n        ],\n    },\n    \"aws-iso-b\": {\n        regions: [\"us-isob-east-1\"],\n        regionRegex: \"^us\\\\-isob\\\\-\\\\w+\\\\-\\\\d+$\",\n        variants: [\n            {\n                hostname: \"sns.{region}.sc2s.sgov.gov\",\n                tags: [],\n            },\n            {\n                hostname: \"sns-fips.{region}.sc2s.sgov.gov\",\n                tags: [\"fips\"],\n            },\n        ],\n    },\n    \"aws-us-gov\": {\n        regions: [\"us-gov-east-1\", \"us-gov-west-1\"],\n        regionRegex: \"^us\\\\-gov\\\\-\\\\w+\\\\-\\\\d+$\",\n        variants: [\n            {\n                hostname: \"sns.{region}.amazonaws.com\",\n                tags: [],\n            },\n            {\n                hostname: \"sns-fips.{region}.amazonaws.com\",\n                tags: [\"fips\"],\n            },\n            {\n                hostname: \"sns-fips.{region}.api.aws\",\n                tags: [\"dualstack\", \"fips\"],\n            },\n            {\n                hostname: \"sns.{region}.api.aws\",\n                tags: [\"dualstack\"],\n            },\n        ],\n    },\n};\nconst defaultRegionInfoProvider = async (region, options) => config_resolver_1.getRegionInfo(region, {\n    ...options,\n    signingService: \"sns\",\n    regionHash,\n    partitionHash,\n});\nexports.defaultRegionInfoProvider = defaultRegionInfoProvider;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = require(\"tslib\");\ntslib_1.__exportStar(require(\"./SNS\"), exports);\ntslib_1.__exportStar(require(\"./SNSClient\"), exports);\ntslib_1.__exportStar(require(\"./commands\"), exports);\ntslib_1.__exportStar(require(\"./models\"), exports);\ntslib_1.__exportStar(require(\"./pagination\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = require(\"tslib\");\ntslib_1.__exportStar(require(\"./models_0\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ListSubscriptionsInput = exports.ListSMSSandboxPhoneNumbersResult = exports.SMSSandboxPhoneNumber = exports.SMSSandboxPhoneNumberVerificationStatus = exports.ListSMSSandboxPhoneNumbersInput = exports.ListPlatformApplicationsResponse = exports.PlatformApplication = exports.ListPlatformApplicationsInput = exports.ListPhoneNumbersOptedOutResponse = exports.ListPhoneNumbersOptedOutInput = exports.ListOriginationNumbersResult = exports.PhoneNumberInformation = exports.RouteType = exports.NumberCapability = exports.ListOriginationNumbersRequest = exports.ListEndpointsByPlatformApplicationResponse = exports.Endpoint = exports.ListEndpointsByPlatformApplicationInput = exports.GetTopicAttributesResponse = exports.GetTopicAttributesInput = exports.GetSubscriptionAttributesResponse = exports.GetSubscriptionAttributesInput = exports.GetSMSSandboxAccountStatusResult = exports.GetSMSSandboxAccountStatusInput = exports.GetSMSAttributesResponse = exports.GetSMSAttributesInput = exports.GetPlatformApplicationAttributesResponse = exports.GetPlatformApplicationAttributesInput = exports.GetEndpointAttributesResponse = exports.GetEndpointAttributesInput = exports.DeleteTopicInput = exports.DeleteSMSSandboxPhoneNumberResult = exports.DeleteSMSSandboxPhoneNumberInput = exports.DeletePlatformApplicationInput = exports.DeleteEndpointInput = exports.CreateTopicResponse = exports.CreateTopicInput = exports.Tag = exports.CreateSMSSandboxPhoneNumberResult = exports.CreateSMSSandboxPhoneNumberInput = exports.LanguageCodeString = exports.CreatePlatformEndpointInput = exports.CreateEndpointResponse = exports.CreatePlatformApplicationResponse = exports.CreatePlatformApplicationInput = exports.ConfirmSubscriptionResponse = exports.ConfirmSubscriptionInput = exports.CheckIfPhoneNumberIsOptedOutResponse = exports.CheckIfPhoneNumberIsOptedOutInput = exports.AddPermissionInput = void 0;\nexports.VerifySMSSandboxPhoneNumberResult = exports.VerifySMSSandboxPhoneNumberInput = exports.UntagResourceResponse = exports.UntagResourceRequest = exports.UnsubscribeInput = exports.TagResourceResponse = exports.TagResourceRequest = exports.SubscribeResponse = exports.SubscribeInput = exports.SetTopicAttributesInput = exports.SetSubscriptionAttributesInput = exports.SetSMSAttributesResponse = exports.SetSMSAttributesInput = exports.SetPlatformApplicationAttributesInput = exports.SetEndpointAttributesInput = exports.RemovePermissionInput = exports.PublishBatchResponse = exports.PublishBatchResultEntry = exports.BatchResultErrorEntry = exports.PublishBatchInput = exports.PublishBatchRequestEntry = exports.PublishResponse = exports.PublishInput = exports.MessageAttributeValue = exports.OptInPhoneNumberResponse = exports.OptInPhoneNumberInput = exports.ListTopicsResponse = exports.Topic = exports.ListTopicsInput = exports.ListTagsForResourceResponse = exports.ListTagsForResourceRequest = exports.ListSubscriptionsByTopicResponse = exports.ListSubscriptionsByTopicInput = exports.ListSubscriptionsResponse = exports.Subscription = void 0;\nvar AddPermissionInput;\n(function (AddPermissionInput) {\n    AddPermissionInput.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(AddPermissionInput = exports.AddPermissionInput || (exports.AddPermissionInput = {}));\nvar CheckIfPhoneNumberIsOptedOutInput;\n(function (CheckIfPhoneNumberIsOptedOutInput) {\n    CheckIfPhoneNumberIsOptedOutInput.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(CheckIfPhoneNumberIsOptedOutInput = exports.CheckIfPhoneNumberIsOptedOutInput || (exports.CheckIfPhoneNumberIsOptedOutInput = {}));\nvar CheckIfPhoneNumberIsOptedOutResponse;\n(function (CheckIfPhoneNumberIsOptedOutResponse) {\n    CheckIfPhoneNumberIsOptedOutResponse.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(CheckIfPhoneNumberIsOptedOutResponse = exports.CheckIfPhoneNumberIsOptedOutResponse || (exports.CheckIfPhoneNumberIsOptedOutResponse = {}));\nvar ConfirmSubscriptionInput;\n(function (ConfirmSubscriptionInput) {\n    ConfirmSubscriptionInput.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(ConfirmSubscriptionInput = exports.ConfirmSubscriptionInput || (exports.ConfirmSubscriptionInput = {}));\nvar ConfirmSubscriptionResponse;\n(function (ConfirmSubscriptionResponse) {\n    ConfirmSubscriptionResponse.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(ConfirmSubscriptionResponse = exports.ConfirmSubscriptionResponse || (exports.ConfirmSubscriptionResponse = {}));\nvar CreatePlatformApplicationInput;\n(function (CreatePlatformApplicationInput) {\n    CreatePlatformApplicationInput.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(CreatePlatformApplicationInput = exports.CreatePlatformApplicationInput || (exports.CreatePlatformApplicationInput = {}));\nvar CreatePlatformApplicationResponse;\n(function (CreatePlatformApplicationResponse) {\n    CreatePlatformApplicationResponse.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(CreatePlatformApplicationResponse = exports.CreatePlatformApplicationResponse || (exports.CreatePlatformApplicationResponse = {}));\nvar CreateEndpointResponse;\n(function (CreateEndpointResponse) {\n    CreateEndpointResponse.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(CreateEndpointResponse = exports.CreateEndpointResponse || (exports.CreateEndpointResponse = {}));\nvar CreatePlatformEndpointInput;\n(function (CreatePlatformEndpointInput) {\n    CreatePlatformEndpointInput.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(CreatePlatformEndpointInput = exports.CreatePlatformEndpointInput || (exports.CreatePlatformEndpointInput = {}));\nvar LanguageCodeString;\n(function (LanguageCodeString) {\n    LanguageCodeString[\"de_DE\"] = \"de-DE\";\n    LanguageCodeString[\"en_GB\"] = \"en-GB\";\n    LanguageCodeString[\"en_US\"] = \"en-US\";\n    LanguageCodeString[\"es_419\"] = \"es-419\";\n    LanguageCodeString[\"es_ES\"] = \"es-ES\";\n    LanguageCodeString[\"fr_CA\"] = \"fr-CA\";\n    LanguageCodeString[\"fr_FR\"] = \"fr-FR\";\n    LanguageCodeString[\"it_IT\"] = \"it-IT\";\n    LanguageCodeString[\"jp_JP\"] = \"ja-JP\";\n    LanguageCodeString[\"kr_KR\"] = \"kr-KR\";\n    LanguageCodeString[\"pt_BR\"] = \"pt-BR\";\n    LanguageCodeString[\"zh_CN\"] = \"zh-CN\";\n    LanguageCodeString[\"zh_TW\"] = \"zh-TW\";\n})(LanguageCodeString = exports.LanguageCodeString || (exports.LanguageCodeString = {}));\nvar CreateSMSSandboxPhoneNumberInput;\n(function (CreateSMSSandboxPhoneNumberInput) {\n    CreateSMSSandboxPhoneNumberInput.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(CreateSMSSandboxPhoneNumberInput = exports.CreateSMSSandboxPhoneNumberInput || (exports.CreateSMSSandboxPhoneNumberInput = {}));\nvar CreateSMSSandboxPhoneNumberResult;\n(function (CreateSMSSandboxPhoneNumberResult) {\n    CreateSMSSandboxPhoneNumberResult.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(CreateSMSSandboxPhoneNumberResult = exports.CreateSMSSandboxPhoneNumberResult || (exports.CreateSMSSandboxPhoneNumberResult = {}));\nvar Tag;\n(function (Tag) {\n    Tag.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(Tag = exports.Tag || (exports.Tag = {}));\nvar CreateTopicInput;\n(function (CreateTopicInput) {\n    CreateTopicInput.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(CreateTopicInput = exports.CreateTopicInput || (exports.CreateTopicInput = {}));\nvar CreateTopicResponse;\n(function (CreateTopicResponse) {\n    CreateTopicResponse.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(CreateTopicResponse = exports.CreateTopicResponse || (exports.CreateTopicResponse = {}));\nvar DeleteEndpointInput;\n(function (DeleteEndpointInput) {\n    DeleteEndpointInput.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(DeleteEndpointInput = exports.DeleteEndpointInput || (exports.DeleteEndpointInput = {}));\nvar DeletePlatformApplicationInput;\n(function (DeletePlatformApplicationInput) {\n    DeletePlatformApplicationInput.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(DeletePlatformApplicationInput = exports.DeletePlatformApplicationInput || (exports.DeletePlatformApplicationInput = {}));\nvar DeleteSMSSandboxPhoneNumberInput;\n(function (DeleteSMSSandboxPhoneNumberInput) {\n    DeleteSMSSandboxPhoneNumberInput.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(DeleteSMSSandboxPhoneNumberInput = exports.DeleteSMSSandboxPhoneNumberInput || (exports.DeleteSMSSandboxPhoneNumberInput = {}));\nvar DeleteSMSSandboxPhoneNumberResult;\n(function (DeleteSMSSandboxPhoneNumberResult) {\n    DeleteSMSSandboxPhoneNumberResult.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(DeleteSMSSandboxPhoneNumberResult = exports.DeleteSMSSandboxPhoneNumberResult || (exports.DeleteSMSSandboxPhoneNumberResult = {}));\nvar DeleteTopicInput;\n(function (DeleteTopicInput) {\n    DeleteTopicInput.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(DeleteTopicInput = exports.DeleteTopicInput || (exports.DeleteTopicInput = {}));\nvar GetEndpointAttributesInput;\n(function (GetEndpointAttributesInput) {\n    GetEndpointAttributesInput.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(GetEndpointAttributesInput = exports.GetEndpointAttributesInput || (exports.GetEndpointAttributesInput = {}));\nvar GetEndpointAttributesResponse;\n(function (GetEndpointAttributesResponse) {\n    GetEndpointAttributesResponse.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(GetEndpointAttributesResponse = exports.GetEndpointAttributesResponse || (exports.GetEndpointAttributesResponse = {}));\nvar GetPlatformApplicationAttributesInput;\n(function (GetPlatformApplicationAttributesInput) {\n    GetPlatformApplicationAttributesInput.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(GetPlatformApplicationAttributesInput = exports.GetPlatformApplicationAttributesInput || (exports.GetPlatformApplicationAttributesInput = {}));\nvar GetPlatformApplicationAttributesResponse;\n(function (GetPlatformApplicationAttributesResponse) {\n    GetPlatformApplicationAttributesResponse.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(GetPlatformApplicationAttributesResponse = exports.GetPlatformApplicationAttributesResponse || (exports.GetPlatformApplicationAttributesResponse = {}));\nvar GetSMSAttributesInput;\n(function (GetSMSAttributesInput) {\n    GetSMSAttributesInput.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(GetSMSAttributesInput = exports.GetSMSAttributesInput || (exports.GetSMSAttributesInput = {}));\nvar GetSMSAttributesResponse;\n(function (GetSMSAttributesResponse) {\n    GetSMSAttributesResponse.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(GetSMSAttributesResponse = exports.GetSMSAttributesResponse || (exports.GetSMSAttributesResponse = {}));\nvar GetSMSSandboxAccountStatusInput;\n(function (GetSMSSandboxAccountStatusInput) {\n    GetSMSSandboxAccountStatusInput.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(GetSMSSandboxAccountStatusInput = exports.GetSMSSandboxAccountStatusInput || (exports.GetSMSSandboxAccountStatusInput = {}));\nvar GetSMSSandboxAccountStatusResult;\n(function (GetSMSSandboxAccountStatusResult) {\n    GetSMSSandboxAccountStatusResult.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(GetSMSSandboxAccountStatusResult = exports.GetSMSSandboxAccountStatusResult || (exports.GetSMSSandboxAccountStatusResult = {}));\nvar GetSubscriptionAttributesInput;\n(function (GetSubscriptionAttributesInput) {\n    GetSubscriptionAttributesInput.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(GetSubscriptionAttributesInput = exports.GetSubscriptionAttributesInput || (exports.GetSubscriptionAttributesInput = {}));\nvar GetSubscriptionAttributesResponse;\n(function (GetSubscriptionAttributesResponse) {\n    GetSubscriptionAttributesResponse.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(GetSubscriptionAttributesResponse = exports.GetSubscriptionAttributesResponse || (exports.GetSubscriptionAttributesResponse = {}));\nvar GetTopicAttributesInput;\n(function (GetTopicAttributesInput) {\n    GetTopicAttributesInput.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(GetTopicAttributesInput = exports.GetTopicAttributesInput || (exports.GetTopicAttributesInput = {}));\nvar GetTopicAttributesResponse;\n(function (GetTopicAttributesResponse) {\n    GetTopicAttributesResponse.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(GetTopicAttributesResponse = exports.GetTopicAttributesResponse || (exports.GetTopicAttributesResponse = {}));\nvar ListEndpointsByPlatformApplicationInput;\n(function (ListEndpointsByPlatformApplicationInput) {\n    ListEndpointsByPlatformApplicationInput.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(ListEndpointsByPlatformApplicationInput = exports.ListEndpointsByPlatformApplicationInput || (exports.ListEndpointsByPlatformApplicationInput = {}));\nvar Endpoint;\n(function (Endpoint) {\n    Endpoint.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(Endpoint = exports.Endpoint || (exports.Endpoint = {}));\nvar ListEndpointsByPlatformApplicationResponse;\n(function (ListEndpointsByPlatformApplicationResponse) {\n    ListEndpointsByPlatformApplicationResponse.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(ListEndpointsByPlatformApplicationResponse = exports.ListEndpointsByPlatformApplicationResponse || (exports.ListEndpointsByPlatformApplicationResponse = {}));\nvar ListOriginationNumbersRequest;\n(function (ListOriginationNumbersRequest) {\n    ListOriginationNumbersRequest.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(ListOriginationNumbersRequest = exports.ListOriginationNumbersRequest || (exports.ListOriginationNumbersRequest = {}));\nvar NumberCapability;\n(function (NumberCapability) {\n    NumberCapability[\"MMS\"] = \"MMS\";\n    NumberCapability[\"SMS\"] = \"SMS\";\n    NumberCapability[\"VOICE\"] = \"VOICE\";\n})(NumberCapability = exports.NumberCapability || (exports.NumberCapability = {}));\nvar RouteType;\n(function (RouteType) {\n    RouteType[\"Premium\"] = \"Premium\";\n    RouteType[\"Promotional\"] = \"Promotional\";\n    RouteType[\"Transactional\"] = \"Transactional\";\n})(RouteType = exports.RouteType || (exports.RouteType = {}));\nvar PhoneNumberInformation;\n(function (PhoneNumberInformation) {\n    PhoneNumberInformation.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(PhoneNumberInformation = exports.PhoneNumberInformation || (exports.PhoneNumberInformation = {}));\nvar ListOriginationNumbersResult;\n(function (ListOriginationNumbersResult) {\n    ListOriginationNumbersResult.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(ListOriginationNumbersResult = exports.ListOriginationNumbersResult || (exports.ListOriginationNumbersResult = {}));\nvar ListPhoneNumbersOptedOutInput;\n(function (ListPhoneNumbersOptedOutInput) {\n    ListPhoneNumbersOptedOutInput.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(ListPhoneNumbersOptedOutInput = exports.ListPhoneNumbersOptedOutInput || (exports.ListPhoneNumbersOptedOutInput = {}));\nvar ListPhoneNumbersOptedOutResponse;\n(function (ListPhoneNumbersOptedOutResponse) {\n    ListPhoneNumbersOptedOutResponse.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(ListPhoneNumbersOptedOutResponse = exports.ListPhoneNumbersOptedOutResponse || (exports.ListPhoneNumbersOptedOutResponse = {}));\nvar ListPlatformApplicationsInput;\n(function (ListPlatformApplicationsInput) {\n    ListPlatformApplicationsInput.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(ListPlatformApplicationsInput = exports.ListPlatformApplicationsInput || (exports.ListPlatformApplicationsInput = {}));\nvar PlatformApplication;\n(function (PlatformApplication) {\n    PlatformApplication.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(PlatformApplication = exports.PlatformApplication || (exports.PlatformApplication = {}));\nvar ListPlatformApplicationsResponse;\n(function (ListPlatformApplicationsResponse) {\n    ListPlatformApplicationsResponse.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(ListPlatformApplicationsResponse = exports.ListPlatformApplicationsResponse || (exports.ListPlatformApplicationsResponse = {}));\nvar ListSMSSandboxPhoneNumbersInput;\n(function (ListSMSSandboxPhoneNumbersInput) {\n    ListSMSSandboxPhoneNumbersInput.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(ListSMSSandboxPhoneNumbersInput = exports.ListSMSSandboxPhoneNumbersInput || (exports.ListSMSSandboxPhoneNumbersInput = {}));\nvar SMSSandboxPhoneNumberVerificationStatus;\n(function (SMSSandboxPhoneNumberVerificationStatus) {\n    SMSSandboxPhoneNumberVerificationStatus[\"Pending\"] = \"Pending\";\n    SMSSandboxPhoneNumberVerificationStatus[\"Verified\"] = \"Verified\";\n})(SMSSandboxPhoneNumberVerificationStatus = exports.SMSSandboxPhoneNumberVerificationStatus || (exports.SMSSandboxPhoneNumberVerificationStatus = {}));\nvar SMSSandboxPhoneNumber;\n(function (SMSSandboxPhoneNumber) {\n    SMSSandboxPhoneNumber.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(SMSSandboxPhoneNumber = exports.SMSSandboxPhoneNumber || (exports.SMSSandboxPhoneNumber = {}));\nvar ListSMSSandboxPhoneNumbersResult;\n(function (ListSMSSandboxPhoneNumbersResult) {\n    ListSMSSandboxPhoneNumbersResult.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(ListSMSSandboxPhoneNumbersResult = exports.ListSMSSandboxPhoneNumbersResult || (exports.ListSMSSandboxPhoneNumbersResult = {}));\nvar ListSubscriptionsInput;\n(function (ListSubscriptionsInput) {\n    ListSubscriptionsInput.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(ListSubscriptionsInput = exports.ListSubscriptionsInput || (exports.ListSubscriptionsInput = {}));\nvar Subscription;\n(function (Subscription) {\n    Subscription.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(Subscription = exports.Subscription || (exports.Subscription = {}));\nvar ListSubscriptionsResponse;\n(function (ListSubscriptionsResponse) {\n    ListSubscriptionsResponse.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(ListSubscriptionsResponse = exports.ListSubscriptionsResponse || (exports.ListSubscriptionsResponse = {}));\nvar ListSubscriptionsByTopicInput;\n(function (ListSubscriptionsByTopicInput) {\n    ListSubscriptionsByTopicInput.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(ListSubscriptionsByTopicInput = exports.ListSubscriptionsByTopicInput || (exports.ListSubscriptionsByTopicInput = {}));\nvar ListSubscriptionsByTopicResponse;\n(function (ListSubscriptionsByTopicResponse) {\n    ListSubscriptionsByTopicResponse.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(ListSubscriptionsByTopicResponse = exports.ListSubscriptionsByTopicResponse || (exports.ListSubscriptionsByTopicResponse = {}));\nvar ListTagsForResourceRequest;\n(function (ListTagsForResourceRequest) {\n    ListTagsForResourceRequest.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(ListTagsForResourceRequest = exports.ListTagsForResourceRequest || (exports.ListTagsForResourceRequest = {}));\nvar ListTagsForResourceResponse;\n(function (ListTagsForResourceResponse) {\n    ListTagsForResourceResponse.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(ListTagsForResourceResponse = exports.ListTagsForResourceResponse || (exports.ListTagsForResourceResponse = {}));\nvar ListTopicsInput;\n(function (ListTopicsInput) {\n    ListTopicsInput.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(ListTopicsInput = exports.ListTopicsInput || (exports.ListTopicsInput = {}));\nvar Topic;\n(function (Topic) {\n    Topic.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(Topic = exports.Topic || (exports.Topic = {}));\nvar ListTopicsResponse;\n(function (ListTopicsResponse) {\n    ListTopicsResponse.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(ListTopicsResponse = exports.ListTopicsResponse || (exports.ListTopicsResponse = {}));\nvar OptInPhoneNumberInput;\n(function (OptInPhoneNumberInput) {\n    OptInPhoneNumberInput.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(OptInPhoneNumberInput = exports.OptInPhoneNumberInput || (exports.OptInPhoneNumberInput = {}));\nvar OptInPhoneNumberResponse;\n(function (OptInPhoneNumberResponse) {\n    OptInPhoneNumberResponse.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(OptInPhoneNumberResponse = exports.OptInPhoneNumberResponse || (exports.OptInPhoneNumberResponse = {}));\nvar MessageAttributeValue;\n(function (MessageAttributeValue) {\n    MessageAttributeValue.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(MessageAttributeValue = exports.MessageAttributeValue || (exports.MessageAttributeValue = {}));\nvar PublishInput;\n(function (PublishInput) {\n    PublishInput.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(PublishInput = exports.PublishInput || (exports.PublishInput = {}));\nvar PublishResponse;\n(function (PublishResponse) {\n    PublishResponse.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(PublishResponse = exports.PublishResponse || (exports.PublishResponse = {}));\nvar PublishBatchRequestEntry;\n(function (PublishBatchRequestEntry) {\n    PublishBatchRequestEntry.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(PublishBatchRequestEntry = exports.PublishBatchRequestEntry || (exports.PublishBatchRequestEntry = {}));\nvar PublishBatchInput;\n(function (PublishBatchInput) {\n    PublishBatchInput.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(PublishBatchInput = exports.PublishBatchInput || (exports.PublishBatchInput = {}));\nvar BatchResultErrorEntry;\n(function (BatchResultErrorEntry) {\n    BatchResultErrorEntry.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(BatchResultErrorEntry = exports.BatchResultErrorEntry || (exports.BatchResultErrorEntry = {}));\nvar PublishBatchResultEntry;\n(function (PublishBatchResultEntry) {\n    PublishBatchResultEntry.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(PublishBatchResultEntry = exports.PublishBatchResultEntry || (exports.PublishBatchResultEntry = {}));\nvar PublishBatchResponse;\n(function (PublishBatchResponse) {\n    PublishBatchResponse.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(PublishBatchResponse = exports.PublishBatchResponse || (exports.PublishBatchResponse = {}));\nvar RemovePermissionInput;\n(function (RemovePermissionInput) {\n    RemovePermissionInput.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(RemovePermissionInput = exports.RemovePermissionInput || (exports.RemovePermissionInput = {}));\nvar SetEndpointAttributesInput;\n(function (SetEndpointAttributesInput) {\n    SetEndpointAttributesInput.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(SetEndpointAttributesInput = exports.SetEndpointAttributesInput || (exports.SetEndpointAttributesInput = {}));\nvar SetPlatformApplicationAttributesInput;\n(function (SetPlatformApplicationAttributesInput) {\n    SetPlatformApplicationAttributesInput.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(SetPlatformApplicationAttributesInput = exports.SetPlatformApplicationAttributesInput || (exports.SetPlatformApplicationAttributesInput = {}));\nvar SetSMSAttributesInput;\n(function (SetSMSAttributesInput) {\n    SetSMSAttributesInput.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(SetSMSAttributesInput = exports.SetSMSAttributesInput || (exports.SetSMSAttributesInput = {}));\nvar SetSMSAttributesResponse;\n(function (SetSMSAttributesResponse) {\n    SetSMSAttributesResponse.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(SetSMSAttributesResponse = exports.SetSMSAttributesResponse || (exports.SetSMSAttributesResponse = {}));\nvar SetSubscriptionAttributesInput;\n(function (SetSubscriptionAttributesInput) {\n    SetSubscriptionAttributesInput.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(SetSubscriptionAttributesInput = exports.SetSubscriptionAttributesInput || (exports.SetSubscriptionAttributesInput = {}));\nvar SetTopicAttributesInput;\n(function (SetTopicAttributesInput) {\n    SetTopicAttributesInput.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(SetTopicAttributesInput = exports.SetTopicAttributesInput || (exports.SetTopicAttributesInput = {}));\nvar SubscribeInput;\n(function (SubscribeInput) {\n    SubscribeInput.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(SubscribeInput = exports.SubscribeInput || (exports.SubscribeInput = {}));\nvar SubscribeResponse;\n(function (SubscribeResponse) {\n    SubscribeResponse.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(SubscribeResponse = exports.SubscribeResponse || (exports.SubscribeResponse = {}));\nvar TagResourceRequest;\n(function (TagResourceRequest) {\n    TagResourceRequest.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(TagResourceRequest = exports.TagResourceRequest || (exports.TagResourceRequest = {}));\nvar TagResourceResponse;\n(function (TagResourceResponse) {\n    TagResourceResponse.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(TagResourceResponse = exports.TagResourceResponse || (exports.TagResourceResponse = {}));\nvar UnsubscribeInput;\n(function (UnsubscribeInput) {\n    UnsubscribeInput.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(UnsubscribeInput = exports.UnsubscribeInput || (exports.UnsubscribeInput = {}));\nvar UntagResourceRequest;\n(function (UntagResourceRequest) {\n    UntagResourceRequest.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(UntagResourceRequest = exports.UntagResourceRequest || (exports.UntagResourceRequest = {}));\nvar UntagResourceResponse;\n(function (UntagResourceResponse) {\n    UntagResourceResponse.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(UntagResourceResponse = exports.UntagResourceResponse || (exports.UntagResourceResponse = {}));\nvar VerifySMSSandboxPhoneNumberInput;\n(function (VerifySMSSandboxPhoneNumberInput) {\n    VerifySMSSandboxPhoneNumberInput.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(VerifySMSSandboxPhoneNumberInput = exports.VerifySMSSandboxPhoneNumberInput || (exports.VerifySMSSandboxPhoneNumberInput = {}));\nvar VerifySMSSandboxPhoneNumberResult;\n(function (VerifySMSSandboxPhoneNumberResult) {\n    VerifySMSSandboxPhoneNumberResult.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(VerifySMSSandboxPhoneNumberResult = exports.VerifySMSSandboxPhoneNumberResult || (exports.VerifySMSSandboxPhoneNumberResult = {}));\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.paginateListEndpointsByPlatformApplication = void 0;\nconst ListEndpointsByPlatformApplicationCommand_1 = require(\"../commands/ListEndpointsByPlatformApplicationCommand\");\nconst SNS_1 = require(\"../SNS\");\nconst SNSClient_1 = require(\"../SNSClient\");\nconst makePagedClientRequest = async (client, input, ...args) => {\n    return await client.send(new ListEndpointsByPlatformApplicationCommand_1.ListEndpointsByPlatformApplicationCommand(input), ...args);\n};\nconst makePagedRequest = async (client, input, ...args) => {\n    return await client.listEndpointsByPlatformApplication(input, ...args);\n};\nasync function* paginateListEndpointsByPlatformApplication(config, input, ...additionalArguments) {\n    let token = config.startingToken || undefined;\n    let hasNext = true;\n    let page;\n    while (hasNext) {\n        input.NextToken = token;\n        if (config.client instanceof SNS_1.SNS) {\n            page = await makePagedRequest(config.client, input, ...additionalArguments);\n        }\n        else if (config.client instanceof SNSClient_1.SNSClient) {\n            page = await makePagedClientRequest(config.client, input, ...additionalArguments);\n        }\n        else {\n            throw new Error(\"Invalid client, expected SNS | SNSClient\");\n        }\n        yield page;\n        token = page.NextToken;\n        hasNext = !!token;\n    }\n    return undefined;\n}\nexports.paginateListEndpointsByPlatformApplication = paginateListEndpointsByPlatformApplication;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.paginateListOriginationNumbers = void 0;\nconst ListOriginationNumbersCommand_1 = require(\"../commands/ListOriginationNumbersCommand\");\nconst SNS_1 = require(\"../SNS\");\nconst SNSClient_1 = require(\"../SNSClient\");\nconst makePagedClientRequest = async (client, input, ...args) => {\n    return await client.send(new ListOriginationNumbersCommand_1.ListOriginationNumbersCommand(input), ...args);\n};\nconst makePagedRequest = async (client, input, ...args) => {\n    return await client.listOriginationNumbers(input, ...args);\n};\nasync function* paginateListOriginationNumbers(config, input, ...additionalArguments) {\n    let token = config.startingToken || undefined;\n    let hasNext = true;\n    let page;\n    while (hasNext) {\n        input.NextToken = token;\n        input[\"MaxResults\"] = config.pageSize;\n        if (config.client instanceof SNS_1.SNS) {\n            page = await makePagedRequest(config.client, input, ...additionalArguments);\n        }\n        else if (config.client instanceof SNSClient_1.SNSClient) {\n            page = await makePagedClientRequest(config.client, input, ...additionalArguments);\n        }\n        else {\n            throw new Error(\"Invalid client, expected SNS | SNSClient\");\n        }\n        yield page;\n        token = page.NextToken;\n        hasNext = !!token;\n    }\n    return undefined;\n}\nexports.paginateListOriginationNumbers = paginateListOriginationNumbers;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.paginateListPhoneNumbersOptedOut = void 0;\nconst ListPhoneNumbersOptedOutCommand_1 = require(\"../commands/ListPhoneNumbersOptedOutCommand\");\nconst SNS_1 = require(\"../SNS\");\nconst SNSClient_1 = require(\"../SNSClient\");\nconst makePagedClientRequest = async (client, input, ...args) => {\n    return await client.send(new ListPhoneNumbersOptedOutCommand_1.ListPhoneNumbersOptedOutCommand(input), ...args);\n};\nconst makePagedRequest = async (client, input, ...args) => {\n    return await client.listPhoneNumbersOptedOut(input, ...args);\n};\nasync function* paginateListPhoneNumbersOptedOut(config, input, ...additionalArguments) {\n    let token = config.startingToken || undefined;\n    let hasNext = true;\n    let page;\n    while (hasNext) {\n        input.nextToken = token;\n        if (config.client instanceof SNS_1.SNS) {\n            page = await makePagedRequest(config.client, input, ...additionalArguments);\n        }\n        else if (config.client instanceof SNSClient_1.SNSClient) {\n            page = await makePagedClientRequest(config.client, input, ...additionalArguments);\n        }\n        else {\n            throw new Error(\"Invalid client, expected SNS | SNSClient\");\n        }\n        yield page;\n        token = page.nextToken;\n        hasNext = !!token;\n    }\n    return undefined;\n}\nexports.paginateListPhoneNumbersOptedOut = paginateListPhoneNumbersOptedOut;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.paginateListPlatformApplications = void 0;\nconst ListPlatformApplicationsCommand_1 = require(\"../commands/ListPlatformApplicationsCommand\");\nconst SNS_1 = require(\"../SNS\");\nconst SNSClient_1 = require(\"../SNSClient\");\nconst makePagedClientRequest = async (client, input, ...args) => {\n    return await client.send(new ListPlatformApplicationsCommand_1.ListPlatformApplicationsCommand(input), ...args);\n};\nconst makePagedRequest = async (client, input, ...args) => {\n    return await client.listPlatformApplications(input, ...args);\n};\nasync function* paginateListPlatformApplications(config, input, ...additionalArguments) {\n    let token = config.startingToken || undefined;\n    let hasNext = true;\n    let page;\n    while (hasNext) {\n        input.NextToken = token;\n        if (config.client instanceof SNS_1.SNS) {\n            page = await makePagedRequest(config.client, input, ...additionalArguments);\n        }\n        else if (config.client instanceof SNSClient_1.SNSClient) {\n            page = await makePagedClientRequest(config.client, input, ...additionalArguments);\n        }\n        else {\n            throw new Error(\"Invalid client, expected SNS | SNSClient\");\n        }\n        yield page;\n        token = page.NextToken;\n        hasNext = !!token;\n    }\n    return undefined;\n}\nexports.paginateListPlatformApplications = paginateListPlatformApplications;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.paginateListSMSSandboxPhoneNumbers = void 0;\nconst ListSMSSandboxPhoneNumbersCommand_1 = require(\"../commands/ListSMSSandboxPhoneNumbersCommand\");\nconst SNS_1 = require(\"../SNS\");\nconst SNSClient_1 = require(\"../SNSClient\");\nconst makePagedClientRequest = async (client, input, ...args) => {\n    return await client.send(new ListSMSSandboxPhoneNumbersCommand_1.ListSMSSandboxPhoneNumbersCommand(input), ...args);\n};\nconst makePagedRequest = async (client, input, ...args) => {\n    return await client.listSMSSandboxPhoneNumbers(input, ...args);\n};\nasync function* paginateListSMSSandboxPhoneNumbers(config, input, ...additionalArguments) {\n    let token = config.startingToken || undefined;\n    let hasNext = true;\n    let page;\n    while (hasNext) {\n        input.NextToken = token;\n        input[\"MaxResults\"] = config.pageSize;\n        if (config.client instanceof SNS_1.SNS) {\n            page = await makePagedRequest(config.client, input, ...additionalArguments);\n        }\n        else if (config.client instanceof SNSClient_1.SNSClient) {\n            page = await makePagedClientRequest(config.client, input, ...additionalArguments);\n        }\n        else {\n            throw new Error(\"Invalid client, expected SNS | SNSClient\");\n        }\n        yield page;\n        token = page.NextToken;\n        hasNext = !!token;\n    }\n    return undefined;\n}\nexports.paginateListSMSSandboxPhoneNumbers = paginateListSMSSandboxPhoneNumbers;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.paginateListSubscriptionsByTopic = void 0;\nconst ListSubscriptionsByTopicCommand_1 = require(\"../commands/ListSubscriptionsByTopicCommand\");\nconst SNS_1 = require(\"../SNS\");\nconst SNSClient_1 = require(\"../SNSClient\");\nconst makePagedClientRequest = async (client, input, ...args) => {\n    return await client.send(new ListSubscriptionsByTopicCommand_1.ListSubscriptionsByTopicCommand(input), ...args);\n};\nconst makePagedRequest = async (client, input, ...args) => {\n    return await client.listSubscriptionsByTopic(input, ...args);\n};\nasync function* paginateListSubscriptionsByTopic(config, input, ...additionalArguments) {\n    let token = config.startingToken || undefined;\n    let hasNext = true;\n    let page;\n    while (hasNext) {\n        input.NextToken = token;\n        if (config.client instanceof SNS_1.SNS) {\n            page = await makePagedRequest(config.client, input, ...additionalArguments);\n        }\n        else if (config.client instanceof SNSClient_1.SNSClient) {\n            page = await makePagedClientRequest(config.client, input, ...additionalArguments);\n        }\n        else {\n            throw new Error(\"Invalid client, expected SNS | SNSClient\");\n        }\n        yield page;\n        token = page.NextToken;\n        hasNext = !!token;\n    }\n    return undefined;\n}\nexports.paginateListSubscriptionsByTopic = paginateListSubscriptionsByTopic;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.paginateListSubscriptions = void 0;\nconst ListSubscriptionsCommand_1 = require(\"../commands/ListSubscriptionsCommand\");\nconst SNS_1 = require(\"../SNS\");\nconst SNSClient_1 = require(\"../SNSClient\");\nconst makePagedClientRequest = async (client, input, ...args) => {\n    return await client.send(new ListSubscriptionsCommand_1.ListSubscriptionsCommand(input), ...args);\n};\nconst makePagedRequest = async (client, input, ...args) => {\n    return await client.listSubscriptions(input, ...args);\n};\nasync function* paginateListSubscriptions(config, input, ...additionalArguments) {\n    let token = config.startingToken || undefined;\n    let hasNext = true;\n    let page;\n    while (hasNext) {\n        input.NextToken = token;\n        if (config.client instanceof SNS_1.SNS) {\n            page = await makePagedRequest(config.client, input, ...additionalArguments);\n        }\n        else if (config.client instanceof SNSClient_1.SNSClient) {\n            page = await makePagedClientRequest(config.client, input, ...additionalArguments);\n        }\n        else {\n            throw new Error(\"Invalid client, expected SNS | SNSClient\");\n        }\n        yield page;\n        token = page.NextToken;\n        hasNext = !!token;\n    }\n    return undefined;\n}\nexports.paginateListSubscriptions = paginateListSubscriptions;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.paginateListTopics = void 0;\nconst ListTopicsCommand_1 = require(\"../commands/ListTopicsCommand\");\nconst SNS_1 = require(\"../SNS\");\nconst SNSClient_1 = require(\"../SNSClient\");\nconst makePagedClientRequest = async (client, input, ...args) => {\n    return await client.send(new ListTopicsCommand_1.ListTopicsCommand(input), ...args);\n};\nconst makePagedRequest = async (client, input, ...args) => {\n    return await client.listTopics(input, ...args);\n};\nasync function* paginateListTopics(config, input, ...additionalArguments) {\n    let token = config.startingToken || undefined;\n    let hasNext = true;\n    let page;\n    while (hasNext) {\n        input.NextToken = token;\n        if (config.client instanceof SNS_1.SNS) {\n            page = await makePagedRequest(config.client, input, ...additionalArguments);\n        }\n        else if (config.client instanceof SNSClient_1.SNSClient) {\n            page = await makePagedClientRequest(config.client, input, ...additionalArguments);\n        }\n        else {\n            throw new Error(\"Invalid client, expected SNS | SNSClient\");\n        }\n        yield page;\n        token = page.NextToken;\n        hasNext = !!token;\n    }\n    return undefined;\n}\nexports.paginateListTopics = paginateListTopics;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = require(\"tslib\");\ntslib_1.__exportStar(require(\"./Interfaces\"), exports);\ntslib_1.__exportStar(require(\"./ListEndpointsByPlatformApplicationPaginator\"), exports);\ntslib_1.__exportStar(require(\"./ListOriginationNumbersPaginator\"), exports);\ntslib_1.__exportStar(require(\"./ListPhoneNumbersOptedOutPaginator\"), exports);\ntslib_1.__exportStar(require(\"./ListPlatformApplicationsPaginator\"), exports);\ntslib_1.__exportStar(require(\"./ListSMSSandboxPhoneNumbersPaginator\"), exports);\ntslib_1.__exportStar(require(\"./ListSubscriptionsByTopicPaginator\"), exports);\ntslib_1.__exportStar(require(\"./ListSubscriptionsPaginator\"), exports);\ntslib_1.__exportStar(require(\"./ListTopicsPaginator\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.deserializeAws_queryDeleteSMSSandboxPhoneNumberCommand = exports.deserializeAws_queryDeletePlatformApplicationCommand = exports.deserializeAws_queryDeleteEndpointCommand = exports.deserializeAws_queryCreateTopicCommand = exports.deserializeAws_queryCreateSMSSandboxPhoneNumberCommand = exports.deserializeAws_queryCreatePlatformEndpointCommand = exports.deserializeAws_queryCreatePlatformApplicationCommand = exports.deserializeAws_queryConfirmSubscriptionCommand = exports.deserializeAws_queryCheckIfPhoneNumberIsOptedOutCommand = exports.deserializeAws_queryAddPermissionCommand = exports.serializeAws_queryVerifySMSSandboxPhoneNumberCommand = exports.serializeAws_queryUntagResourceCommand = exports.serializeAws_queryUnsubscribeCommand = exports.serializeAws_queryTagResourceCommand = exports.serializeAws_querySubscribeCommand = exports.serializeAws_querySetTopicAttributesCommand = exports.serializeAws_querySetSubscriptionAttributesCommand = exports.serializeAws_querySetSMSAttributesCommand = exports.serializeAws_querySetPlatformApplicationAttributesCommand = exports.serializeAws_querySetEndpointAttributesCommand = exports.serializeAws_queryRemovePermissionCommand = exports.serializeAws_queryPublishBatchCommand = exports.serializeAws_queryPublishCommand = exports.serializeAws_queryOptInPhoneNumberCommand = exports.serializeAws_queryListTopicsCommand = exports.serializeAws_queryListTagsForResourceCommand = exports.serializeAws_queryListSubscriptionsByTopicCommand = exports.serializeAws_queryListSubscriptionsCommand = exports.serializeAws_queryListSMSSandboxPhoneNumbersCommand = exports.serializeAws_queryListPlatformApplicationsCommand = exports.serializeAws_queryListPhoneNumbersOptedOutCommand = exports.serializeAws_queryListOriginationNumbersCommand = exports.serializeAws_queryListEndpointsByPlatformApplicationCommand = exports.serializeAws_queryGetTopicAttributesCommand = exports.serializeAws_queryGetSubscriptionAttributesCommand = exports.serializeAws_queryGetSMSSandboxAccountStatusCommand = exports.serializeAws_queryGetSMSAttributesCommand = exports.serializeAws_queryGetPlatformApplicationAttributesCommand = exports.serializeAws_queryGetEndpointAttributesCommand = exports.serializeAws_queryDeleteTopicCommand = exports.serializeAws_queryDeleteSMSSandboxPhoneNumberCommand = exports.serializeAws_queryDeletePlatformApplicationCommand = exports.serializeAws_queryDeleteEndpointCommand = exports.serializeAws_queryCreateTopicCommand = exports.serializeAws_queryCreateSMSSandboxPhoneNumberCommand = exports.serializeAws_queryCreatePlatformEndpointCommand = exports.serializeAws_queryCreatePlatformApplicationCommand = exports.serializeAws_queryConfirmSubscriptionCommand = exports.serializeAws_queryCheckIfPhoneNumberIsOptedOutCommand = exports.serializeAws_queryAddPermissionCommand = void 0;\nexports.deserializeAws_queryVerifySMSSandboxPhoneNumberCommand = exports.deserializeAws_queryUntagResourceCommand = exports.deserializeAws_queryUnsubscribeCommand = exports.deserializeAws_queryTagResourceCommand = exports.deserializeAws_querySubscribeCommand = exports.deserializeAws_querySetTopicAttributesCommand = exports.deserializeAws_querySetSubscriptionAttributesCommand = exports.deserializeAws_querySetSMSAttributesCommand = exports.deserializeAws_querySetPlatformApplicationAttributesCommand = exports.deserializeAws_querySetEndpointAttributesCommand = exports.deserializeAws_queryRemovePermissionCommand = exports.deserializeAws_queryPublishBatchCommand = exports.deserializeAws_queryPublishCommand = exports.deserializeAws_queryOptInPhoneNumberCommand = exports.deserializeAws_queryListTopicsCommand = exports.deserializeAws_queryListTagsForResourceCommand = exports.deserializeAws_queryListSubscriptionsByTopicCommand = exports.deserializeAws_queryListSubscriptionsCommand = exports.deserializeAws_queryListSMSSandboxPhoneNumbersCommand = exports.deserializeAws_queryListPlatformApplicationsCommand = exports.deserializeAws_queryListPhoneNumbersOptedOutCommand = exports.deserializeAws_queryListOriginationNumbersCommand = exports.deserializeAws_queryListEndpointsByPlatformApplicationCommand = exports.deserializeAws_queryGetTopicAttributesCommand = exports.deserializeAws_queryGetSubscriptionAttributesCommand = exports.deserializeAws_queryGetSMSSandboxAccountStatusCommand = exports.deserializeAws_queryGetSMSAttributesCommand = exports.deserializeAws_queryGetPlatformApplicationAttributesCommand = exports.deserializeAws_queryGetEndpointAttributesCommand = exports.deserializeAws_queryDeleteTopicCommand = void 0;\nconst protocol_http_1 = require(\"@aws-sdk/protocol-http\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\nconst entities_1 = require(\"entities\");\nconst fast_xml_parser_1 = require(\"fast-xml-parser\");\nconst serializeAws_queryAddPermissionCommand = async (input, context) => {\n    const headers = {\n        \"content-type\": \"application/x-www-form-urlencoded\",\n    };\n    let body;\n    body = buildFormUrlencodedString({\n        ...serializeAws_queryAddPermissionInput(input, context),\n        Action: \"AddPermission\",\n        Version: \"2010-03-31\",\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexports.serializeAws_queryAddPermissionCommand = serializeAws_queryAddPermissionCommand;\nconst serializeAws_queryCheckIfPhoneNumberIsOptedOutCommand = async (input, context) => {\n    const headers = {\n        \"content-type\": \"application/x-www-form-urlencoded\",\n    };\n    let body;\n    body = buildFormUrlencodedString({\n        ...serializeAws_queryCheckIfPhoneNumberIsOptedOutInput(input, context),\n        Action: \"CheckIfPhoneNumberIsOptedOut\",\n        Version: \"2010-03-31\",\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexports.serializeAws_queryCheckIfPhoneNumberIsOptedOutCommand = serializeAws_queryCheckIfPhoneNumberIsOptedOutCommand;\nconst serializeAws_queryConfirmSubscriptionCommand = async (input, context) => {\n    const headers = {\n        \"content-type\": \"application/x-www-form-urlencoded\",\n    };\n    let body;\n    body = buildFormUrlencodedString({\n        ...serializeAws_queryConfirmSubscriptionInput(input, context),\n        Action: \"ConfirmSubscription\",\n        Version: \"2010-03-31\",\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexports.serializeAws_queryConfirmSubscriptionCommand = serializeAws_queryConfirmSubscriptionCommand;\nconst serializeAws_queryCreatePlatformApplicationCommand = async (input, context) => {\n    const headers = {\n        \"content-type\": \"application/x-www-form-urlencoded\",\n    };\n    let body;\n    body = buildFormUrlencodedString({\n        ...serializeAws_queryCreatePlatformApplicationInput(input, context),\n        Action: \"CreatePlatformApplication\",\n        Version: \"2010-03-31\",\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexports.serializeAws_queryCreatePlatformApplicationCommand = serializeAws_queryCreatePlatformApplicationCommand;\nconst serializeAws_queryCreatePlatformEndpointCommand = async (input, context) => {\n    const headers = {\n        \"content-type\": \"application/x-www-form-urlencoded\",\n    };\n    let body;\n    body = buildFormUrlencodedString({\n        ...serializeAws_queryCreatePlatformEndpointInput(input, context),\n        Action: \"CreatePlatformEndpoint\",\n        Version: \"2010-03-31\",\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexports.serializeAws_queryCreatePlatformEndpointCommand = serializeAws_queryCreatePlatformEndpointCommand;\nconst serializeAws_queryCreateSMSSandboxPhoneNumberCommand = async (input, context) => {\n    const headers = {\n        \"content-type\": \"application/x-www-form-urlencoded\",\n    };\n    let body;\n    body = buildFormUrlencodedString({\n        ...serializeAws_queryCreateSMSSandboxPhoneNumberInput(input, context),\n        Action: \"CreateSMSSandboxPhoneNumber\",\n        Version: \"2010-03-31\",\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexports.serializeAws_queryCreateSMSSandboxPhoneNumberCommand = serializeAws_queryCreateSMSSandboxPhoneNumberCommand;\nconst serializeAws_queryCreateTopicCommand = async (input, context) => {\n    const headers = {\n        \"content-type\": \"application/x-www-form-urlencoded\",\n    };\n    let body;\n    body = buildFormUrlencodedString({\n        ...serializeAws_queryCreateTopicInput(input, context),\n        Action: \"CreateTopic\",\n        Version: \"2010-03-31\",\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexports.serializeAws_queryCreateTopicCommand = serializeAws_queryCreateTopicCommand;\nconst serializeAws_queryDeleteEndpointCommand = async (input, context) => {\n    const headers = {\n        \"content-type\": \"application/x-www-form-urlencoded\",\n    };\n    let body;\n    body = buildFormUrlencodedString({\n        ...serializeAws_queryDeleteEndpointInput(input, context),\n        Action: \"DeleteEndpoint\",\n        Version: \"2010-03-31\",\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexports.serializeAws_queryDeleteEndpointCommand = serializeAws_queryDeleteEndpointCommand;\nconst serializeAws_queryDeletePlatformApplicationCommand = async (input, context) => {\n    const headers = {\n        \"content-type\": \"application/x-www-form-urlencoded\",\n    };\n    let body;\n    body = buildFormUrlencodedString({\n        ...serializeAws_queryDeletePlatformApplicationInput(input, context),\n        Action: \"DeletePlatformApplication\",\n        Version: \"2010-03-31\",\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexports.serializeAws_queryDeletePlatformApplicationCommand = serializeAws_queryDeletePlatformApplicationCommand;\nconst serializeAws_queryDeleteSMSSandboxPhoneNumberCommand = async (input, context) => {\n    const headers = {\n        \"content-type\": \"application/x-www-form-urlencoded\",\n    };\n    let body;\n    body = buildFormUrlencodedString({\n        ...serializeAws_queryDeleteSMSSandboxPhoneNumberInput(input, context),\n        Action: \"DeleteSMSSandboxPhoneNumber\",\n        Version: \"2010-03-31\",\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexports.serializeAws_queryDeleteSMSSandboxPhoneNumberCommand = serializeAws_queryDeleteSMSSandboxPhoneNumberCommand;\nconst serializeAws_queryDeleteTopicCommand = async (input, context) => {\n    const headers = {\n        \"content-type\": \"application/x-www-form-urlencoded\",\n    };\n    let body;\n    body = buildFormUrlencodedString({\n        ...serializeAws_queryDeleteTopicInput(input, context),\n        Action: \"DeleteTopic\",\n        Version: \"2010-03-31\",\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexports.serializeAws_queryDeleteTopicCommand = serializeAws_queryDeleteTopicCommand;\nconst serializeAws_queryGetEndpointAttributesCommand = async (input, context) => {\n    const headers = {\n        \"content-type\": \"application/x-www-form-urlencoded\",\n    };\n    let body;\n    body = buildFormUrlencodedString({\n        ...serializeAws_queryGetEndpointAttributesInput(input, context),\n        Action: \"GetEndpointAttributes\",\n        Version: \"2010-03-31\",\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexports.serializeAws_queryGetEndpointAttributesCommand = serializeAws_queryGetEndpointAttributesCommand;\nconst serializeAws_queryGetPlatformApplicationAttributesCommand = async (input, context) => {\n    const headers = {\n        \"content-type\": \"application/x-www-form-urlencoded\",\n    };\n    let body;\n    body = buildFormUrlencodedString({\n        ...serializeAws_queryGetPlatformApplicationAttributesInput(input, context),\n        Action: \"GetPlatformApplicationAttributes\",\n        Version: \"2010-03-31\",\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexports.serializeAws_queryGetPlatformApplicationAttributesCommand = serializeAws_queryGetPlatformApplicationAttributesCommand;\nconst serializeAws_queryGetSMSAttributesCommand = async (input, context) => {\n    const headers = {\n        \"content-type\": \"application/x-www-form-urlencoded\",\n    };\n    let body;\n    body = buildFormUrlencodedString({\n        ...serializeAws_queryGetSMSAttributesInput(input, context),\n        Action: \"GetSMSAttributes\",\n        Version: \"2010-03-31\",\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexports.serializeAws_queryGetSMSAttributesCommand = serializeAws_queryGetSMSAttributesCommand;\nconst serializeAws_queryGetSMSSandboxAccountStatusCommand = async (input, context) => {\n    const headers = {\n        \"content-type\": \"application/x-www-form-urlencoded\",\n    };\n    let body;\n    body = buildFormUrlencodedString({\n        ...serializeAws_queryGetSMSSandboxAccountStatusInput(input, context),\n        Action: \"GetSMSSandboxAccountStatus\",\n        Version: \"2010-03-31\",\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexports.serializeAws_queryGetSMSSandboxAccountStatusCommand = serializeAws_queryGetSMSSandboxAccountStatusCommand;\nconst serializeAws_queryGetSubscriptionAttributesCommand = async (input, context) => {\n    const headers = {\n        \"content-type\": \"application/x-www-form-urlencoded\",\n    };\n    let body;\n    body = buildFormUrlencodedString({\n        ...serializeAws_queryGetSubscriptionAttributesInput(input, context),\n        Action: \"GetSubscriptionAttributes\",\n        Version: \"2010-03-31\",\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexports.serializeAws_queryGetSubscriptionAttributesCommand = serializeAws_queryGetSubscriptionAttributesCommand;\nconst serializeAws_queryGetTopicAttributesCommand = async (input, context) => {\n    const headers = {\n        \"content-type\": \"application/x-www-form-urlencoded\",\n    };\n    let body;\n    body = buildFormUrlencodedString({\n        ...serializeAws_queryGetTopicAttributesInput(input, context),\n        Action: \"GetTopicAttributes\",\n        Version: \"2010-03-31\",\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexports.serializeAws_queryGetTopicAttributesCommand = serializeAws_queryGetTopicAttributesCommand;\nconst serializeAws_queryListEndpointsByPlatformApplicationCommand = async (input, context) => {\n    const headers = {\n        \"content-type\": \"application/x-www-form-urlencoded\",\n    };\n    let body;\n    body = buildFormUrlencodedString({\n        ...serializeAws_queryListEndpointsByPlatformApplicationInput(input, context),\n        Action: \"ListEndpointsByPlatformApplication\",\n        Version: \"2010-03-31\",\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexports.serializeAws_queryListEndpointsByPlatformApplicationCommand = serializeAws_queryListEndpointsByPlatformApplicationCommand;\nconst serializeAws_queryListOriginationNumbersCommand = async (input, context) => {\n    const headers = {\n        \"content-type\": \"application/x-www-form-urlencoded\",\n    };\n    let body;\n    body = buildFormUrlencodedString({\n        ...serializeAws_queryListOriginationNumbersRequest(input, context),\n        Action: \"ListOriginationNumbers\",\n        Version: \"2010-03-31\",\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexports.serializeAws_queryListOriginationNumbersCommand = serializeAws_queryListOriginationNumbersCommand;\nconst serializeAws_queryListPhoneNumbersOptedOutCommand = async (input, context) => {\n    const headers = {\n        \"content-type\": \"application/x-www-form-urlencoded\",\n    };\n    let body;\n    body = buildFormUrlencodedString({\n        ...serializeAws_queryListPhoneNumbersOptedOutInput(input, context),\n        Action: \"ListPhoneNumbersOptedOut\",\n        Version: \"2010-03-31\",\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexports.serializeAws_queryListPhoneNumbersOptedOutCommand = serializeAws_queryListPhoneNumbersOptedOutCommand;\nconst serializeAws_queryListPlatformApplicationsCommand = async (input, context) => {\n    const headers = {\n        \"content-type\": \"application/x-www-form-urlencoded\",\n    };\n    let body;\n    body = buildFormUrlencodedString({\n        ...serializeAws_queryListPlatformApplicationsInput(input, context),\n        Action: \"ListPlatformApplications\",\n        Version: \"2010-03-31\",\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexports.serializeAws_queryListPlatformApplicationsCommand = serializeAws_queryListPlatformApplicationsCommand;\nconst serializeAws_queryListSMSSandboxPhoneNumbersCommand = async (input, context) => {\n    const headers = {\n        \"content-type\": \"application/x-www-form-urlencoded\",\n    };\n    let body;\n    body = buildFormUrlencodedString({\n        ...serializeAws_queryListSMSSandboxPhoneNumbersInput(input, context),\n        Action: \"ListSMSSandboxPhoneNumbers\",\n        Version: \"2010-03-31\",\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexports.serializeAws_queryListSMSSandboxPhoneNumbersCommand = serializeAws_queryListSMSSandboxPhoneNumbersCommand;\nconst serializeAws_queryListSubscriptionsCommand = async (input, context) => {\n    const headers = {\n        \"content-type\": \"application/x-www-form-urlencoded\",\n    };\n    let body;\n    body = buildFormUrlencodedString({\n        ...serializeAws_queryListSubscriptionsInput(input, context),\n        Action: \"ListSubscriptions\",\n        Version: \"2010-03-31\",\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexports.serializeAws_queryListSubscriptionsCommand = serializeAws_queryListSubscriptionsCommand;\nconst serializeAws_queryListSubscriptionsByTopicCommand = async (input, context) => {\n    const headers = {\n        \"content-type\": \"application/x-www-form-urlencoded\",\n    };\n    let body;\n    body = buildFormUrlencodedString({\n        ...serializeAws_queryListSubscriptionsByTopicInput(input, context),\n        Action: \"ListSubscriptionsByTopic\",\n        Version: \"2010-03-31\",\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexports.serializeAws_queryListSubscriptionsByTopicCommand = serializeAws_queryListSubscriptionsByTopicCommand;\nconst serializeAws_queryListTagsForResourceCommand = async (input, context) => {\n    const headers = {\n        \"content-type\": \"application/x-www-form-urlencoded\",\n    };\n    let body;\n    body = buildFormUrlencodedString({\n        ...serializeAws_queryListTagsForResourceRequest(input, context),\n        Action: \"ListTagsForResource\",\n        Version: \"2010-03-31\",\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexports.serializeAws_queryListTagsForResourceCommand = serializeAws_queryListTagsForResourceCommand;\nconst serializeAws_queryListTopicsCommand = async (input, context) => {\n    const headers = {\n        \"content-type\": \"application/x-www-form-urlencoded\",\n    };\n    let body;\n    body = buildFormUrlencodedString({\n        ...serializeAws_queryListTopicsInput(input, context),\n        Action: \"ListTopics\",\n        Version: \"2010-03-31\",\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexports.serializeAws_queryListTopicsCommand = serializeAws_queryListTopicsCommand;\nconst serializeAws_queryOptInPhoneNumberCommand = async (input, context) => {\n    const headers = {\n        \"content-type\": \"application/x-www-form-urlencoded\",\n    };\n    let body;\n    body = buildFormUrlencodedString({\n        ...serializeAws_queryOptInPhoneNumberInput(input, context),\n        Action: \"OptInPhoneNumber\",\n        Version: \"2010-03-31\",\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexports.serializeAws_queryOptInPhoneNumberCommand = serializeAws_queryOptInPhoneNumberCommand;\nconst serializeAws_queryPublishCommand = async (input, context) => {\n    const headers = {\n        \"content-type\": \"application/x-www-form-urlencoded\",\n    };\n    let body;\n    body = buildFormUrlencodedString({\n        ...serializeAws_queryPublishInput(input, context),\n        Action: \"Publish\",\n        Version: \"2010-03-31\",\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexports.serializeAws_queryPublishCommand = serializeAws_queryPublishCommand;\nconst serializeAws_queryPublishBatchCommand = async (input, context) => {\n    const headers = {\n        \"content-type\": \"application/x-www-form-urlencoded\",\n    };\n    let body;\n    body = buildFormUrlencodedString({\n        ...serializeAws_queryPublishBatchInput(input, context),\n        Action: \"PublishBatch\",\n        Version: \"2010-03-31\",\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexports.serializeAws_queryPublishBatchCommand = serializeAws_queryPublishBatchCommand;\nconst serializeAws_queryRemovePermissionCommand = async (input, context) => {\n    const headers = {\n        \"content-type\": \"application/x-www-form-urlencoded\",\n    };\n    let body;\n    body = buildFormUrlencodedString({\n        ...serializeAws_queryRemovePermissionInput(input, context),\n        Action: \"RemovePermission\",\n        Version: \"2010-03-31\",\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexports.serializeAws_queryRemovePermissionCommand = serializeAws_queryRemovePermissionCommand;\nconst serializeAws_querySetEndpointAttributesCommand = async (input, context) => {\n    const headers = {\n        \"content-type\": \"application/x-www-form-urlencoded\",\n    };\n    let body;\n    body = buildFormUrlencodedString({\n        ...serializeAws_querySetEndpointAttributesInput(input, context),\n        Action: \"SetEndpointAttributes\",\n        Version: \"2010-03-31\",\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexports.serializeAws_querySetEndpointAttributesCommand = serializeAws_querySetEndpointAttributesCommand;\nconst serializeAws_querySetPlatformApplicationAttributesCommand = async (input, context) => {\n    const headers = {\n        \"content-type\": \"application/x-www-form-urlencoded\",\n    };\n    let body;\n    body = buildFormUrlencodedString({\n        ...serializeAws_querySetPlatformApplicationAttributesInput(input, context),\n        Action: \"SetPlatformApplicationAttributes\",\n        Version: \"2010-03-31\",\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexports.serializeAws_querySetPlatformApplicationAttributesCommand = serializeAws_querySetPlatformApplicationAttributesCommand;\nconst serializeAws_querySetSMSAttributesCommand = async (input, context) => {\n    const headers = {\n        \"content-type\": \"application/x-www-form-urlencoded\",\n    };\n    let body;\n    body = buildFormUrlencodedString({\n        ...serializeAws_querySetSMSAttributesInput(input, context),\n        Action: \"SetSMSAttributes\",\n        Version: \"2010-03-31\",\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexports.serializeAws_querySetSMSAttributesCommand = serializeAws_querySetSMSAttributesCommand;\nconst serializeAws_querySetSubscriptionAttributesCommand = async (input, context) => {\n    const headers = {\n        \"content-type\": \"application/x-www-form-urlencoded\",\n    };\n    let body;\n    body = buildFormUrlencodedString({\n        ...serializeAws_querySetSubscriptionAttributesInput(input, context),\n        Action: \"SetSubscriptionAttributes\",\n        Version: \"2010-03-31\",\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexports.serializeAws_querySetSubscriptionAttributesCommand = serializeAws_querySetSubscriptionAttributesCommand;\nconst serializeAws_querySetTopicAttributesCommand = async (input, context) => {\n    const headers = {\n        \"content-type\": \"application/x-www-form-urlencoded\",\n    };\n    let body;\n    body = buildFormUrlencodedString({\n        ...serializeAws_querySetTopicAttributesInput(input, context),\n        Action: \"SetTopicAttributes\",\n        Version: \"2010-03-31\",\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexports.serializeAws_querySetTopicAttributesCommand = serializeAws_querySetTopicAttributesCommand;\nconst serializeAws_querySubscribeCommand = async (input, context) => {\n    const headers = {\n        \"content-type\": \"application/x-www-form-urlencoded\",\n    };\n    let body;\n    body = buildFormUrlencodedString({\n        ...serializeAws_querySubscribeInput(input, context),\n        Action: \"Subscribe\",\n        Version: \"2010-03-31\",\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexports.serializeAws_querySubscribeCommand = serializeAws_querySubscribeCommand;\nconst serializeAws_queryTagResourceCommand = async (input, context) => {\n    const headers = {\n        \"content-type\": \"application/x-www-form-urlencoded\",\n    };\n    let body;\n    body = buildFormUrlencodedString({\n        ...serializeAws_queryTagResourceRequest(input, context),\n        Action: \"TagResource\",\n        Version: \"2010-03-31\",\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexports.serializeAws_queryTagResourceCommand = serializeAws_queryTagResourceCommand;\nconst serializeAws_queryUnsubscribeCommand = async (input, context) => {\n    const headers = {\n        \"content-type\": \"application/x-www-form-urlencoded\",\n    };\n    let body;\n    body = buildFormUrlencodedString({\n        ...serializeAws_queryUnsubscribeInput(input, context),\n        Action: \"Unsubscribe\",\n        Version: \"2010-03-31\",\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexports.serializeAws_queryUnsubscribeCommand = serializeAws_queryUnsubscribeCommand;\nconst serializeAws_queryUntagResourceCommand = async (input, context) => {\n    const headers = {\n        \"content-type\": \"application/x-www-form-urlencoded\",\n    };\n    let body;\n    body = buildFormUrlencodedString({\n        ...serializeAws_queryUntagResourceRequest(input, context),\n        Action: \"UntagResource\",\n        Version: \"2010-03-31\",\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexports.serializeAws_queryUntagResourceCommand = serializeAws_queryUntagResourceCommand;\nconst serializeAws_queryVerifySMSSandboxPhoneNumberCommand = async (input, context) => {\n    const headers = {\n        \"content-type\": \"application/x-www-form-urlencoded\",\n    };\n    let body;\n    body = buildFormUrlencodedString({\n        ...serializeAws_queryVerifySMSSandboxPhoneNumberInput(input, context),\n        Action: \"VerifySMSSandboxPhoneNumber\",\n        Version: \"2010-03-31\",\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexports.serializeAws_queryVerifySMSSandboxPhoneNumberCommand = serializeAws_queryVerifySMSSandboxPhoneNumberCommand;\nconst deserializeAws_queryAddPermissionCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return deserializeAws_queryAddPermissionCommandError(output, context);\n    }\n    await collectBody(output.body, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n    };\n    return Promise.resolve(response);\n};\nexports.deserializeAws_queryAddPermissionCommand = deserializeAws_queryAddPermissionCommand;\nconst deserializeAws_queryAddPermissionCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseBody(output.body, context),\n    };\n    let response;\n    let errorCode = \"UnknownError\";\n    errorCode = loadQueryErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"AuthorizationErrorException\":\n        case \"com.amazonaws.sns#AuthorizationErrorException\":\n            response = {\n                ...(await deserializeAws_queryAuthorizationErrorExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"InternalErrorException\":\n        case \"com.amazonaws.sns#InternalErrorException\":\n            response = {\n                ...(await deserializeAws_queryInternalErrorExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"InvalidParameterException\":\n        case \"com.amazonaws.sns#InvalidParameterException\":\n            response = {\n                ...(await deserializeAws_queryInvalidParameterExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"NotFoundException\":\n        case \"com.amazonaws.sns#NotFoundException\":\n            response = {\n                ...(await deserializeAws_queryNotFoundExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        default:\n            const parsedBody = parsedOutput.body;\n            errorCode = parsedBody.Error.code || parsedBody.Error.Code || errorCode;\n            response = {\n                ...parsedBody.Error,\n                name: `${errorCode}`,\n                message: parsedBody.Error.message || parsedBody.Error.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output),\n            };\n    }\n    const message = response.message || response.Message || errorCode;\n    response.message = message;\n    delete response.Message;\n    return Promise.reject(Object.assign(new Error(message), response));\n};\nconst deserializeAws_queryCheckIfPhoneNumberIsOptedOutCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return deserializeAws_queryCheckIfPhoneNumberIsOptedOutCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = deserializeAws_queryCheckIfPhoneNumberIsOptedOutResponse(data.CheckIfPhoneNumberIsOptedOutResult, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return Promise.resolve(response);\n};\nexports.deserializeAws_queryCheckIfPhoneNumberIsOptedOutCommand = deserializeAws_queryCheckIfPhoneNumberIsOptedOutCommand;\nconst deserializeAws_queryCheckIfPhoneNumberIsOptedOutCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseBody(output.body, context),\n    };\n    let response;\n    let errorCode = \"UnknownError\";\n    errorCode = loadQueryErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"AuthorizationErrorException\":\n        case \"com.amazonaws.sns#AuthorizationErrorException\":\n            response = {\n                ...(await deserializeAws_queryAuthorizationErrorExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"InternalErrorException\":\n        case \"com.amazonaws.sns#InternalErrorException\":\n            response = {\n                ...(await deserializeAws_queryInternalErrorExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"InvalidParameterException\":\n        case \"com.amazonaws.sns#InvalidParameterException\":\n            response = {\n                ...(await deserializeAws_queryInvalidParameterExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"ThrottledException\":\n        case \"com.amazonaws.sns#ThrottledException\":\n            response = {\n                ...(await deserializeAws_queryThrottledExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        default:\n            const parsedBody = parsedOutput.body;\n            errorCode = parsedBody.Error.code || parsedBody.Error.Code || errorCode;\n            response = {\n                ...parsedBody.Error,\n                name: `${errorCode}`,\n                message: parsedBody.Error.message || parsedBody.Error.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output),\n            };\n    }\n    const message = response.message || response.Message || errorCode;\n    response.message = message;\n    delete response.Message;\n    return Promise.reject(Object.assign(new Error(message), response));\n};\nconst deserializeAws_queryConfirmSubscriptionCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return deserializeAws_queryConfirmSubscriptionCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = deserializeAws_queryConfirmSubscriptionResponse(data.ConfirmSubscriptionResult, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return Promise.resolve(response);\n};\nexports.deserializeAws_queryConfirmSubscriptionCommand = deserializeAws_queryConfirmSubscriptionCommand;\nconst deserializeAws_queryConfirmSubscriptionCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseBody(output.body, context),\n    };\n    let response;\n    let errorCode = \"UnknownError\";\n    errorCode = loadQueryErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"AuthorizationErrorException\":\n        case \"com.amazonaws.sns#AuthorizationErrorException\":\n            response = {\n                ...(await deserializeAws_queryAuthorizationErrorExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"FilterPolicyLimitExceededException\":\n        case \"com.amazonaws.sns#FilterPolicyLimitExceededException\":\n            response = {\n                ...(await deserializeAws_queryFilterPolicyLimitExceededExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"InternalErrorException\":\n        case \"com.amazonaws.sns#InternalErrorException\":\n            response = {\n                ...(await deserializeAws_queryInternalErrorExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"InvalidParameterException\":\n        case \"com.amazonaws.sns#InvalidParameterException\":\n            response = {\n                ...(await deserializeAws_queryInvalidParameterExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"NotFoundException\":\n        case \"com.amazonaws.sns#NotFoundException\":\n            response = {\n                ...(await deserializeAws_queryNotFoundExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"SubscriptionLimitExceededException\":\n        case \"com.amazonaws.sns#SubscriptionLimitExceededException\":\n            response = {\n                ...(await deserializeAws_querySubscriptionLimitExceededExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        default:\n            const parsedBody = parsedOutput.body;\n            errorCode = parsedBody.Error.code || parsedBody.Error.Code || errorCode;\n            response = {\n                ...parsedBody.Error,\n                name: `${errorCode}`,\n                message: parsedBody.Error.message || parsedBody.Error.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output),\n            };\n    }\n    const message = response.message || response.Message || errorCode;\n    response.message = message;\n    delete response.Message;\n    return Promise.reject(Object.assign(new Error(message), response));\n};\nconst deserializeAws_queryCreatePlatformApplicationCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return deserializeAws_queryCreatePlatformApplicationCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = deserializeAws_queryCreatePlatformApplicationResponse(data.CreatePlatformApplicationResult, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return Promise.resolve(response);\n};\nexports.deserializeAws_queryCreatePlatformApplicationCommand = deserializeAws_queryCreatePlatformApplicationCommand;\nconst deserializeAws_queryCreatePlatformApplicationCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseBody(output.body, context),\n    };\n    let response;\n    let errorCode = \"UnknownError\";\n    errorCode = loadQueryErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"AuthorizationErrorException\":\n        case \"com.amazonaws.sns#AuthorizationErrorException\":\n            response = {\n                ...(await deserializeAws_queryAuthorizationErrorExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"InternalErrorException\":\n        case \"com.amazonaws.sns#InternalErrorException\":\n            response = {\n                ...(await deserializeAws_queryInternalErrorExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"InvalidParameterException\":\n        case \"com.amazonaws.sns#InvalidParameterException\":\n            response = {\n                ...(await deserializeAws_queryInvalidParameterExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        default:\n            const parsedBody = parsedOutput.body;\n            errorCode = parsedBody.Error.code || parsedBody.Error.Code || errorCode;\n            response = {\n                ...parsedBody.Error,\n                name: `${errorCode}`,\n                message: parsedBody.Error.message || parsedBody.Error.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output),\n            };\n    }\n    const message = response.message || response.Message || errorCode;\n    response.message = message;\n    delete response.Message;\n    return Promise.reject(Object.assign(new Error(message), response));\n};\nconst deserializeAws_queryCreatePlatformEndpointCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return deserializeAws_queryCreatePlatformEndpointCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = deserializeAws_queryCreateEndpointResponse(data.CreatePlatformEndpointResult, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return Promise.resolve(response);\n};\nexports.deserializeAws_queryCreatePlatformEndpointCommand = deserializeAws_queryCreatePlatformEndpointCommand;\nconst deserializeAws_queryCreatePlatformEndpointCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseBody(output.body, context),\n    };\n    let response;\n    let errorCode = \"UnknownError\";\n    errorCode = loadQueryErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"AuthorizationErrorException\":\n        case \"com.amazonaws.sns#AuthorizationErrorException\":\n            response = {\n                ...(await deserializeAws_queryAuthorizationErrorExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"InternalErrorException\":\n        case \"com.amazonaws.sns#InternalErrorException\":\n            response = {\n                ...(await deserializeAws_queryInternalErrorExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"InvalidParameterException\":\n        case \"com.amazonaws.sns#InvalidParameterException\":\n            response = {\n                ...(await deserializeAws_queryInvalidParameterExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"NotFoundException\":\n        case \"com.amazonaws.sns#NotFoundException\":\n            response = {\n                ...(await deserializeAws_queryNotFoundExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        default:\n            const parsedBody = parsedOutput.body;\n            errorCode = parsedBody.Error.code || parsedBody.Error.Code || errorCode;\n            response = {\n                ...parsedBody.Error,\n                name: `${errorCode}`,\n                message: parsedBody.Error.message || parsedBody.Error.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output),\n            };\n    }\n    const message = response.message || response.Message || errorCode;\n    response.message = message;\n    delete response.Message;\n    return Promise.reject(Object.assign(new Error(message), response));\n};\nconst deserializeAws_queryCreateSMSSandboxPhoneNumberCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return deserializeAws_queryCreateSMSSandboxPhoneNumberCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = deserializeAws_queryCreateSMSSandboxPhoneNumberResult(data.CreateSMSSandboxPhoneNumberResult, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return Promise.resolve(response);\n};\nexports.deserializeAws_queryCreateSMSSandboxPhoneNumberCommand = deserializeAws_queryCreateSMSSandboxPhoneNumberCommand;\nconst deserializeAws_queryCreateSMSSandboxPhoneNumberCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseBody(output.body, context),\n    };\n    let response;\n    let errorCode = \"UnknownError\";\n    errorCode = loadQueryErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"AuthorizationErrorException\":\n        case \"com.amazonaws.sns#AuthorizationErrorException\":\n            response = {\n                ...(await deserializeAws_queryAuthorizationErrorExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"InternalErrorException\":\n        case \"com.amazonaws.sns#InternalErrorException\":\n            response = {\n                ...(await deserializeAws_queryInternalErrorExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"InvalidParameterException\":\n        case \"com.amazonaws.sns#InvalidParameterException\":\n            response = {\n                ...(await deserializeAws_queryInvalidParameterExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"OptedOutException\":\n        case \"com.amazonaws.sns#OptedOutException\":\n            response = {\n                ...(await deserializeAws_queryOptedOutExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"ThrottledException\":\n        case \"com.amazonaws.sns#ThrottledException\":\n            response = {\n                ...(await deserializeAws_queryThrottledExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"UserErrorException\":\n        case \"com.amazonaws.sns#UserErrorException\":\n            response = {\n                ...(await deserializeAws_queryUserErrorExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        default:\n            const parsedBody = parsedOutput.body;\n            errorCode = parsedBody.Error.code || parsedBody.Error.Code || errorCode;\n            response = {\n                ...parsedBody.Error,\n                name: `${errorCode}`,\n                message: parsedBody.Error.message || parsedBody.Error.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output),\n            };\n    }\n    const message = response.message || response.Message || errorCode;\n    response.message = message;\n    delete response.Message;\n    return Promise.reject(Object.assign(new Error(message), response));\n};\nconst deserializeAws_queryCreateTopicCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return deserializeAws_queryCreateTopicCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = deserializeAws_queryCreateTopicResponse(data.CreateTopicResult, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return Promise.resolve(response);\n};\nexports.deserializeAws_queryCreateTopicCommand = deserializeAws_queryCreateTopicCommand;\nconst deserializeAws_queryCreateTopicCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseBody(output.body, context),\n    };\n    let response;\n    let errorCode = \"UnknownError\";\n    errorCode = loadQueryErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"AuthorizationErrorException\":\n        case \"com.amazonaws.sns#AuthorizationErrorException\":\n            response = {\n                ...(await deserializeAws_queryAuthorizationErrorExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"ConcurrentAccessException\":\n        case \"com.amazonaws.sns#ConcurrentAccessException\":\n            response = {\n                ...(await deserializeAws_queryConcurrentAccessExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"InternalErrorException\":\n        case \"com.amazonaws.sns#InternalErrorException\":\n            response = {\n                ...(await deserializeAws_queryInternalErrorExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"InvalidParameterException\":\n        case \"com.amazonaws.sns#InvalidParameterException\":\n            response = {\n                ...(await deserializeAws_queryInvalidParameterExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"InvalidSecurityException\":\n        case \"com.amazonaws.sns#InvalidSecurityException\":\n            response = {\n                ...(await deserializeAws_queryInvalidSecurityExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"StaleTagException\":\n        case \"com.amazonaws.sns#StaleTagException\":\n            response = {\n                ...(await deserializeAws_queryStaleTagExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"TagLimitExceededException\":\n        case \"com.amazonaws.sns#TagLimitExceededException\":\n            response = {\n                ...(await deserializeAws_queryTagLimitExceededExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"TagPolicyException\":\n        case \"com.amazonaws.sns#TagPolicyException\":\n            response = {\n                ...(await deserializeAws_queryTagPolicyExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"TopicLimitExceededException\":\n        case \"com.amazonaws.sns#TopicLimitExceededException\":\n            response = {\n                ...(await deserializeAws_queryTopicLimitExceededExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        default:\n            const parsedBody = parsedOutput.body;\n            errorCode = parsedBody.Error.code || parsedBody.Error.Code || errorCode;\n            response = {\n                ...parsedBody.Error,\n                name: `${errorCode}`,\n                message: parsedBody.Error.message || parsedBody.Error.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output),\n            };\n    }\n    const message = response.message || response.Message || errorCode;\n    response.message = message;\n    delete response.Message;\n    return Promise.reject(Object.assign(new Error(message), response));\n};\nconst deserializeAws_queryDeleteEndpointCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return deserializeAws_queryDeleteEndpointCommandError(output, context);\n    }\n    await collectBody(output.body, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n    };\n    return Promise.resolve(response);\n};\nexports.deserializeAws_queryDeleteEndpointCommand = deserializeAws_queryDeleteEndpointCommand;\nconst deserializeAws_queryDeleteEndpointCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseBody(output.body, context),\n    };\n    let response;\n    let errorCode = \"UnknownError\";\n    errorCode = loadQueryErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"AuthorizationErrorException\":\n        case \"com.amazonaws.sns#AuthorizationErrorException\":\n            response = {\n                ...(await deserializeAws_queryAuthorizationErrorExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"InternalErrorException\":\n        case \"com.amazonaws.sns#InternalErrorException\":\n            response = {\n                ...(await deserializeAws_queryInternalErrorExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"InvalidParameterException\":\n        case \"com.amazonaws.sns#InvalidParameterException\":\n            response = {\n                ...(await deserializeAws_queryInvalidParameterExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        default:\n            const parsedBody = parsedOutput.body;\n            errorCode = parsedBody.Error.code || parsedBody.Error.Code || errorCode;\n            response = {\n                ...parsedBody.Error,\n                name: `${errorCode}`,\n                message: parsedBody.Error.message || parsedBody.Error.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output),\n            };\n    }\n    const message = response.message || response.Message || errorCode;\n    response.message = message;\n    delete response.Message;\n    return Promise.reject(Object.assign(new Error(message), response));\n};\nconst deserializeAws_queryDeletePlatformApplicationCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return deserializeAws_queryDeletePlatformApplicationCommandError(output, context);\n    }\n    await collectBody(output.body, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n    };\n    return Promise.resolve(response);\n};\nexports.deserializeAws_queryDeletePlatformApplicationCommand = deserializeAws_queryDeletePlatformApplicationCommand;\nconst deserializeAws_queryDeletePlatformApplicationCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseBody(output.body, context),\n    };\n    let response;\n    let errorCode = \"UnknownError\";\n    errorCode = loadQueryErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"AuthorizationErrorException\":\n        case \"com.amazonaws.sns#AuthorizationErrorException\":\n            response = {\n                ...(await deserializeAws_queryAuthorizationErrorExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"InternalErrorException\":\n        case \"com.amazonaws.sns#InternalErrorException\":\n            response = {\n                ...(await deserializeAws_queryInternalErrorExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"InvalidParameterException\":\n        case \"com.amazonaws.sns#InvalidParameterException\":\n            response = {\n                ...(await deserializeAws_queryInvalidParameterExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        default:\n            const parsedBody = parsedOutput.body;\n            errorCode = parsedBody.Error.code || parsedBody.Error.Code || errorCode;\n            response = {\n                ...parsedBody.Error,\n                name: `${errorCode}`,\n                message: parsedBody.Error.message || parsedBody.Error.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output),\n            };\n    }\n    const message = response.message || response.Message || errorCode;\n    response.message = message;\n    delete response.Message;\n    return Promise.reject(Object.assign(new Error(message), response));\n};\nconst deserializeAws_queryDeleteSMSSandboxPhoneNumberCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return deserializeAws_queryDeleteSMSSandboxPhoneNumberCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = deserializeAws_queryDeleteSMSSandboxPhoneNumberResult(data.DeleteSMSSandboxPhoneNumberResult, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return Promise.resolve(response);\n};\nexports.deserializeAws_queryDeleteSMSSandboxPhoneNumberCommand = deserializeAws_queryDeleteSMSSandboxPhoneNumberCommand;\nconst deserializeAws_queryDeleteSMSSandboxPhoneNumberCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseBody(output.body, context),\n    };\n    let response;\n    let errorCode = \"UnknownError\";\n    errorCode = loadQueryErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"AuthorizationErrorException\":\n        case \"com.amazonaws.sns#AuthorizationErrorException\":\n            response = {\n                ...(await deserializeAws_queryAuthorizationErrorExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"InternalErrorException\":\n        case \"com.amazonaws.sns#InternalErrorException\":\n            response = {\n                ...(await deserializeAws_queryInternalErrorExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"InvalidParameterException\":\n        case \"com.amazonaws.sns#InvalidParameterException\":\n            response = {\n                ...(await deserializeAws_queryInvalidParameterExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"ResourceNotFoundException\":\n        case \"com.amazonaws.sns#ResourceNotFoundException\":\n            response = {\n                ...(await deserializeAws_queryResourceNotFoundExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"ThrottledException\":\n        case \"com.amazonaws.sns#ThrottledException\":\n            response = {\n                ...(await deserializeAws_queryThrottledExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"UserErrorException\":\n        case \"com.amazonaws.sns#UserErrorException\":\n            response = {\n                ...(await deserializeAws_queryUserErrorExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        default:\n            const parsedBody = parsedOutput.body;\n            errorCode = parsedBody.Error.code || parsedBody.Error.Code || errorCode;\n            response = {\n                ...parsedBody.Error,\n                name: `${errorCode}`,\n                message: parsedBody.Error.message || parsedBody.Error.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output),\n            };\n    }\n    const message = response.message || response.Message || errorCode;\n    response.message = message;\n    delete response.Message;\n    return Promise.reject(Object.assign(new Error(message), response));\n};\nconst deserializeAws_queryDeleteTopicCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return deserializeAws_queryDeleteTopicCommandError(output, context);\n    }\n    await collectBody(output.body, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n    };\n    return Promise.resolve(response);\n};\nexports.deserializeAws_queryDeleteTopicCommand = deserializeAws_queryDeleteTopicCommand;\nconst deserializeAws_queryDeleteTopicCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseBody(output.body, context),\n    };\n    let response;\n    let errorCode = \"UnknownError\";\n    errorCode = loadQueryErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"AuthorizationErrorException\":\n        case \"com.amazonaws.sns#AuthorizationErrorException\":\n            response = {\n                ...(await deserializeAws_queryAuthorizationErrorExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"ConcurrentAccessException\":\n        case \"com.amazonaws.sns#ConcurrentAccessException\":\n            response = {\n                ...(await deserializeAws_queryConcurrentAccessExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"InternalErrorException\":\n        case \"com.amazonaws.sns#InternalErrorException\":\n            response = {\n                ...(await deserializeAws_queryInternalErrorExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"InvalidParameterException\":\n        case \"com.amazonaws.sns#InvalidParameterException\":\n            response = {\n                ...(await deserializeAws_queryInvalidParameterExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"NotFoundException\":\n        case \"com.amazonaws.sns#NotFoundException\":\n            response = {\n                ...(await deserializeAws_queryNotFoundExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"StaleTagException\":\n        case \"com.amazonaws.sns#StaleTagException\":\n            response = {\n                ...(await deserializeAws_queryStaleTagExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"TagPolicyException\":\n        case \"com.amazonaws.sns#TagPolicyException\":\n            response = {\n                ...(await deserializeAws_queryTagPolicyExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        default:\n            const parsedBody = parsedOutput.body;\n            errorCode = parsedBody.Error.code || parsedBody.Error.Code || errorCode;\n            response = {\n                ...parsedBody.Error,\n                name: `${errorCode}`,\n                message: parsedBody.Error.message || parsedBody.Error.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output),\n            };\n    }\n    const message = response.message || response.Message || errorCode;\n    response.message = message;\n    delete response.Message;\n    return Promise.reject(Object.assign(new Error(message), response));\n};\nconst deserializeAws_queryGetEndpointAttributesCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return deserializeAws_queryGetEndpointAttributesCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = deserializeAws_queryGetEndpointAttributesResponse(data.GetEndpointAttributesResult, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return Promise.resolve(response);\n};\nexports.deserializeAws_queryGetEndpointAttributesCommand = deserializeAws_queryGetEndpointAttributesCommand;\nconst deserializeAws_queryGetEndpointAttributesCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseBody(output.body, context),\n    };\n    let response;\n    let errorCode = \"UnknownError\";\n    errorCode = loadQueryErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"AuthorizationErrorException\":\n        case \"com.amazonaws.sns#AuthorizationErrorException\":\n            response = {\n                ...(await deserializeAws_queryAuthorizationErrorExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"InternalErrorException\":\n        case \"com.amazonaws.sns#InternalErrorException\":\n            response = {\n                ...(await deserializeAws_queryInternalErrorExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"InvalidParameterException\":\n        case \"com.amazonaws.sns#InvalidParameterException\":\n            response = {\n                ...(await deserializeAws_queryInvalidParameterExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"NotFoundException\":\n        case \"com.amazonaws.sns#NotFoundException\":\n            response = {\n                ...(await deserializeAws_queryNotFoundExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        default:\n            const parsedBody = parsedOutput.body;\n            errorCode = parsedBody.Error.code || parsedBody.Error.Code || errorCode;\n            response = {\n                ...parsedBody.Error,\n                name: `${errorCode}`,\n                message: parsedBody.Error.message || parsedBody.Error.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output),\n            };\n    }\n    const message = response.message || response.Message || errorCode;\n    response.message = message;\n    delete response.Message;\n    return Promise.reject(Object.assign(new Error(message), response));\n};\nconst deserializeAws_queryGetPlatformApplicationAttributesCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return deserializeAws_queryGetPlatformApplicationAttributesCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = deserializeAws_queryGetPlatformApplicationAttributesResponse(data.GetPlatformApplicationAttributesResult, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return Promise.resolve(response);\n};\nexports.deserializeAws_queryGetPlatformApplicationAttributesCommand = deserializeAws_queryGetPlatformApplicationAttributesCommand;\nconst deserializeAws_queryGetPlatformApplicationAttributesCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseBody(output.body, context),\n    };\n    let response;\n    let errorCode = \"UnknownError\";\n    errorCode = loadQueryErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"AuthorizationErrorException\":\n        case \"com.amazonaws.sns#AuthorizationErrorException\":\n            response = {\n                ...(await deserializeAws_queryAuthorizationErrorExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"InternalErrorException\":\n        case \"com.amazonaws.sns#InternalErrorException\":\n            response = {\n                ...(await deserializeAws_queryInternalErrorExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"InvalidParameterException\":\n        case \"com.amazonaws.sns#InvalidParameterException\":\n            response = {\n                ...(await deserializeAws_queryInvalidParameterExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"NotFoundException\":\n        case \"com.amazonaws.sns#NotFoundException\":\n            response = {\n                ...(await deserializeAws_queryNotFoundExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        default:\n            const parsedBody = parsedOutput.body;\n            errorCode = parsedBody.Error.code || parsedBody.Error.Code || errorCode;\n            response = {\n                ...parsedBody.Error,\n                name: `${errorCode}`,\n                message: parsedBody.Error.message || parsedBody.Error.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output),\n            };\n    }\n    const message = response.message || response.Message || errorCode;\n    response.message = message;\n    delete response.Message;\n    return Promise.reject(Object.assign(new Error(message), response));\n};\nconst deserializeAws_queryGetSMSAttributesCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return deserializeAws_queryGetSMSAttributesCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = deserializeAws_queryGetSMSAttributesResponse(data.GetSMSAttributesResult, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return Promise.resolve(response);\n};\nexports.deserializeAws_queryGetSMSAttributesCommand = deserializeAws_queryGetSMSAttributesCommand;\nconst deserializeAws_queryGetSMSAttributesCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseBody(output.body, context),\n    };\n    let response;\n    let errorCode = \"UnknownError\";\n    errorCode = loadQueryErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"AuthorizationErrorException\":\n        case \"com.amazonaws.sns#AuthorizationErrorException\":\n            response = {\n                ...(await deserializeAws_queryAuthorizationErrorExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"InternalErrorException\":\n        case \"com.amazonaws.sns#InternalErrorException\":\n            response = {\n                ...(await deserializeAws_queryInternalErrorExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"InvalidParameterException\":\n        case \"com.amazonaws.sns#InvalidParameterException\":\n            response = {\n                ...(await deserializeAws_queryInvalidParameterExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"ThrottledException\":\n        case \"com.amazonaws.sns#ThrottledException\":\n            response = {\n                ...(await deserializeAws_queryThrottledExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        default:\n            const parsedBody = parsedOutput.body;\n            errorCode = parsedBody.Error.code || parsedBody.Error.Code || errorCode;\n            response = {\n                ...parsedBody.Error,\n                name: `${errorCode}`,\n                message: parsedBody.Error.message || parsedBody.Error.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output),\n            };\n    }\n    const message = response.message || response.Message || errorCode;\n    response.message = message;\n    delete response.Message;\n    return Promise.reject(Object.assign(new Error(message), response));\n};\nconst deserializeAws_queryGetSMSSandboxAccountStatusCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return deserializeAws_queryGetSMSSandboxAccountStatusCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = deserializeAws_queryGetSMSSandboxAccountStatusResult(data.GetSMSSandboxAccountStatusResult, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return Promise.resolve(response);\n};\nexports.deserializeAws_queryGetSMSSandboxAccountStatusCommand = deserializeAws_queryGetSMSSandboxAccountStatusCommand;\nconst deserializeAws_queryGetSMSSandboxAccountStatusCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseBody(output.body, context),\n    };\n    let response;\n    let errorCode = \"UnknownError\";\n    errorCode = loadQueryErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"AuthorizationErrorException\":\n        case \"com.amazonaws.sns#AuthorizationErrorException\":\n            response = {\n                ...(await deserializeAws_queryAuthorizationErrorExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"InternalErrorException\":\n        case \"com.amazonaws.sns#InternalErrorException\":\n            response = {\n                ...(await deserializeAws_queryInternalErrorExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"ThrottledException\":\n        case \"com.amazonaws.sns#ThrottledException\":\n            response = {\n                ...(await deserializeAws_queryThrottledExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        default:\n            const parsedBody = parsedOutput.body;\n            errorCode = parsedBody.Error.code || parsedBody.Error.Code || errorCode;\n            response = {\n                ...parsedBody.Error,\n                name: `${errorCode}`,\n                message: parsedBody.Error.message || parsedBody.Error.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output),\n            };\n    }\n    const message = response.message || response.Message || errorCode;\n    response.message = message;\n    delete response.Message;\n    return Promise.reject(Object.assign(new Error(message), response));\n};\nconst deserializeAws_queryGetSubscriptionAttributesCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return deserializeAws_queryGetSubscriptionAttributesCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = deserializeAws_queryGetSubscriptionAttributesResponse(data.GetSubscriptionAttributesResult, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return Promise.resolve(response);\n};\nexports.deserializeAws_queryGetSubscriptionAttributesCommand = deserializeAws_queryGetSubscriptionAttributesCommand;\nconst deserializeAws_queryGetSubscriptionAttributesCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseBody(output.body, context),\n    };\n    let response;\n    let errorCode = \"UnknownError\";\n    errorCode = loadQueryErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"AuthorizationErrorException\":\n        case \"com.amazonaws.sns#AuthorizationErrorException\":\n            response = {\n                ...(await deserializeAws_queryAuthorizationErrorExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"InternalErrorException\":\n        case \"com.amazonaws.sns#InternalErrorException\":\n            response = {\n                ...(await deserializeAws_queryInternalErrorExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"InvalidParameterException\":\n        case \"com.amazonaws.sns#InvalidParameterException\":\n            response = {\n                ...(await deserializeAws_queryInvalidParameterExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"NotFoundException\":\n        case \"com.amazonaws.sns#NotFoundException\":\n            response = {\n                ...(await deserializeAws_queryNotFoundExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        default:\n            const parsedBody = parsedOutput.body;\n            errorCode = parsedBody.Error.code || parsedBody.Error.Code || errorCode;\n            response = {\n                ...parsedBody.Error,\n                name: `${errorCode}`,\n                message: parsedBody.Error.message || parsedBody.Error.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output),\n            };\n    }\n    const message = response.message || response.Message || errorCode;\n    response.message = message;\n    delete response.Message;\n    return Promise.reject(Object.assign(new Error(message), response));\n};\nconst deserializeAws_queryGetTopicAttributesCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return deserializeAws_queryGetTopicAttributesCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = deserializeAws_queryGetTopicAttributesResponse(data.GetTopicAttributesResult, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return Promise.resolve(response);\n};\nexports.deserializeAws_queryGetTopicAttributesCommand = deserializeAws_queryGetTopicAttributesCommand;\nconst deserializeAws_queryGetTopicAttributesCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseBody(output.body, context),\n    };\n    let response;\n    let errorCode = \"UnknownError\";\n    errorCode = loadQueryErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"AuthorizationErrorException\":\n        case \"com.amazonaws.sns#AuthorizationErrorException\":\n            response = {\n                ...(await deserializeAws_queryAuthorizationErrorExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"InternalErrorException\":\n        case \"com.amazonaws.sns#InternalErrorException\":\n            response = {\n                ...(await deserializeAws_queryInternalErrorExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"InvalidParameterException\":\n        case \"com.amazonaws.sns#InvalidParameterException\":\n            response = {\n                ...(await deserializeAws_queryInvalidParameterExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"InvalidSecurityException\":\n        case \"com.amazonaws.sns#InvalidSecurityException\":\n            response = {\n                ...(await deserializeAws_queryInvalidSecurityExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"NotFoundException\":\n        case \"com.amazonaws.sns#NotFoundException\":\n            response = {\n                ...(await deserializeAws_queryNotFoundExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        default:\n            const parsedBody = parsedOutput.body;\n            errorCode = parsedBody.Error.code || parsedBody.Error.Code || errorCode;\n            response = {\n                ...parsedBody.Error,\n                name: `${errorCode}`,\n                message: parsedBody.Error.message || parsedBody.Error.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output),\n            };\n    }\n    const message = response.message || response.Message || errorCode;\n    response.message = message;\n    delete response.Message;\n    return Promise.reject(Object.assign(new Error(message), response));\n};\nconst deserializeAws_queryListEndpointsByPlatformApplicationCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return deserializeAws_queryListEndpointsByPlatformApplicationCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = deserializeAws_queryListEndpointsByPlatformApplicationResponse(data.ListEndpointsByPlatformApplicationResult, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return Promise.resolve(response);\n};\nexports.deserializeAws_queryListEndpointsByPlatformApplicationCommand = deserializeAws_queryListEndpointsByPlatformApplicationCommand;\nconst deserializeAws_queryListEndpointsByPlatformApplicationCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseBody(output.body, context),\n    };\n    let response;\n    let errorCode = \"UnknownError\";\n    errorCode = loadQueryErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"AuthorizationErrorException\":\n        case \"com.amazonaws.sns#AuthorizationErrorException\":\n            response = {\n                ...(await deserializeAws_queryAuthorizationErrorExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"InternalErrorException\":\n        case \"com.amazonaws.sns#InternalErrorException\":\n            response = {\n                ...(await deserializeAws_queryInternalErrorExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"InvalidParameterException\":\n        case \"com.amazonaws.sns#InvalidParameterException\":\n            response = {\n                ...(await deserializeAws_queryInvalidParameterExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"NotFoundException\":\n        case \"com.amazonaws.sns#NotFoundException\":\n            response = {\n                ...(await deserializeAws_queryNotFoundExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        default:\n            const parsedBody = parsedOutput.body;\n            errorCode = parsedBody.Error.code || parsedBody.Error.Code || errorCode;\n            response = {\n                ...parsedBody.Error,\n                name: `${errorCode}`,\n                message: parsedBody.Error.message || parsedBody.Error.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output),\n            };\n    }\n    const message = response.message || response.Message || errorCode;\n    response.message = message;\n    delete response.Message;\n    return Promise.reject(Object.assign(new Error(message), response));\n};\nconst deserializeAws_queryListOriginationNumbersCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return deserializeAws_queryListOriginationNumbersCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = deserializeAws_queryListOriginationNumbersResult(data.ListOriginationNumbersResult, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return Promise.resolve(response);\n};\nexports.deserializeAws_queryListOriginationNumbersCommand = deserializeAws_queryListOriginationNumbersCommand;\nconst deserializeAws_queryListOriginationNumbersCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseBody(output.body, context),\n    };\n    let response;\n    let errorCode = \"UnknownError\";\n    errorCode = loadQueryErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"AuthorizationErrorException\":\n        case \"com.amazonaws.sns#AuthorizationErrorException\":\n            response = {\n                ...(await deserializeAws_queryAuthorizationErrorExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"InternalErrorException\":\n        case \"com.amazonaws.sns#InternalErrorException\":\n            response = {\n                ...(await deserializeAws_queryInternalErrorExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"InvalidParameterException\":\n        case \"com.amazonaws.sns#InvalidParameterException\":\n            response = {\n                ...(await deserializeAws_queryInvalidParameterExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"ThrottledException\":\n        case \"com.amazonaws.sns#ThrottledException\":\n            response = {\n                ...(await deserializeAws_queryThrottledExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"ValidationException\":\n        case \"com.amazonaws.sns#ValidationException\":\n            response = {\n                ...(await deserializeAws_queryValidationExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        default:\n            const parsedBody = parsedOutput.body;\n            errorCode = parsedBody.Error.code || parsedBody.Error.Code || errorCode;\n            response = {\n                ...parsedBody.Error,\n                name: `${errorCode}`,\n                message: parsedBody.Error.message || parsedBody.Error.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output),\n            };\n    }\n    const message = response.message || response.Message || errorCode;\n    response.message = message;\n    delete response.Message;\n    return Promise.reject(Object.assign(new Error(message), response));\n};\nconst deserializeAws_queryListPhoneNumbersOptedOutCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return deserializeAws_queryListPhoneNumbersOptedOutCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = deserializeAws_queryListPhoneNumbersOptedOutResponse(data.ListPhoneNumbersOptedOutResult, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return Promise.resolve(response);\n};\nexports.deserializeAws_queryListPhoneNumbersOptedOutCommand = deserializeAws_queryListPhoneNumbersOptedOutCommand;\nconst deserializeAws_queryListPhoneNumbersOptedOutCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseBody(output.body, context),\n    };\n    let response;\n    let errorCode = \"UnknownError\";\n    errorCode = loadQueryErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"AuthorizationErrorException\":\n        case \"com.amazonaws.sns#AuthorizationErrorException\":\n            response = {\n                ...(await deserializeAws_queryAuthorizationErrorExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"InternalErrorException\":\n        case \"com.amazonaws.sns#InternalErrorException\":\n            response = {\n                ...(await deserializeAws_queryInternalErrorExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"InvalidParameterException\":\n        case \"com.amazonaws.sns#InvalidParameterException\":\n            response = {\n                ...(await deserializeAws_queryInvalidParameterExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"ThrottledException\":\n        case \"com.amazonaws.sns#ThrottledException\":\n            response = {\n                ...(await deserializeAws_queryThrottledExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        default:\n            const parsedBody = parsedOutput.body;\n            errorCode = parsedBody.Error.code || parsedBody.Error.Code || errorCode;\n            response = {\n                ...parsedBody.Error,\n                name: `${errorCode}`,\n                message: parsedBody.Error.message || parsedBody.Error.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output),\n            };\n    }\n    const message = response.message || response.Message || errorCode;\n    response.message = message;\n    delete response.Message;\n    return Promise.reject(Object.assign(new Error(message), response));\n};\nconst deserializeAws_queryListPlatformApplicationsCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return deserializeAws_queryListPlatformApplicationsCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = deserializeAws_queryListPlatformApplicationsResponse(data.ListPlatformApplicationsResult, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return Promise.resolve(response);\n};\nexports.deserializeAws_queryListPlatformApplicationsCommand = deserializeAws_queryListPlatformApplicationsCommand;\nconst deserializeAws_queryListPlatformApplicationsCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseBody(output.body, context),\n    };\n    let response;\n    let errorCode = \"UnknownError\";\n    errorCode = loadQueryErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"AuthorizationErrorException\":\n        case \"com.amazonaws.sns#AuthorizationErrorException\":\n            response = {\n                ...(await deserializeAws_queryAuthorizationErrorExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"InternalErrorException\":\n        case \"com.amazonaws.sns#InternalErrorException\":\n            response = {\n                ...(await deserializeAws_queryInternalErrorExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"InvalidParameterException\":\n        case \"com.amazonaws.sns#InvalidParameterException\":\n            response = {\n                ...(await deserializeAws_queryInvalidParameterExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        default:\n            const parsedBody = parsedOutput.body;\n            errorCode = parsedBody.Error.code || parsedBody.Error.Code || errorCode;\n            response = {\n                ...parsedBody.Error,\n                name: `${errorCode}`,\n                message: parsedBody.Error.message || parsedBody.Error.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output),\n            };\n    }\n    const message = response.message || response.Message || errorCode;\n    response.message = message;\n    delete response.Message;\n    return Promise.reject(Object.assign(new Error(message), response));\n};\nconst deserializeAws_queryListSMSSandboxPhoneNumbersCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return deserializeAws_queryListSMSSandboxPhoneNumbersCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = deserializeAws_queryListSMSSandboxPhoneNumbersResult(data.ListSMSSandboxPhoneNumbersResult, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return Promise.resolve(response);\n};\nexports.deserializeAws_queryListSMSSandboxPhoneNumbersCommand = deserializeAws_queryListSMSSandboxPhoneNumbersCommand;\nconst deserializeAws_queryListSMSSandboxPhoneNumbersCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseBody(output.body, context),\n    };\n    let response;\n    let errorCode = \"UnknownError\";\n    errorCode = loadQueryErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"AuthorizationErrorException\":\n        case \"com.amazonaws.sns#AuthorizationErrorException\":\n            response = {\n                ...(await deserializeAws_queryAuthorizationErrorExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"InternalErrorException\":\n        case \"com.amazonaws.sns#InternalErrorException\":\n            response = {\n                ...(await deserializeAws_queryInternalErrorExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"InvalidParameterException\":\n        case \"com.amazonaws.sns#InvalidParameterException\":\n            response = {\n                ...(await deserializeAws_queryInvalidParameterExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"ResourceNotFoundException\":\n        case \"com.amazonaws.sns#ResourceNotFoundException\":\n            response = {\n                ...(await deserializeAws_queryResourceNotFoundExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"ThrottledException\":\n        case \"com.amazonaws.sns#ThrottledException\":\n            response = {\n                ...(await deserializeAws_queryThrottledExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        default:\n            const parsedBody = parsedOutput.body;\n            errorCode = parsedBody.Error.code || parsedBody.Error.Code || errorCode;\n            response = {\n                ...parsedBody.Error,\n                name: `${errorCode}`,\n                message: parsedBody.Error.message || parsedBody.Error.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output),\n            };\n    }\n    const message = response.message || response.Message || errorCode;\n    response.message = message;\n    delete response.Message;\n    return Promise.reject(Object.assign(new Error(message), response));\n};\nconst deserializeAws_queryListSubscriptionsCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return deserializeAws_queryListSubscriptionsCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = deserializeAws_queryListSubscriptionsResponse(data.ListSubscriptionsResult, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return Promise.resolve(response);\n};\nexports.deserializeAws_queryListSubscriptionsCommand = deserializeAws_queryListSubscriptionsCommand;\nconst deserializeAws_queryListSubscriptionsCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseBody(output.body, context),\n    };\n    let response;\n    let errorCode = \"UnknownError\";\n    errorCode = loadQueryErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"AuthorizationErrorException\":\n        case \"com.amazonaws.sns#AuthorizationErrorException\":\n            response = {\n                ...(await deserializeAws_queryAuthorizationErrorExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"InternalErrorException\":\n        case \"com.amazonaws.sns#InternalErrorException\":\n            response = {\n                ...(await deserializeAws_queryInternalErrorExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"InvalidParameterException\":\n        case \"com.amazonaws.sns#InvalidParameterException\":\n            response = {\n                ...(await deserializeAws_queryInvalidParameterExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        default:\n            const parsedBody = parsedOutput.body;\n            errorCode = parsedBody.Error.code || parsedBody.Error.Code || errorCode;\n            response = {\n                ...parsedBody.Error,\n                name: `${errorCode}`,\n                message: parsedBody.Error.message || parsedBody.Error.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output),\n            };\n    }\n    const message = response.message || response.Message || errorCode;\n    response.message = message;\n    delete response.Message;\n    return Promise.reject(Object.assign(new Error(message), response));\n};\nconst deserializeAws_queryListSubscriptionsByTopicCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return deserializeAws_queryListSubscriptionsByTopicCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = deserializeAws_queryListSubscriptionsByTopicResponse(data.ListSubscriptionsByTopicResult, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return Promise.resolve(response);\n};\nexports.deserializeAws_queryListSubscriptionsByTopicCommand = deserializeAws_queryListSubscriptionsByTopicCommand;\nconst deserializeAws_queryListSubscriptionsByTopicCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseBody(output.body, context),\n    };\n    let response;\n    let errorCode = \"UnknownError\";\n    errorCode = loadQueryErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"AuthorizationErrorException\":\n        case \"com.amazonaws.sns#AuthorizationErrorException\":\n            response = {\n                ...(await deserializeAws_queryAuthorizationErrorExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"InternalErrorException\":\n        case \"com.amazonaws.sns#InternalErrorException\":\n            response = {\n                ...(await deserializeAws_queryInternalErrorExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"InvalidParameterException\":\n        case \"com.amazonaws.sns#InvalidParameterException\":\n            response = {\n                ...(await deserializeAws_queryInvalidParameterExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"NotFoundException\":\n        case \"com.amazonaws.sns#NotFoundException\":\n            response = {\n                ...(await deserializeAws_queryNotFoundExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        default:\n            const parsedBody = parsedOutput.body;\n            errorCode = parsedBody.Error.code || parsedBody.Error.Code || errorCode;\n            response = {\n                ...parsedBody.Error,\n                name: `${errorCode}`,\n                message: parsedBody.Error.message || parsedBody.Error.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output),\n            };\n    }\n    const message = response.message || response.Message || errorCode;\n    response.message = message;\n    delete response.Message;\n    return Promise.reject(Object.assign(new Error(message), response));\n};\nconst deserializeAws_queryListTagsForResourceCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return deserializeAws_queryListTagsForResourceCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = deserializeAws_queryListTagsForResourceResponse(data.ListTagsForResourceResult, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return Promise.resolve(response);\n};\nexports.deserializeAws_queryListTagsForResourceCommand = deserializeAws_queryListTagsForResourceCommand;\nconst deserializeAws_queryListTagsForResourceCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseBody(output.body, context),\n    };\n    let response;\n    let errorCode = \"UnknownError\";\n    errorCode = loadQueryErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"AuthorizationErrorException\":\n        case \"com.amazonaws.sns#AuthorizationErrorException\":\n            response = {\n                ...(await deserializeAws_queryAuthorizationErrorExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"ConcurrentAccessException\":\n        case \"com.amazonaws.sns#ConcurrentAccessException\":\n            response = {\n                ...(await deserializeAws_queryConcurrentAccessExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"InvalidParameterException\":\n        case \"com.amazonaws.sns#InvalidParameterException\":\n            response = {\n                ...(await deserializeAws_queryInvalidParameterExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"ResourceNotFoundException\":\n        case \"com.amazonaws.sns#ResourceNotFoundException\":\n            response = {\n                ...(await deserializeAws_queryResourceNotFoundExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"TagPolicyException\":\n        case \"com.amazonaws.sns#TagPolicyException\":\n            response = {\n                ...(await deserializeAws_queryTagPolicyExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        default:\n            const parsedBody = parsedOutput.body;\n            errorCode = parsedBody.Error.code || parsedBody.Error.Code || errorCode;\n            response = {\n                ...parsedBody.Error,\n                name: `${errorCode}`,\n                message: parsedBody.Error.message || parsedBody.Error.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output),\n            };\n    }\n    const message = response.message || response.Message || errorCode;\n    response.message = message;\n    delete response.Message;\n    return Promise.reject(Object.assign(new Error(message), response));\n};\nconst deserializeAws_queryListTopicsCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return deserializeAws_queryListTopicsCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = deserializeAws_queryListTopicsResponse(data.ListTopicsResult, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return Promise.resolve(response);\n};\nexports.deserializeAws_queryListTopicsCommand = deserializeAws_queryListTopicsCommand;\nconst deserializeAws_queryListTopicsCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseBody(output.body, context),\n    };\n    let response;\n    let errorCode = \"UnknownError\";\n    errorCode = loadQueryErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"AuthorizationErrorException\":\n        case \"com.amazonaws.sns#AuthorizationErrorException\":\n            response = {\n                ...(await deserializeAws_queryAuthorizationErrorExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"InternalErrorException\":\n        case \"com.amazonaws.sns#InternalErrorException\":\n            response = {\n                ...(await deserializeAws_queryInternalErrorExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"InvalidParameterException\":\n        case \"com.amazonaws.sns#InvalidParameterException\":\n            response = {\n                ...(await deserializeAws_queryInvalidParameterExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        default:\n            const parsedBody = parsedOutput.body;\n            errorCode = parsedBody.Error.code || parsedBody.Error.Code || errorCode;\n            response = {\n                ...parsedBody.Error,\n                name: `${errorCode}`,\n                message: parsedBody.Error.message || parsedBody.Error.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output),\n            };\n    }\n    const message = response.message || response.Message || errorCode;\n    response.message = message;\n    delete response.Message;\n    return Promise.reject(Object.assign(new Error(message), response));\n};\nconst deserializeAws_queryOptInPhoneNumberCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return deserializeAws_queryOptInPhoneNumberCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = deserializeAws_queryOptInPhoneNumberResponse(data.OptInPhoneNumberResult, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return Promise.resolve(response);\n};\nexports.deserializeAws_queryOptInPhoneNumberCommand = deserializeAws_queryOptInPhoneNumberCommand;\nconst deserializeAws_queryOptInPhoneNumberCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseBody(output.body, context),\n    };\n    let response;\n    let errorCode = \"UnknownError\";\n    errorCode = loadQueryErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"AuthorizationErrorException\":\n        case \"com.amazonaws.sns#AuthorizationErrorException\":\n            response = {\n                ...(await deserializeAws_queryAuthorizationErrorExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"InternalErrorException\":\n        case \"com.amazonaws.sns#InternalErrorException\":\n            response = {\n                ...(await deserializeAws_queryInternalErrorExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"InvalidParameterException\":\n        case \"com.amazonaws.sns#InvalidParameterException\":\n            response = {\n                ...(await deserializeAws_queryInvalidParameterExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"ThrottledException\":\n        case \"com.amazonaws.sns#ThrottledException\":\n            response = {\n                ...(await deserializeAws_queryThrottledExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        default:\n            const parsedBody = parsedOutput.body;\n            errorCode = parsedBody.Error.code || parsedBody.Error.Code || errorCode;\n            response = {\n                ...parsedBody.Error,\n                name: `${errorCode}`,\n                message: parsedBody.Error.message || parsedBody.Error.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output),\n            };\n    }\n    const message = response.message || response.Message || errorCode;\n    response.message = message;\n    delete response.Message;\n    return Promise.reject(Object.assign(new Error(message), response));\n};\nconst deserializeAws_queryPublishCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return deserializeAws_queryPublishCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = deserializeAws_queryPublishResponse(data.PublishResult, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return Promise.resolve(response);\n};\nexports.deserializeAws_queryPublishCommand = deserializeAws_queryPublishCommand;\nconst deserializeAws_queryPublishCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseBody(output.body, context),\n    };\n    let response;\n    let errorCode = \"UnknownError\";\n    errorCode = loadQueryErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"AuthorizationErrorException\":\n        case \"com.amazonaws.sns#AuthorizationErrorException\":\n            response = {\n                ...(await deserializeAws_queryAuthorizationErrorExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"EndpointDisabledException\":\n        case \"com.amazonaws.sns#EndpointDisabledException\":\n            response = {\n                ...(await deserializeAws_queryEndpointDisabledExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"InternalErrorException\":\n        case \"com.amazonaws.sns#InternalErrorException\":\n            response = {\n                ...(await deserializeAws_queryInternalErrorExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"InvalidParameterException\":\n        case \"com.amazonaws.sns#InvalidParameterException\":\n            response = {\n                ...(await deserializeAws_queryInvalidParameterExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"InvalidParameterValueException\":\n        case \"com.amazonaws.sns#InvalidParameterValueException\":\n            response = {\n                ...(await deserializeAws_queryInvalidParameterValueExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"InvalidSecurityException\":\n        case \"com.amazonaws.sns#InvalidSecurityException\":\n            response = {\n                ...(await deserializeAws_queryInvalidSecurityExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"KMSAccessDeniedException\":\n        case \"com.amazonaws.sns#KMSAccessDeniedException\":\n            response = {\n                ...(await deserializeAws_queryKMSAccessDeniedExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"KMSDisabledException\":\n        case \"com.amazonaws.sns#KMSDisabledException\":\n            response = {\n                ...(await deserializeAws_queryKMSDisabledExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"KMSInvalidStateException\":\n        case \"com.amazonaws.sns#KMSInvalidStateException\":\n            response = {\n                ...(await deserializeAws_queryKMSInvalidStateExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"KMSNotFoundException\":\n        case \"com.amazonaws.sns#KMSNotFoundException\":\n            response = {\n                ...(await deserializeAws_queryKMSNotFoundExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"KMSOptInRequired\":\n        case \"com.amazonaws.sns#KMSOptInRequired\":\n            response = {\n                ...(await deserializeAws_queryKMSOptInRequiredResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"KMSThrottlingException\":\n        case \"com.amazonaws.sns#KMSThrottlingException\":\n            response = {\n                ...(await deserializeAws_queryKMSThrottlingExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"NotFoundException\":\n        case \"com.amazonaws.sns#NotFoundException\":\n            response = {\n                ...(await deserializeAws_queryNotFoundExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"PlatformApplicationDisabledException\":\n        case \"com.amazonaws.sns#PlatformApplicationDisabledException\":\n            response = {\n                ...(await deserializeAws_queryPlatformApplicationDisabledExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        default:\n            const parsedBody = parsedOutput.body;\n            errorCode = parsedBody.Error.code || parsedBody.Error.Code || errorCode;\n            response = {\n                ...parsedBody.Error,\n                name: `${errorCode}`,\n                message: parsedBody.Error.message || parsedBody.Error.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output),\n            };\n    }\n    const message = response.message || response.Message || errorCode;\n    response.message = message;\n    delete response.Message;\n    return Promise.reject(Object.assign(new Error(message), response));\n};\nconst deserializeAws_queryPublishBatchCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return deserializeAws_queryPublishBatchCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = deserializeAws_queryPublishBatchResponse(data.PublishBatchResult, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return Promise.resolve(response);\n};\nexports.deserializeAws_queryPublishBatchCommand = deserializeAws_queryPublishBatchCommand;\nconst deserializeAws_queryPublishBatchCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseBody(output.body, context),\n    };\n    let response;\n    let errorCode = \"UnknownError\";\n    errorCode = loadQueryErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"AuthorizationErrorException\":\n        case \"com.amazonaws.sns#AuthorizationErrorException\":\n            response = {\n                ...(await deserializeAws_queryAuthorizationErrorExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"BatchEntryIdsNotDistinctException\":\n        case \"com.amazonaws.sns#BatchEntryIdsNotDistinctException\":\n            response = {\n                ...(await deserializeAws_queryBatchEntryIdsNotDistinctExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"BatchRequestTooLongException\":\n        case \"com.amazonaws.sns#BatchRequestTooLongException\":\n            response = {\n                ...(await deserializeAws_queryBatchRequestTooLongExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"EmptyBatchRequestException\":\n        case \"com.amazonaws.sns#EmptyBatchRequestException\":\n            response = {\n                ...(await deserializeAws_queryEmptyBatchRequestExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"EndpointDisabledException\":\n        case \"com.amazonaws.sns#EndpointDisabledException\":\n            response = {\n                ...(await deserializeAws_queryEndpointDisabledExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"InternalErrorException\":\n        case \"com.amazonaws.sns#InternalErrorException\":\n            response = {\n                ...(await deserializeAws_queryInternalErrorExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"InvalidBatchEntryIdException\":\n        case \"com.amazonaws.sns#InvalidBatchEntryIdException\":\n            response = {\n                ...(await deserializeAws_queryInvalidBatchEntryIdExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"InvalidParameterException\":\n        case \"com.amazonaws.sns#InvalidParameterException\":\n            response = {\n                ...(await deserializeAws_queryInvalidParameterExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"InvalidParameterValueException\":\n        case \"com.amazonaws.sns#InvalidParameterValueException\":\n            response = {\n                ...(await deserializeAws_queryInvalidParameterValueExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"InvalidSecurityException\":\n        case \"com.amazonaws.sns#InvalidSecurityException\":\n            response = {\n                ...(await deserializeAws_queryInvalidSecurityExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"KMSAccessDeniedException\":\n        case \"com.amazonaws.sns#KMSAccessDeniedException\":\n            response = {\n                ...(await deserializeAws_queryKMSAccessDeniedExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"KMSDisabledException\":\n        case \"com.amazonaws.sns#KMSDisabledException\":\n            response = {\n                ...(await deserializeAws_queryKMSDisabledExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"KMSInvalidStateException\":\n        case \"com.amazonaws.sns#KMSInvalidStateException\":\n            response = {\n                ...(await deserializeAws_queryKMSInvalidStateExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"KMSNotFoundException\":\n        case \"com.amazonaws.sns#KMSNotFoundException\":\n            response = {\n                ...(await deserializeAws_queryKMSNotFoundExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"KMSOptInRequired\":\n        case \"com.amazonaws.sns#KMSOptInRequired\":\n            response = {\n                ...(await deserializeAws_queryKMSOptInRequiredResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"KMSThrottlingException\":\n        case \"com.amazonaws.sns#KMSThrottlingException\":\n            response = {\n                ...(await deserializeAws_queryKMSThrottlingExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"NotFoundException\":\n        case \"com.amazonaws.sns#NotFoundException\":\n            response = {\n                ...(await deserializeAws_queryNotFoundExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"PlatformApplicationDisabledException\":\n        case \"com.amazonaws.sns#PlatformApplicationDisabledException\":\n            response = {\n                ...(await deserializeAws_queryPlatformApplicationDisabledExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"TooManyEntriesInBatchRequestException\":\n        case \"com.amazonaws.sns#TooManyEntriesInBatchRequestException\":\n            response = {\n                ...(await deserializeAws_queryTooManyEntriesInBatchRequestExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        default:\n            const parsedBody = parsedOutput.body;\n            errorCode = parsedBody.Error.code || parsedBody.Error.Code || errorCode;\n            response = {\n                ...parsedBody.Error,\n                name: `${errorCode}`,\n                message: parsedBody.Error.message || parsedBody.Error.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output),\n            };\n    }\n    const message = response.message || response.Message || errorCode;\n    response.message = message;\n    delete response.Message;\n    return Promise.reject(Object.assign(new Error(message), response));\n};\nconst deserializeAws_queryRemovePermissionCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return deserializeAws_queryRemovePermissionCommandError(output, context);\n    }\n    await collectBody(output.body, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n    };\n    return Promise.resolve(response);\n};\nexports.deserializeAws_queryRemovePermissionCommand = deserializeAws_queryRemovePermissionCommand;\nconst deserializeAws_queryRemovePermissionCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseBody(output.body, context),\n    };\n    let response;\n    let errorCode = \"UnknownError\";\n    errorCode = loadQueryErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"AuthorizationErrorException\":\n        case \"com.amazonaws.sns#AuthorizationErrorException\":\n            response = {\n                ...(await deserializeAws_queryAuthorizationErrorExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"InternalErrorException\":\n        case \"com.amazonaws.sns#InternalErrorException\":\n            response = {\n                ...(await deserializeAws_queryInternalErrorExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"InvalidParameterException\":\n        case \"com.amazonaws.sns#InvalidParameterException\":\n            response = {\n                ...(await deserializeAws_queryInvalidParameterExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"NotFoundException\":\n        case \"com.amazonaws.sns#NotFoundException\":\n            response = {\n                ...(await deserializeAws_queryNotFoundExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        default:\n            const parsedBody = parsedOutput.body;\n            errorCode = parsedBody.Error.code || parsedBody.Error.Code || errorCode;\n            response = {\n                ...parsedBody.Error,\n                name: `${errorCode}`,\n                message: parsedBody.Error.message || parsedBody.Error.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output),\n            };\n    }\n    const message = response.message || response.Message || errorCode;\n    response.message = message;\n    delete response.Message;\n    return Promise.reject(Object.assign(new Error(message), response));\n};\nconst deserializeAws_querySetEndpointAttributesCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return deserializeAws_querySetEndpointAttributesCommandError(output, context);\n    }\n    await collectBody(output.body, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n    };\n    return Promise.resolve(response);\n};\nexports.deserializeAws_querySetEndpointAttributesCommand = deserializeAws_querySetEndpointAttributesCommand;\nconst deserializeAws_querySetEndpointAttributesCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseBody(output.body, context),\n    };\n    let response;\n    let errorCode = \"UnknownError\";\n    errorCode = loadQueryErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"AuthorizationErrorException\":\n        case \"com.amazonaws.sns#AuthorizationErrorException\":\n            response = {\n                ...(await deserializeAws_queryAuthorizationErrorExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"InternalErrorException\":\n        case \"com.amazonaws.sns#InternalErrorException\":\n            response = {\n                ...(await deserializeAws_queryInternalErrorExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"InvalidParameterException\":\n        case \"com.amazonaws.sns#InvalidParameterException\":\n            response = {\n                ...(await deserializeAws_queryInvalidParameterExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"NotFoundException\":\n        case \"com.amazonaws.sns#NotFoundException\":\n            response = {\n                ...(await deserializeAws_queryNotFoundExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        default:\n            const parsedBody = parsedOutput.body;\n            errorCode = parsedBody.Error.code || parsedBody.Error.Code || errorCode;\n            response = {\n                ...parsedBody.Error,\n                name: `${errorCode}`,\n                message: parsedBody.Error.message || parsedBody.Error.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output),\n            };\n    }\n    const message = response.message || response.Message || errorCode;\n    response.message = message;\n    delete response.Message;\n    return Promise.reject(Object.assign(new Error(message), response));\n};\nconst deserializeAws_querySetPlatformApplicationAttributesCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return deserializeAws_querySetPlatformApplicationAttributesCommandError(output, context);\n    }\n    await collectBody(output.body, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n    };\n    return Promise.resolve(response);\n};\nexports.deserializeAws_querySetPlatformApplicationAttributesCommand = deserializeAws_querySetPlatformApplicationAttributesCommand;\nconst deserializeAws_querySetPlatformApplicationAttributesCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseBody(output.body, context),\n    };\n    let response;\n    let errorCode = \"UnknownError\";\n    errorCode = loadQueryErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"AuthorizationErrorException\":\n        case \"com.amazonaws.sns#AuthorizationErrorException\":\n            response = {\n                ...(await deserializeAws_queryAuthorizationErrorExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"InternalErrorException\":\n        case \"com.amazonaws.sns#InternalErrorException\":\n            response = {\n                ...(await deserializeAws_queryInternalErrorExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"InvalidParameterException\":\n        case \"com.amazonaws.sns#InvalidParameterException\":\n            response = {\n                ...(await deserializeAws_queryInvalidParameterExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"NotFoundException\":\n        case \"com.amazonaws.sns#NotFoundException\":\n            response = {\n                ...(await deserializeAws_queryNotFoundExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        default:\n            const parsedBody = parsedOutput.body;\n            errorCode = parsedBody.Error.code || parsedBody.Error.Code || errorCode;\n            response = {\n                ...parsedBody.Error,\n                name: `${errorCode}`,\n                message: parsedBody.Error.message || parsedBody.Error.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output),\n            };\n    }\n    const message = response.message || response.Message || errorCode;\n    response.message = message;\n    delete response.Message;\n    return Promise.reject(Object.assign(new Error(message), response));\n};\nconst deserializeAws_querySetSMSAttributesCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return deserializeAws_querySetSMSAttributesCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = deserializeAws_querySetSMSAttributesResponse(data.SetSMSAttributesResult, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return Promise.resolve(response);\n};\nexports.deserializeAws_querySetSMSAttributesCommand = deserializeAws_querySetSMSAttributesCommand;\nconst deserializeAws_querySetSMSAttributesCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseBody(output.body, context),\n    };\n    let response;\n    let errorCode = \"UnknownError\";\n    errorCode = loadQueryErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"AuthorizationErrorException\":\n        case \"com.amazonaws.sns#AuthorizationErrorException\":\n            response = {\n                ...(await deserializeAws_queryAuthorizationErrorExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"InternalErrorException\":\n        case \"com.amazonaws.sns#InternalErrorException\":\n            response = {\n                ...(await deserializeAws_queryInternalErrorExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"InvalidParameterException\":\n        case \"com.amazonaws.sns#InvalidParameterException\":\n            response = {\n                ...(await deserializeAws_queryInvalidParameterExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"ThrottledException\":\n        case \"com.amazonaws.sns#ThrottledException\":\n            response = {\n                ...(await deserializeAws_queryThrottledExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        default:\n            const parsedBody = parsedOutput.body;\n            errorCode = parsedBody.Error.code || parsedBody.Error.Code || errorCode;\n            response = {\n                ...parsedBody.Error,\n                name: `${errorCode}`,\n                message: parsedBody.Error.message || parsedBody.Error.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output),\n            };\n    }\n    const message = response.message || response.Message || errorCode;\n    response.message = message;\n    delete response.Message;\n    return Promise.reject(Object.assign(new Error(message), response));\n};\nconst deserializeAws_querySetSubscriptionAttributesCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return deserializeAws_querySetSubscriptionAttributesCommandError(output, context);\n    }\n    await collectBody(output.body, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n    };\n    return Promise.resolve(response);\n};\nexports.deserializeAws_querySetSubscriptionAttributesCommand = deserializeAws_querySetSubscriptionAttributesCommand;\nconst deserializeAws_querySetSubscriptionAttributesCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseBody(output.body, context),\n    };\n    let response;\n    let errorCode = \"UnknownError\";\n    errorCode = loadQueryErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"AuthorizationErrorException\":\n        case \"com.amazonaws.sns#AuthorizationErrorException\":\n            response = {\n                ...(await deserializeAws_queryAuthorizationErrorExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"FilterPolicyLimitExceededException\":\n        case \"com.amazonaws.sns#FilterPolicyLimitExceededException\":\n            response = {\n                ...(await deserializeAws_queryFilterPolicyLimitExceededExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"InternalErrorException\":\n        case \"com.amazonaws.sns#InternalErrorException\":\n            response = {\n                ...(await deserializeAws_queryInternalErrorExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"InvalidParameterException\":\n        case \"com.amazonaws.sns#InvalidParameterException\":\n            response = {\n                ...(await deserializeAws_queryInvalidParameterExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"NotFoundException\":\n        case \"com.amazonaws.sns#NotFoundException\":\n            response = {\n                ...(await deserializeAws_queryNotFoundExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        default:\n            const parsedBody = parsedOutput.body;\n            errorCode = parsedBody.Error.code || parsedBody.Error.Code || errorCode;\n            response = {\n                ...parsedBody.Error,\n                name: `${errorCode}`,\n                message: parsedBody.Error.message || parsedBody.Error.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output),\n            };\n    }\n    const message = response.message || response.Message || errorCode;\n    response.message = message;\n    delete response.Message;\n    return Promise.reject(Object.assign(new Error(message), response));\n};\nconst deserializeAws_querySetTopicAttributesCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return deserializeAws_querySetTopicAttributesCommandError(output, context);\n    }\n    await collectBody(output.body, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n    };\n    return Promise.resolve(response);\n};\nexports.deserializeAws_querySetTopicAttributesCommand = deserializeAws_querySetTopicAttributesCommand;\nconst deserializeAws_querySetTopicAttributesCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseBody(output.body, context),\n    };\n    let response;\n    let errorCode = \"UnknownError\";\n    errorCode = loadQueryErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"AuthorizationErrorException\":\n        case \"com.amazonaws.sns#AuthorizationErrorException\":\n            response = {\n                ...(await deserializeAws_queryAuthorizationErrorExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"InternalErrorException\":\n        case \"com.amazonaws.sns#InternalErrorException\":\n            response = {\n                ...(await deserializeAws_queryInternalErrorExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"InvalidParameterException\":\n        case \"com.amazonaws.sns#InvalidParameterException\":\n            response = {\n                ...(await deserializeAws_queryInvalidParameterExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"InvalidSecurityException\":\n        case \"com.amazonaws.sns#InvalidSecurityException\":\n            response = {\n                ...(await deserializeAws_queryInvalidSecurityExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"NotFoundException\":\n        case \"com.amazonaws.sns#NotFoundException\":\n            response = {\n                ...(await deserializeAws_queryNotFoundExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        default:\n            const parsedBody = parsedOutput.body;\n            errorCode = parsedBody.Error.code || parsedBody.Error.Code || errorCode;\n            response = {\n                ...parsedBody.Error,\n                name: `${errorCode}`,\n                message: parsedBody.Error.message || parsedBody.Error.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output),\n            };\n    }\n    const message = response.message || response.Message || errorCode;\n    response.message = message;\n    delete response.Message;\n    return Promise.reject(Object.assign(new Error(message), response));\n};\nconst deserializeAws_querySubscribeCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return deserializeAws_querySubscribeCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = deserializeAws_querySubscribeResponse(data.SubscribeResult, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return Promise.resolve(response);\n};\nexports.deserializeAws_querySubscribeCommand = deserializeAws_querySubscribeCommand;\nconst deserializeAws_querySubscribeCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseBody(output.body, context),\n    };\n    let response;\n    let errorCode = \"UnknownError\";\n    errorCode = loadQueryErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"AuthorizationErrorException\":\n        case \"com.amazonaws.sns#AuthorizationErrorException\":\n            response = {\n                ...(await deserializeAws_queryAuthorizationErrorExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"FilterPolicyLimitExceededException\":\n        case \"com.amazonaws.sns#FilterPolicyLimitExceededException\":\n            response = {\n                ...(await deserializeAws_queryFilterPolicyLimitExceededExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"InternalErrorException\":\n        case \"com.amazonaws.sns#InternalErrorException\":\n            response = {\n                ...(await deserializeAws_queryInternalErrorExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"InvalidParameterException\":\n        case \"com.amazonaws.sns#InvalidParameterException\":\n            response = {\n                ...(await deserializeAws_queryInvalidParameterExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"InvalidSecurityException\":\n        case \"com.amazonaws.sns#InvalidSecurityException\":\n            response = {\n                ...(await deserializeAws_queryInvalidSecurityExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"NotFoundException\":\n        case \"com.amazonaws.sns#NotFoundException\":\n            response = {\n                ...(await deserializeAws_queryNotFoundExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"SubscriptionLimitExceededException\":\n        case \"com.amazonaws.sns#SubscriptionLimitExceededException\":\n            response = {\n                ...(await deserializeAws_querySubscriptionLimitExceededExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        default:\n            const parsedBody = parsedOutput.body;\n            errorCode = parsedBody.Error.code || parsedBody.Error.Code || errorCode;\n            response = {\n                ...parsedBody.Error,\n                name: `${errorCode}`,\n                message: parsedBody.Error.message || parsedBody.Error.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output),\n            };\n    }\n    const message = response.message || response.Message || errorCode;\n    response.message = message;\n    delete response.Message;\n    return Promise.reject(Object.assign(new Error(message), response));\n};\nconst deserializeAws_queryTagResourceCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return deserializeAws_queryTagResourceCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = deserializeAws_queryTagResourceResponse(data.TagResourceResult, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return Promise.resolve(response);\n};\nexports.deserializeAws_queryTagResourceCommand = deserializeAws_queryTagResourceCommand;\nconst deserializeAws_queryTagResourceCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseBody(output.body, context),\n    };\n    let response;\n    let errorCode = \"UnknownError\";\n    errorCode = loadQueryErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"AuthorizationErrorException\":\n        case \"com.amazonaws.sns#AuthorizationErrorException\":\n            response = {\n                ...(await deserializeAws_queryAuthorizationErrorExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"ConcurrentAccessException\":\n        case \"com.amazonaws.sns#ConcurrentAccessException\":\n            response = {\n                ...(await deserializeAws_queryConcurrentAccessExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"InvalidParameterException\":\n        case \"com.amazonaws.sns#InvalidParameterException\":\n            response = {\n                ...(await deserializeAws_queryInvalidParameterExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"ResourceNotFoundException\":\n        case \"com.amazonaws.sns#ResourceNotFoundException\":\n            response = {\n                ...(await deserializeAws_queryResourceNotFoundExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"StaleTagException\":\n        case \"com.amazonaws.sns#StaleTagException\":\n            response = {\n                ...(await deserializeAws_queryStaleTagExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"TagLimitExceededException\":\n        case \"com.amazonaws.sns#TagLimitExceededException\":\n            response = {\n                ...(await deserializeAws_queryTagLimitExceededExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"TagPolicyException\":\n        case \"com.amazonaws.sns#TagPolicyException\":\n            response = {\n                ...(await deserializeAws_queryTagPolicyExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        default:\n            const parsedBody = parsedOutput.body;\n            errorCode = parsedBody.Error.code || parsedBody.Error.Code || errorCode;\n            response = {\n                ...parsedBody.Error,\n                name: `${errorCode}`,\n                message: parsedBody.Error.message || parsedBody.Error.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output),\n            };\n    }\n    const message = response.message || response.Message || errorCode;\n    response.message = message;\n    delete response.Message;\n    return Promise.reject(Object.assign(new Error(message), response));\n};\nconst deserializeAws_queryUnsubscribeCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return deserializeAws_queryUnsubscribeCommandError(output, context);\n    }\n    await collectBody(output.body, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n    };\n    return Promise.resolve(response);\n};\nexports.deserializeAws_queryUnsubscribeCommand = deserializeAws_queryUnsubscribeCommand;\nconst deserializeAws_queryUnsubscribeCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseBody(output.body, context),\n    };\n    let response;\n    let errorCode = \"UnknownError\";\n    errorCode = loadQueryErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"AuthorizationErrorException\":\n        case \"com.amazonaws.sns#AuthorizationErrorException\":\n            response = {\n                ...(await deserializeAws_queryAuthorizationErrorExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"InternalErrorException\":\n        case \"com.amazonaws.sns#InternalErrorException\":\n            response = {\n                ...(await deserializeAws_queryInternalErrorExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"InvalidParameterException\":\n        case \"com.amazonaws.sns#InvalidParameterException\":\n            response = {\n                ...(await deserializeAws_queryInvalidParameterExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"InvalidSecurityException\":\n        case \"com.amazonaws.sns#InvalidSecurityException\":\n            response = {\n                ...(await deserializeAws_queryInvalidSecurityExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"NotFoundException\":\n        case \"com.amazonaws.sns#NotFoundException\":\n            response = {\n                ...(await deserializeAws_queryNotFoundExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        default:\n            const parsedBody = parsedOutput.body;\n            errorCode = parsedBody.Error.code || parsedBody.Error.Code || errorCode;\n            response = {\n                ...parsedBody.Error,\n                name: `${errorCode}`,\n                message: parsedBody.Error.message || parsedBody.Error.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output),\n            };\n    }\n    const message = response.message || response.Message || errorCode;\n    response.message = message;\n    delete response.Message;\n    return Promise.reject(Object.assign(new Error(message), response));\n};\nconst deserializeAws_queryUntagResourceCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return deserializeAws_queryUntagResourceCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = deserializeAws_queryUntagResourceResponse(data.UntagResourceResult, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return Promise.resolve(response);\n};\nexports.deserializeAws_queryUntagResourceCommand = deserializeAws_queryUntagResourceCommand;\nconst deserializeAws_queryUntagResourceCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseBody(output.body, context),\n    };\n    let response;\n    let errorCode = \"UnknownError\";\n    errorCode = loadQueryErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"AuthorizationErrorException\":\n        case \"com.amazonaws.sns#AuthorizationErrorException\":\n            response = {\n                ...(await deserializeAws_queryAuthorizationErrorExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"ConcurrentAccessException\":\n        case \"com.amazonaws.sns#ConcurrentAccessException\":\n            response = {\n                ...(await deserializeAws_queryConcurrentAccessExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"InvalidParameterException\":\n        case \"com.amazonaws.sns#InvalidParameterException\":\n            response = {\n                ...(await deserializeAws_queryInvalidParameterExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"ResourceNotFoundException\":\n        case \"com.amazonaws.sns#ResourceNotFoundException\":\n            response = {\n                ...(await deserializeAws_queryResourceNotFoundExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"StaleTagException\":\n        case \"com.amazonaws.sns#StaleTagException\":\n            response = {\n                ...(await deserializeAws_queryStaleTagExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"TagLimitExceededException\":\n        case \"com.amazonaws.sns#TagLimitExceededException\":\n            response = {\n                ...(await deserializeAws_queryTagLimitExceededExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"TagPolicyException\":\n        case \"com.amazonaws.sns#TagPolicyException\":\n            response = {\n                ...(await deserializeAws_queryTagPolicyExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        default:\n            const parsedBody = parsedOutput.body;\n            errorCode = parsedBody.Error.code || parsedBody.Error.Code || errorCode;\n            response = {\n                ...parsedBody.Error,\n                name: `${errorCode}`,\n                message: parsedBody.Error.message || parsedBody.Error.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output),\n            };\n    }\n    const message = response.message || response.Message || errorCode;\n    response.message = message;\n    delete response.Message;\n    return Promise.reject(Object.assign(new Error(message), response));\n};\nconst deserializeAws_queryVerifySMSSandboxPhoneNumberCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return deserializeAws_queryVerifySMSSandboxPhoneNumberCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = deserializeAws_queryVerifySMSSandboxPhoneNumberResult(data.VerifySMSSandboxPhoneNumberResult, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return Promise.resolve(response);\n};\nexports.deserializeAws_queryVerifySMSSandboxPhoneNumberCommand = deserializeAws_queryVerifySMSSandboxPhoneNumberCommand;\nconst deserializeAws_queryVerifySMSSandboxPhoneNumberCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseBody(output.body, context),\n    };\n    let response;\n    let errorCode = \"UnknownError\";\n    errorCode = loadQueryErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"AuthorizationErrorException\":\n        case \"com.amazonaws.sns#AuthorizationErrorException\":\n            response = {\n                ...(await deserializeAws_queryAuthorizationErrorExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"InternalErrorException\":\n        case \"com.amazonaws.sns#InternalErrorException\":\n            response = {\n                ...(await deserializeAws_queryInternalErrorExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"InvalidParameterException\":\n        case \"com.amazonaws.sns#InvalidParameterException\":\n            response = {\n                ...(await deserializeAws_queryInvalidParameterExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"ResourceNotFoundException\":\n        case \"com.amazonaws.sns#ResourceNotFoundException\":\n            response = {\n                ...(await deserializeAws_queryResourceNotFoundExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"ThrottledException\":\n        case \"com.amazonaws.sns#ThrottledException\":\n            response = {\n                ...(await deserializeAws_queryThrottledExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"VerificationException\":\n        case \"com.amazonaws.sns#VerificationException\":\n            response = {\n                ...(await deserializeAws_queryVerificationExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        default:\n            const parsedBody = parsedOutput.body;\n            errorCode = parsedBody.Error.code || parsedBody.Error.Code || errorCode;\n            response = {\n                ...parsedBody.Error,\n                name: `${errorCode}`,\n                message: parsedBody.Error.message || parsedBody.Error.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output),\n            };\n    }\n    const message = response.message || response.Message || errorCode;\n    response.message = message;\n    delete response.Message;\n    return Promise.reject(Object.assign(new Error(message), response));\n};\nconst deserializeAws_queryAuthorizationErrorExceptionResponse = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = deserializeAws_queryAuthorizationErrorException(body.Error, context);\n    const contents = {\n        name: \"AuthorizationErrorException\",\n        $fault: \"client\",\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    };\n    return contents;\n};\nconst deserializeAws_queryBatchEntryIdsNotDistinctExceptionResponse = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = deserializeAws_queryBatchEntryIdsNotDistinctException(body.Error, context);\n    const contents = {\n        name: \"BatchEntryIdsNotDistinctException\",\n        $fault: \"client\",\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    };\n    return contents;\n};\nconst deserializeAws_queryBatchRequestTooLongExceptionResponse = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = deserializeAws_queryBatchRequestTooLongException(body.Error, context);\n    const contents = {\n        name: \"BatchRequestTooLongException\",\n        $fault: \"client\",\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    };\n    return contents;\n};\nconst deserializeAws_queryConcurrentAccessExceptionResponse = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = deserializeAws_queryConcurrentAccessException(body.Error, context);\n    const contents = {\n        name: \"ConcurrentAccessException\",\n        $fault: \"client\",\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    };\n    return contents;\n};\nconst deserializeAws_queryEmptyBatchRequestExceptionResponse = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = deserializeAws_queryEmptyBatchRequestException(body.Error, context);\n    const contents = {\n        name: \"EmptyBatchRequestException\",\n        $fault: \"client\",\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    };\n    return contents;\n};\nconst deserializeAws_queryEndpointDisabledExceptionResponse = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = deserializeAws_queryEndpointDisabledException(body.Error, context);\n    const contents = {\n        name: \"EndpointDisabledException\",\n        $fault: \"client\",\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    };\n    return contents;\n};\nconst deserializeAws_queryFilterPolicyLimitExceededExceptionResponse = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = deserializeAws_queryFilterPolicyLimitExceededException(body.Error, context);\n    const contents = {\n        name: \"FilterPolicyLimitExceededException\",\n        $fault: \"client\",\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    };\n    return contents;\n};\nconst deserializeAws_queryInternalErrorExceptionResponse = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = deserializeAws_queryInternalErrorException(body.Error, context);\n    const contents = {\n        name: \"InternalErrorException\",\n        $fault: \"server\",\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    };\n    return contents;\n};\nconst deserializeAws_queryInvalidBatchEntryIdExceptionResponse = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = deserializeAws_queryInvalidBatchEntryIdException(body.Error, context);\n    const contents = {\n        name: \"InvalidBatchEntryIdException\",\n        $fault: \"client\",\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    };\n    return contents;\n};\nconst deserializeAws_queryInvalidParameterExceptionResponse = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = deserializeAws_queryInvalidParameterException(body.Error, context);\n    const contents = {\n        name: \"InvalidParameterException\",\n        $fault: \"client\",\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    };\n    return contents;\n};\nconst deserializeAws_queryInvalidParameterValueExceptionResponse = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = deserializeAws_queryInvalidParameterValueException(body.Error, context);\n    const contents = {\n        name: \"InvalidParameterValueException\",\n        $fault: \"client\",\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    };\n    return contents;\n};\nconst deserializeAws_queryInvalidSecurityExceptionResponse = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = deserializeAws_queryInvalidSecurityException(body.Error, context);\n    const contents = {\n        name: \"InvalidSecurityException\",\n        $fault: \"client\",\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    };\n    return contents;\n};\nconst deserializeAws_queryKMSAccessDeniedExceptionResponse = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = deserializeAws_queryKMSAccessDeniedException(body.Error, context);\n    const contents = {\n        name: \"KMSAccessDeniedException\",\n        $fault: \"client\",\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    };\n    return contents;\n};\nconst deserializeAws_queryKMSDisabledExceptionResponse = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = deserializeAws_queryKMSDisabledException(body.Error, context);\n    const contents = {\n        name: \"KMSDisabledException\",\n        $fault: \"client\",\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    };\n    return contents;\n};\nconst deserializeAws_queryKMSInvalidStateExceptionResponse = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = deserializeAws_queryKMSInvalidStateException(body.Error, context);\n    const contents = {\n        name: \"KMSInvalidStateException\",\n        $fault: \"client\",\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    };\n    return contents;\n};\nconst deserializeAws_queryKMSNotFoundExceptionResponse = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = deserializeAws_queryKMSNotFoundException(body.Error, context);\n    const contents = {\n        name: \"KMSNotFoundException\",\n        $fault: \"client\",\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    };\n    return contents;\n};\nconst deserializeAws_queryKMSOptInRequiredResponse = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = deserializeAws_queryKMSOptInRequired(body.Error, context);\n    const contents = {\n        name: \"KMSOptInRequired\",\n        $fault: \"client\",\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    };\n    return contents;\n};\nconst deserializeAws_queryKMSThrottlingExceptionResponse = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = deserializeAws_queryKMSThrottlingException(body.Error, context);\n    const contents = {\n        name: \"KMSThrottlingException\",\n        $fault: \"client\",\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    };\n    return contents;\n};\nconst deserializeAws_queryNotFoundExceptionResponse = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = deserializeAws_queryNotFoundException(body.Error, context);\n    const contents = {\n        name: \"NotFoundException\",\n        $fault: \"client\",\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    };\n    return contents;\n};\nconst deserializeAws_queryOptedOutExceptionResponse = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = deserializeAws_queryOptedOutException(body.Error, context);\n    const contents = {\n        name: \"OptedOutException\",\n        $fault: \"client\",\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    };\n    return contents;\n};\nconst deserializeAws_queryPlatformApplicationDisabledExceptionResponse = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = deserializeAws_queryPlatformApplicationDisabledException(body.Error, context);\n    const contents = {\n        name: \"PlatformApplicationDisabledException\",\n        $fault: \"client\",\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    };\n    return contents;\n};\nconst deserializeAws_queryResourceNotFoundExceptionResponse = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = deserializeAws_queryResourceNotFoundException(body.Error, context);\n    const contents = {\n        name: \"ResourceNotFoundException\",\n        $fault: \"client\",\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    };\n    return contents;\n};\nconst deserializeAws_queryStaleTagExceptionResponse = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = deserializeAws_queryStaleTagException(body.Error, context);\n    const contents = {\n        name: \"StaleTagException\",\n        $fault: \"client\",\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    };\n    return contents;\n};\nconst deserializeAws_querySubscriptionLimitExceededExceptionResponse = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = deserializeAws_querySubscriptionLimitExceededException(body.Error, context);\n    const contents = {\n        name: \"SubscriptionLimitExceededException\",\n        $fault: \"client\",\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    };\n    return contents;\n};\nconst deserializeAws_queryTagLimitExceededExceptionResponse = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = deserializeAws_queryTagLimitExceededException(body.Error, context);\n    const contents = {\n        name: \"TagLimitExceededException\",\n        $fault: \"client\",\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    };\n    return contents;\n};\nconst deserializeAws_queryTagPolicyExceptionResponse = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = deserializeAws_queryTagPolicyException(body.Error, context);\n    const contents = {\n        name: \"TagPolicyException\",\n        $fault: \"client\",\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    };\n    return contents;\n};\nconst deserializeAws_queryThrottledExceptionResponse = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = deserializeAws_queryThrottledException(body.Error, context);\n    const contents = {\n        name: \"ThrottledException\",\n        $fault: \"client\",\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    };\n    return contents;\n};\nconst deserializeAws_queryTooManyEntriesInBatchRequestExceptionResponse = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = deserializeAws_queryTooManyEntriesInBatchRequestException(body.Error, context);\n    const contents = {\n        name: \"TooManyEntriesInBatchRequestException\",\n        $fault: \"client\",\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    };\n    return contents;\n};\nconst deserializeAws_queryTopicLimitExceededExceptionResponse = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = deserializeAws_queryTopicLimitExceededException(body.Error, context);\n    const contents = {\n        name: \"TopicLimitExceededException\",\n        $fault: \"client\",\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    };\n    return contents;\n};\nconst deserializeAws_queryUserErrorExceptionResponse = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = deserializeAws_queryUserErrorException(body.Error, context);\n    const contents = {\n        name: \"UserErrorException\",\n        $fault: \"client\",\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    };\n    return contents;\n};\nconst deserializeAws_queryValidationExceptionResponse = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = deserializeAws_queryValidationException(body.Error, context);\n    const contents = {\n        name: \"ValidationException\",\n        $fault: \"client\",\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    };\n    return contents;\n};\nconst deserializeAws_queryVerificationExceptionResponse = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = deserializeAws_queryVerificationException(body.Error, context);\n    const contents = {\n        name: \"VerificationException\",\n        $fault: \"client\",\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    };\n    return contents;\n};\nconst serializeAws_queryActionsList = (input, context) => {\n    const entries = {};\n    let counter = 1;\n    for (const entry of input) {\n        if (entry === null) {\n            continue;\n        }\n        entries[`member.${counter}`] = entry;\n        counter++;\n    }\n    return entries;\n};\nconst serializeAws_queryAddPermissionInput = (input, context) => {\n    const entries = {};\n    if (input.TopicArn !== undefined && input.TopicArn !== null) {\n        entries[\"TopicArn\"] = input.TopicArn;\n    }\n    if (input.Label !== undefined && input.Label !== null) {\n        entries[\"Label\"] = input.Label;\n    }\n    if (input.AWSAccountId !== undefined && input.AWSAccountId !== null) {\n        const memberEntries = serializeAws_queryDelegatesList(input.AWSAccountId, context);\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            const loc = `AWSAccountId.${key}`;\n            entries[loc] = value;\n        });\n    }\n    if (input.ActionName !== undefined && input.ActionName !== null) {\n        const memberEntries = serializeAws_queryActionsList(input.ActionName, context);\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            const loc = `ActionName.${key}`;\n            entries[loc] = value;\n        });\n    }\n    return entries;\n};\nconst serializeAws_queryCheckIfPhoneNumberIsOptedOutInput = (input, context) => {\n    const entries = {};\n    if (input.phoneNumber !== undefined && input.phoneNumber !== null) {\n        entries[\"phoneNumber\"] = input.phoneNumber;\n    }\n    return entries;\n};\nconst serializeAws_queryConfirmSubscriptionInput = (input, context) => {\n    const entries = {};\n    if (input.TopicArn !== undefined && input.TopicArn !== null) {\n        entries[\"TopicArn\"] = input.TopicArn;\n    }\n    if (input.Token !== undefined && input.Token !== null) {\n        entries[\"Token\"] = input.Token;\n    }\n    if (input.AuthenticateOnUnsubscribe !== undefined && input.AuthenticateOnUnsubscribe !== null) {\n        entries[\"AuthenticateOnUnsubscribe\"] = input.AuthenticateOnUnsubscribe;\n    }\n    return entries;\n};\nconst serializeAws_queryCreatePlatformApplicationInput = (input, context) => {\n    const entries = {};\n    if (input.Name !== undefined && input.Name !== null) {\n        entries[\"Name\"] = input.Name;\n    }\n    if (input.Platform !== undefined && input.Platform !== null) {\n        entries[\"Platform\"] = input.Platform;\n    }\n    if (input.Attributes !== undefined && input.Attributes !== null) {\n        const memberEntries = serializeAws_queryMapStringToString(input.Attributes, context);\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            const loc = `Attributes.${key}`;\n            entries[loc] = value;\n        });\n    }\n    return entries;\n};\nconst serializeAws_queryCreatePlatformEndpointInput = (input, context) => {\n    const entries = {};\n    if (input.PlatformApplicationArn !== undefined && input.PlatformApplicationArn !== null) {\n        entries[\"PlatformApplicationArn\"] = input.PlatformApplicationArn;\n    }\n    if (input.Token !== undefined && input.Token !== null) {\n        entries[\"Token\"] = input.Token;\n    }\n    if (input.CustomUserData !== undefined && input.CustomUserData !== null) {\n        entries[\"CustomUserData\"] = input.CustomUserData;\n    }\n    if (input.Attributes !== undefined && input.Attributes !== null) {\n        const memberEntries = serializeAws_queryMapStringToString(input.Attributes, context);\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            const loc = `Attributes.${key}`;\n            entries[loc] = value;\n        });\n    }\n    return entries;\n};\nconst serializeAws_queryCreateSMSSandboxPhoneNumberInput = (input, context) => {\n    const entries = {};\n    if (input.PhoneNumber !== undefined && input.PhoneNumber !== null) {\n        entries[\"PhoneNumber\"] = input.PhoneNumber;\n    }\n    if (input.LanguageCode !== undefined && input.LanguageCode !== null) {\n        entries[\"LanguageCode\"] = input.LanguageCode;\n    }\n    return entries;\n};\nconst serializeAws_queryCreateTopicInput = (input, context) => {\n    const entries = {};\n    if (input.Name !== undefined && input.Name !== null) {\n        entries[\"Name\"] = input.Name;\n    }\n    if (input.Attributes !== undefined && input.Attributes !== null) {\n        const memberEntries = serializeAws_queryTopicAttributesMap(input.Attributes, context);\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            const loc = `Attributes.${key}`;\n            entries[loc] = value;\n        });\n    }\n    if (input.Tags !== undefined && input.Tags !== null) {\n        const memberEntries = serializeAws_queryTagList(input.Tags, context);\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            const loc = `Tags.${key}`;\n            entries[loc] = value;\n        });\n    }\n    return entries;\n};\nconst serializeAws_queryDelegatesList = (input, context) => {\n    const entries = {};\n    let counter = 1;\n    for (const entry of input) {\n        if (entry === null) {\n            continue;\n        }\n        entries[`member.${counter}`] = entry;\n        counter++;\n    }\n    return entries;\n};\nconst serializeAws_queryDeleteEndpointInput = (input, context) => {\n    const entries = {};\n    if (input.EndpointArn !== undefined && input.EndpointArn !== null) {\n        entries[\"EndpointArn\"] = input.EndpointArn;\n    }\n    return entries;\n};\nconst serializeAws_queryDeletePlatformApplicationInput = (input, context) => {\n    const entries = {};\n    if (input.PlatformApplicationArn !== undefined && input.PlatformApplicationArn !== null) {\n        entries[\"PlatformApplicationArn\"] = input.PlatformApplicationArn;\n    }\n    return entries;\n};\nconst serializeAws_queryDeleteSMSSandboxPhoneNumberInput = (input, context) => {\n    const entries = {};\n    if (input.PhoneNumber !== undefined && input.PhoneNumber !== null) {\n        entries[\"PhoneNumber\"] = input.PhoneNumber;\n    }\n    return entries;\n};\nconst serializeAws_queryDeleteTopicInput = (input, context) => {\n    const entries = {};\n    if (input.TopicArn !== undefined && input.TopicArn !== null) {\n        entries[\"TopicArn\"] = input.TopicArn;\n    }\n    return entries;\n};\nconst serializeAws_queryGetEndpointAttributesInput = (input, context) => {\n    const entries = {};\n    if (input.EndpointArn !== undefined && input.EndpointArn !== null) {\n        entries[\"EndpointArn\"] = input.EndpointArn;\n    }\n    return entries;\n};\nconst serializeAws_queryGetPlatformApplicationAttributesInput = (input, context) => {\n    const entries = {};\n    if (input.PlatformApplicationArn !== undefined && input.PlatformApplicationArn !== null) {\n        entries[\"PlatformApplicationArn\"] = input.PlatformApplicationArn;\n    }\n    return entries;\n};\nconst serializeAws_queryGetSMSAttributesInput = (input, context) => {\n    const entries = {};\n    if (input.attributes !== undefined && input.attributes !== null) {\n        const memberEntries = serializeAws_queryListString(input.attributes, context);\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            const loc = `attributes.${key}`;\n            entries[loc] = value;\n        });\n    }\n    return entries;\n};\nconst serializeAws_queryGetSMSSandboxAccountStatusInput = (input, context) => {\n    const entries = {};\n    return entries;\n};\nconst serializeAws_queryGetSubscriptionAttributesInput = (input, context) => {\n    const entries = {};\n    if (input.SubscriptionArn !== undefined && input.SubscriptionArn !== null) {\n        entries[\"SubscriptionArn\"] = input.SubscriptionArn;\n    }\n    return entries;\n};\nconst serializeAws_queryGetTopicAttributesInput = (input, context) => {\n    const entries = {};\n    if (input.TopicArn !== undefined && input.TopicArn !== null) {\n        entries[\"TopicArn\"] = input.TopicArn;\n    }\n    return entries;\n};\nconst serializeAws_queryListEndpointsByPlatformApplicationInput = (input, context) => {\n    const entries = {};\n    if (input.PlatformApplicationArn !== undefined && input.PlatformApplicationArn !== null) {\n        entries[\"PlatformApplicationArn\"] = input.PlatformApplicationArn;\n    }\n    if (input.NextToken !== undefined && input.NextToken !== null) {\n        entries[\"NextToken\"] = input.NextToken;\n    }\n    return entries;\n};\nconst serializeAws_queryListOriginationNumbersRequest = (input, context) => {\n    const entries = {};\n    if (input.NextToken !== undefined && input.NextToken !== null) {\n        entries[\"NextToken\"] = input.NextToken;\n    }\n    if (input.MaxResults !== undefined && input.MaxResults !== null) {\n        entries[\"MaxResults\"] = input.MaxResults;\n    }\n    return entries;\n};\nconst serializeAws_queryListPhoneNumbersOptedOutInput = (input, context) => {\n    const entries = {};\n    if (input.nextToken !== undefined && input.nextToken !== null) {\n        entries[\"nextToken\"] = input.nextToken;\n    }\n    return entries;\n};\nconst serializeAws_queryListPlatformApplicationsInput = (input, context) => {\n    const entries = {};\n    if (input.NextToken !== undefined && input.NextToken !== null) {\n        entries[\"NextToken\"] = input.NextToken;\n    }\n    return entries;\n};\nconst serializeAws_queryListSMSSandboxPhoneNumbersInput = (input, context) => {\n    const entries = {};\n    if (input.NextToken !== undefined && input.NextToken !== null) {\n        entries[\"NextToken\"] = input.NextToken;\n    }\n    if (input.MaxResults !== undefined && input.MaxResults !== null) {\n        entries[\"MaxResults\"] = input.MaxResults;\n    }\n    return entries;\n};\nconst serializeAws_queryListString = (input, context) => {\n    const entries = {};\n    let counter = 1;\n    for (const entry of input) {\n        if (entry === null) {\n            continue;\n        }\n        entries[`member.${counter}`] = entry;\n        counter++;\n    }\n    return entries;\n};\nconst serializeAws_queryListSubscriptionsByTopicInput = (input, context) => {\n    const entries = {};\n    if (input.TopicArn !== undefined && input.TopicArn !== null) {\n        entries[\"TopicArn\"] = input.TopicArn;\n    }\n    if (input.NextToken !== undefined && input.NextToken !== null) {\n        entries[\"NextToken\"] = input.NextToken;\n    }\n    return entries;\n};\nconst serializeAws_queryListSubscriptionsInput = (input, context) => {\n    const entries = {};\n    if (input.NextToken !== undefined && input.NextToken !== null) {\n        entries[\"NextToken\"] = input.NextToken;\n    }\n    return entries;\n};\nconst serializeAws_queryListTagsForResourceRequest = (input, context) => {\n    const entries = {};\n    if (input.ResourceArn !== undefined && input.ResourceArn !== null) {\n        entries[\"ResourceArn\"] = input.ResourceArn;\n    }\n    return entries;\n};\nconst serializeAws_queryListTopicsInput = (input, context) => {\n    const entries = {};\n    if (input.NextToken !== undefined && input.NextToken !== null) {\n        entries[\"NextToken\"] = input.NextToken;\n    }\n    return entries;\n};\nconst serializeAws_queryMapStringToString = (input, context) => {\n    const entries = {};\n    let counter = 1;\n    Object.keys(input)\n        .filter((key) => input[key] != null)\n        .forEach((key) => {\n        entries[`entry.${counter}.key`] = key;\n        entries[`entry.${counter}.value`] = input[key];\n        counter++;\n    });\n    return entries;\n};\nconst serializeAws_queryMessageAttributeMap = (input, context) => {\n    const entries = {};\n    let counter = 1;\n    Object.keys(input)\n        .filter((key) => input[key] != null)\n        .forEach((key) => {\n        entries[`entry.${counter}.Name`] = key;\n        const memberEntries = serializeAws_queryMessageAttributeValue(input[key], context);\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            entries[`entry.${counter}.Value.${key}`] = value;\n        });\n        counter++;\n    });\n    return entries;\n};\nconst serializeAws_queryMessageAttributeValue = (input, context) => {\n    const entries = {};\n    if (input.DataType !== undefined && input.DataType !== null) {\n        entries[\"DataType\"] = input.DataType;\n    }\n    if (input.StringValue !== undefined && input.StringValue !== null) {\n        entries[\"StringValue\"] = input.StringValue;\n    }\n    if (input.BinaryValue !== undefined && input.BinaryValue !== null) {\n        entries[\"BinaryValue\"] = context.base64Encoder(input.BinaryValue);\n    }\n    return entries;\n};\nconst serializeAws_queryOptInPhoneNumberInput = (input, context) => {\n    const entries = {};\n    if (input.phoneNumber !== undefined && input.phoneNumber !== null) {\n        entries[\"phoneNumber\"] = input.phoneNumber;\n    }\n    return entries;\n};\nconst serializeAws_queryPublishBatchInput = (input, context) => {\n    const entries = {};\n    if (input.TopicArn !== undefined && input.TopicArn !== null) {\n        entries[\"TopicArn\"] = input.TopicArn;\n    }\n    if (input.PublishBatchRequestEntries !== undefined && input.PublishBatchRequestEntries !== null) {\n        const memberEntries = serializeAws_queryPublishBatchRequestEntryList(input.PublishBatchRequestEntries, context);\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            const loc = `PublishBatchRequestEntries.${key}`;\n            entries[loc] = value;\n        });\n    }\n    return entries;\n};\nconst serializeAws_queryPublishBatchRequestEntry = (input, context) => {\n    const entries = {};\n    if (input.Id !== undefined && input.Id !== null) {\n        entries[\"Id\"] = input.Id;\n    }\n    if (input.Message !== undefined && input.Message !== null) {\n        entries[\"Message\"] = input.Message;\n    }\n    if (input.Subject !== undefined && input.Subject !== null) {\n        entries[\"Subject\"] = input.Subject;\n    }\n    if (input.MessageStructure !== undefined && input.MessageStructure !== null) {\n        entries[\"MessageStructure\"] = input.MessageStructure;\n    }\n    if (input.MessageAttributes !== undefined && input.MessageAttributes !== null) {\n        const memberEntries = serializeAws_queryMessageAttributeMap(input.MessageAttributes, context);\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            const loc = `MessageAttributes.${key}`;\n            entries[loc] = value;\n        });\n    }\n    if (input.MessageDeduplicationId !== undefined && input.MessageDeduplicationId !== null) {\n        entries[\"MessageDeduplicationId\"] = input.MessageDeduplicationId;\n    }\n    if (input.MessageGroupId !== undefined && input.MessageGroupId !== null) {\n        entries[\"MessageGroupId\"] = input.MessageGroupId;\n    }\n    return entries;\n};\nconst serializeAws_queryPublishBatchRequestEntryList = (input, context) => {\n    const entries = {};\n    let counter = 1;\n    for (const entry of input) {\n        if (entry === null) {\n            continue;\n        }\n        const memberEntries = serializeAws_queryPublishBatchRequestEntry(entry, context);\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            entries[`member.${counter}.${key}`] = value;\n        });\n        counter++;\n    }\n    return entries;\n};\nconst serializeAws_queryPublishInput = (input, context) => {\n    const entries = {};\n    if (input.TopicArn !== undefined && input.TopicArn !== null) {\n        entries[\"TopicArn\"] = input.TopicArn;\n    }\n    if (input.TargetArn !== undefined && input.TargetArn !== null) {\n        entries[\"TargetArn\"] = input.TargetArn;\n    }\n    if (input.PhoneNumber !== undefined && input.PhoneNumber !== null) {\n        entries[\"PhoneNumber\"] = input.PhoneNumber;\n    }\n    if (input.Message !== undefined && input.Message !== null) {\n        entries[\"Message\"] = input.Message;\n    }\n    if (input.Subject !== undefined && input.Subject !== null) {\n        entries[\"Subject\"] = input.Subject;\n    }\n    if (input.MessageStructure !== undefined && input.MessageStructure !== null) {\n        entries[\"MessageStructure\"] = input.MessageStructure;\n    }\n    if (input.MessageAttributes !== undefined && input.MessageAttributes !== null) {\n        const memberEntries = serializeAws_queryMessageAttributeMap(input.MessageAttributes, context);\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            const loc = `MessageAttributes.${key}`;\n            entries[loc] = value;\n        });\n    }\n    if (input.MessageDeduplicationId !== undefined && input.MessageDeduplicationId !== null) {\n        entries[\"MessageDeduplicationId\"] = input.MessageDeduplicationId;\n    }\n    if (input.MessageGroupId !== undefined && input.MessageGroupId !== null) {\n        entries[\"MessageGroupId\"] = input.MessageGroupId;\n    }\n    return entries;\n};\nconst serializeAws_queryRemovePermissionInput = (input, context) => {\n    const entries = {};\n    if (input.TopicArn !== undefined && input.TopicArn !== null) {\n        entries[\"TopicArn\"] = input.TopicArn;\n    }\n    if (input.Label !== undefined && input.Label !== null) {\n        entries[\"Label\"] = input.Label;\n    }\n    return entries;\n};\nconst serializeAws_querySetEndpointAttributesInput = (input, context) => {\n    const entries = {};\n    if (input.EndpointArn !== undefined && input.EndpointArn !== null) {\n        entries[\"EndpointArn\"] = input.EndpointArn;\n    }\n    if (input.Attributes !== undefined && input.Attributes !== null) {\n        const memberEntries = serializeAws_queryMapStringToString(input.Attributes, context);\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            const loc = `Attributes.${key}`;\n            entries[loc] = value;\n        });\n    }\n    return entries;\n};\nconst serializeAws_querySetPlatformApplicationAttributesInput = (input, context) => {\n    const entries = {};\n    if (input.PlatformApplicationArn !== undefined && input.PlatformApplicationArn !== null) {\n        entries[\"PlatformApplicationArn\"] = input.PlatformApplicationArn;\n    }\n    if (input.Attributes !== undefined && input.Attributes !== null) {\n        const memberEntries = serializeAws_queryMapStringToString(input.Attributes, context);\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            const loc = `Attributes.${key}`;\n            entries[loc] = value;\n        });\n    }\n    return entries;\n};\nconst serializeAws_querySetSMSAttributesInput = (input, context) => {\n    const entries = {};\n    if (input.attributes !== undefined && input.attributes !== null) {\n        const memberEntries = serializeAws_queryMapStringToString(input.attributes, context);\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            const loc = `attributes.${key}`;\n            entries[loc] = value;\n        });\n    }\n    return entries;\n};\nconst serializeAws_querySetSubscriptionAttributesInput = (input, context) => {\n    const entries = {};\n    if (input.SubscriptionArn !== undefined && input.SubscriptionArn !== null) {\n        entries[\"SubscriptionArn\"] = input.SubscriptionArn;\n    }\n    if (input.AttributeName !== undefined && input.AttributeName !== null) {\n        entries[\"AttributeName\"] = input.AttributeName;\n    }\n    if (input.AttributeValue !== undefined && input.AttributeValue !== null) {\n        entries[\"AttributeValue\"] = input.AttributeValue;\n    }\n    return entries;\n};\nconst serializeAws_querySetTopicAttributesInput = (input, context) => {\n    const entries = {};\n    if (input.TopicArn !== undefined && input.TopicArn !== null) {\n        entries[\"TopicArn\"] = input.TopicArn;\n    }\n    if (input.AttributeName !== undefined && input.AttributeName !== null) {\n        entries[\"AttributeName\"] = input.AttributeName;\n    }\n    if (input.AttributeValue !== undefined && input.AttributeValue !== null) {\n        entries[\"AttributeValue\"] = input.AttributeValue;\n    }\n    return entries;\n};\nconst serializeAws_querySubscribeInput = (input, context) => {\n    const entries = {};\n    if (input.TopicArn !== undefined && input.TopicArn !== null) {\n        entries[\"TopicArn\"] = input.TopicArn;\n    }\n    if (input.Protocol !== undefined && input.Protocol !== null) {\n        entries[\"Protocol\"] = input.Protocol;\n    }\n    if (input.Endpoint !== undefined && input.Endpoint !== null) {\n        entries[\"Endpoint\"] = input.Endpoint;\n    }\n    if (input.Attributes !== undefined && input.Attributes !== null) {\n        const memberEntries = serializeAws_querySubscriptionAttributesMap(input.Attributes, context);\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            const loc = `Attributes.${key}`;\n            entries[loc] = value;\n        });\n    }\n    if (input.ReturnSubscriptionArn !== undefined && input.ReturnSubscriptionArn !== null) {\n        entries[\"ReturnSubscriptionArn\"] = input.ReturnSubscriptionArn;\n    }\n    return entries;\n};\nconst serializeAws_querySubscriptionAttributesMap = (input, context) => {\n    const entries = {};\n    let counter = 1;\n    Object.keys(input)\n        .filter((key) => input[key] != null)\n        .forEach((key) => {\n        entries[`entry.${counter}.key`] = key;\n        entries[`entry.${counter}.value`] = input[key];\n        counter++;\n    });\n    return entries;\n};\nconst serializeAws_queryTag = (input, context) => {\n    const entries = {};\n    if (input.Key !== undefined && input.Key !== null) {\n        entries[\"Key\"] = input.Key;\n    }\n    if (input.Value !== undefined && input.Value !== null) {\n        entries[\"Value\"] = input.Value;\n    }\n    return entries;\n};\nconst serializeAws_queryTagKeyList = (input, context) => {\n    const entries = {};\n    let counter = 1;\n    for (const entry of input) {\n        if (entry === null) {\n            continue;\n        }\n        entries[`member.${counter}`] = entry;\n        counter++;\n    }\n    return entries;\n};\nconst serializeAws_queryTagList = (input, context) => {\n    const entries = {};\n    let counter = 1;\n    for (const entry of input) {\n        if (entry === null) {\n            continue;\n        }\n        const memberEntries = serializeAws_queryTag(entry, context);\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            entries[`member.${counter}.${key}`] = value;\n        });\n        counter++;\n    }\n    return entries;\n};\nconst serializeAws_queryTagResourceRequest = (input, context) => {\n    const entries = {};\n    if (input.ResourceArn !== undefined && input.ResourceArn !== null) {\n        entries[\"ResourceArn\"] = input.ResourceArn;\n    }\n    if (input.Tags !== undefined && input.Tags !== null) {\n        const memberEntries = serializeAws_queryTagList(input.Tags, context);\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            const loc = `Tags.${key}`;\n            entries[loc] = value;\n        });\n    }\n    return entries;\n};\nconst serializeAws_queryTopicAttributesMap = (input, context) => {\n    const entries = {};\n    let counter = 1;\n    Object.keys(input)\n        .filter((key) => input[key] != null)\n        .forEach((key) => {\n        entries[`entry.${counter}.key`] = key;\n        entries[`entry.${counter}.value`] = input[key];\n        counter++;\n    });\n    return entries;\n};\nconst serializeAws_queryUnsubscribeInput = (input, context) => {\n    const entries = {};\n    if (input.SubscriptionArn !== undefined && input.SubscriptionArn !== null) {\n        entries[\"SubscriptionArn\"] = input.SubscriptionArn;\n    }\n    return entries;\n};\nconst serializeAws_queryUntagResourceRequest = (input, context) => {\n    const entries = {};\n    if (input.ResourceArn !== undefined && input.ResourceArn !== null) {\n        entries[\"ResourceArn\"] = input.ResourceArn;\n    }\n    if (input.TagKeys !== undefined && input.TagKeys !== null) {\n        const memberEntries = serializeAws_queryTagKeyList(input.TagKeys, context);\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            const loc = `TagKeys.${key}`;\n            entries[loc] = value;\n        });\n    }\n    return entries;\n};\nconst serializeAws_queryVerifySMSSandboxPhoneNumberInput = (input, context) => {\n    const entries = {};\n    if (input.PhoneNumber !== undefined && input.PhoneNumber !== null) {\n        entries[\"PhoneNumber\"] = input.PhoneNumber;\n    }\n    if (input.OneTimePassword !== undefined && input.OneTimePassword !== null) {\n        entries[\"OneTimePassword\"] = input.OneTimePassword;\n    }\n    return entries;\n};\nconst deserializeAws_queryAuthorizationErrorException = (output, context) => {\n    const contents = {\n        message: undefined,\n    };\n    if (output[\"message\"] !== undefined) {\n        contents.message = smithy_client_1.expectString(output[\"message\"]);\n    }\n    return contents;\n};\nconst deserializeAws_queryBatchEntryIdsNotDistinctException = (output, context) => {\n    const contents = {\n        message: undefined,\n    };\n    if (output[\"message\"] !== undefined) {\n        contents.message = smithy_client_1.expectString(output[\"message\"]);\n    }\n    return contents;\n};\nconst deserializeAws_queryBatchRequestTooLongException = (output, context) => {\n    const contents = {\n        message: undefined,\n    };\n    if (output[\"message\"] !== undefined) {\n        contents.message = smithy_client_1.expectString(output[\"message\"]);\n    }\n    return contents;\n};\nconst deserializeAws_queryBatchResultErrorEntry = (output, context) => {\n    const contents = {\n        Id: undefined,\n        Code: undefined,\n        Message: undefined,\n        SenderFault: undefined,\n    };\n    if (output[\"Id\"] !== undefined) {\n        contents.Id = smithy_client_1.expectString(output[\"Id\"]);\n    }\n    if (output[\"Code\"] !== undefined) {\n        contents.Code = smithy_client_1.expectString(output[\"Code\"]);\n    }\n    if (output[\"Message\"] !== undefined) {\n        contents.Message = smithy_client_1.expectString(output[\"Message\"]);\n    }\n    if (output[\"SenderFault\"] !== undefined) {\n        contents.SenderFault = smithy_client_1.parseBoolean(output[\"SenderFault\"]);\n    }\n    return contents;\n};\nconst deserializeAws_queryBatchResultErrorEntryList = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        if (entry === null) {\n            return null;\n        }\n        return deserializeAws_queryBatchResultErrorEntry(entry, context);\n    });\n};\nconst deserializeAws_queryCheckIfPhoneNumberIsOptedOutResponse = (output, context) => {\n    const contents = {\n        isOptedOut: undefined,\n    };\n    if (output[\"isOptedOut\"] !== undefined) {\n        contents.isOptedOut = smithy_client_1.parseBoolean(output[\"isOptedOut\"]);\n    }\n    return contents;\n};\nconst deserializeAws_queryConcurrentAccessException = (output, context) => {\n    const contents = {\n        message: undefined,\n    };\n    if (output[\"message\"] !== undefined) {\n        contents.message = smithy_client_1.expectString(output[\"message\"]);\n    }\n    return contents;\n};\nconst deserializeAws_queryConfirmSubscriptionResponse = (output, context) => {\n    const contents = {\n        SubscriptionArn: undefined,\n    };\n    if (output[\"SubscriptionArn\"] !== undefined) {\n        contents.SubscriptionArn = smithy_client_1.expectString(output[\"SubscriptionArn\"]);\n    }\n    return contents;\n};\nconst deserializeAws_queryCreateEndpointResponse = (output, context) => {\n    const contents = {\n        EndpointArn: undefined,\n    };\n    if (output[\"EndpointArn\"] !== undefined) {\n        contents.EndpointArn = smithy_client_1.expectString(output[\"EndpointArn\"]);\n    }\n    return contents;\n};\nconst deserializeAws_queryCreatePlatformApplicationResponse = (output, context) => {\n    const contents = {\n        PlatformApplicationArn: undefined,\n    };\n    if (output[\"PlatformApplicationArn\"] !== undefined) {\n        contents.PlatformApplicationArn = smithy_client_1.expectString(output[\"PlatformApplicationArn\"]);\n    }\n    return contents;\n};\nconst deserializeAws_queryCreateSMSSandboxPhoneNumberResult = (output, context) => {\n    const contents = {};\n    return contents;\n};\nconst deserializeAws_queryCreateTopicResponse = (output, context) => {\n    const contents = {\n        TopicArn: undefined,\n    };\n    if (output[\"TopicArn\"] !== undefined) {\n        contents.TopicArn = smithy_client_1.expectString(output[\"TopicArn\"]);\n    }\n    return contents;\n};\nconst deserializeAws_queryDeleteSMSSandboxPhoneNumberResult = (output, context) => {\n    const contents = {};\n    return contents;\n};\nconst deserializeAws_queryEmptyBatchRequestException = (output, context) => {\n    const contents = {\n        message: undefined,\n    };\n    if (output[\"message\"] !== undefined) {\n        contents.message = smithy_client_1.expectString(output[\"message\"]);\n    }\n    return contents;\n};\nconst deserializeAws_queryEndpoint = (output, context) => {\n    const contents = {\n        EndpointArn: undefined,\n        Attributes: undefined,\n    };\n    if (output[\"EndpointArn\"] !== undefined) {\n        contents.EndpointArn = smithy_client_1.expectString(output[\"EndpointArn\"]);\n    }\n    if (output.Attributes === \"\") {\n        contents.Attributes = {};\n    }\n    if (output[\"Attributes\"] !== undefined && output[\"Attributes\"][\"entry\"] !== undefined) {\n        contents.Attributes = deserializeAws_queryMapStringToString(smithy_client_1.getArrayIfSingleItem(output[\"Attributes\"][\"entry\"]), context);\n    }\n    return contents;\n};\nconst deserializeAws_queryEndpointDisabledException = (output, context) => {\n    const contents = {\n        message: undefined,\n    };\n    if (output[\"message\"] !== undefined) {\n        contents.message = smithy_client_1.expectString(output[\"message\"]);\n    }\n    return contents;\n};\nconst deserializeAws_queryFilterPolicyLimitExceededException = (output, context) => {\n    const contents = {\n        message: undefined,\n    };\n    if (output[\"message\"] !== undefined) {\n        contents.message = smithy_client_1.expectString(output[\"message\"]);\n    }\n    return contents;\n};\nconst deserializeAws_queryGetEndpointAttributesResponse = (output, context) => {\n    const contents = {\n        Attributes: undefined,\n    };\n    if (output.Attributes === \"\") {\n        contents.Attributes = {};\n    }\n    if (output[\"Attributes\"] !== undefined && output[\"Attributes\"][\"entry\"] !== undefined) {\n        contents.Attributes = deserializeAws_queryMapStringToString(smithy_client_1.getArrayIfSingleItem(output[\"Attributes\"][\"entry\"]), context);\n    }\n    return contents;\n};\nconst deserializeAws_queryGetPlatformApplicationAttributesResponse = (output, context) => {\n    const contents = {\n        Attributes: undefined,\n    };\n    if (output.Attributes === \"\") {\n        contents.Attributes = {};\n    }\n    if (output[\"Attributes\"] !== undefined && output[\"Attributes\"][\"entry\"] !== undefined) {\n        contents.Attributes = deserializeAws_queryMapStringToString(smithy_client_1.getArrayIfSingleItem(output[\"Attributes\"][\"entry\"]), context);\n    }\n    return contents;\n};\nconst deserializeAws_queryGetSMSAttributesResponse = (output, context) => {\n    const contents = {\n        attributes: undefined,\n    };\n    if (output.attributes === \"\") {\n        contents.attributes = {};\n    }\n    if (output[\"attributes\"] !== undefined && output[\"attributes\"][\"entry\"] !== undefined) {\n        contents.attributes = deserializeAws_queryMapStringToString(smithy_client_1.getArrayIfSingleItem(output[\"attributes\"][\"entry\"]), context);\n    }\n    return contents;\n};\nconst deserializeAws_queryGetSMSSandboxAccountStatusResult = (output, context) => {\n    const contents = {\n        IsInSandbox: undefined,\n    };\n    if (output[\"IsInSandbox\"] !== undefined) {\n        contents.IsInSandbox = smithy_client_1.parseBoolean(output[\"IsInSandbox\"]);\n    }\n    return contents;\n};\nconst deserializeAws_queryGetSubscriptionAttributesResponse = (output, context) => {\n    const contents = {\n        Attributes: undefined,\n    };\n    if (output.Attributes === \"\") {\n        contents.Attributes = {};\n    }\n    if (output[\"Attributes\"] !== undefined && output[\"Attributes\"][\"entry\"] !== undefined) {\n        contents.Attributes = deserializeAws_querySubscriptionAttributesMap(smithy_client_1.getArrayIfSingleItem(output[\"Attributes\"][\"entry\"]), context);\n    }\n    return contents;\n};\nconst deserializeAws_queryGetTopicAttributesResponse = (output, context) => {\n    const contents = {\n        Attributes: undefined,\n    };\n    if (output.Attributes === \"\") {\n        contents.Attributes = {};\n    }\n    if (output[\"Attributes\"] !== undefined && output[\"Attributes\"][\"entry\"] !== undefined) {\n        contents.Attributes = deserializeAws_queryTopicAttributesMap(smithy_client_1.getArrayIfSingleItem(output[\"Attributes\"][\"entry\"]), context);\n    }\n    return contents;\n};\nconst deserializeAws_queryInternalErrorException = (output, context) => {\n    const contents = {\n        message: undefined,\n    };\n    if (output[\"message\"] !== undefined) {\n        contents.message = smithy_client_1.expectString(output[\"message\"]);\n    }\n    return contents;\n};\nconst deserializeAws_queryInvalidBatchEntryIdException = (output, context) => {\n    const contents = {\n        message: undefined,\n    };\n    if (output[\"message\"] !== undefined) {\n        contents.message = smithy_client_1.expectString(output[\"message\"]);\n    }\n    return contents;\n};\nconst deserializeAws_queryInvalidParameterException = (output, context) => {\n    const contents = {\n        message: undefined,\n    };\n    if (output[\"message\"] !== undefined) {\n        contents.message = smithy_client_1.expectString(output[\"message\"]);\n    }\n    return contents;\n};\nconst deserializeAws_queryInvalidParameterValueException = (output, context) => {\n    const contents = {\n        message: undefined,\n    };\n    if (output[\"message\"] !== undefined) {\n        contents.message = smithy_client_1.expectString(output[\"message\"]);\n    }\n    return contents;\n};\nconst deserializeAws_queryInvalidSecurityException = (output, context) => {\n    const contents = {\n        message: undefined,\n    };\n    if (output[\"message\"] !== undefined) {\n        contents.message = smithy_client_1.expectString(output[\"message\"]);\n    }\n    return contents;\n};\nconst deserializeAws_queryKMSAccessDeniedException = (output, context) => {\n    const contents = {\n        message: undefined,\n    };\n    if (output[\"message\"] !== undefined) {\n        contents.message = smithy_client_1.expectString(output[\"message\"]);\n    }\n    return contents;\n};\nconst deserializeAws_queryKMSDisabledException = (output, context) => {\n    const contents = {\n        message: undefined,\n    };\n    if (output[\"message\"] !== undefined) {\n        contents.message = smithy_client_1.expectString(output[\"message\"]);\n    }\n    return contents;\n};\nconst deserializeAws_queryKMSInvalidStateException = (output, context) => {\n    const contents = {\n        message: undefined,\n    };\n    if (output[\"message\"] !== undefined) {\n        contents.message = smithy_client_1.expectString(output[\"message\"]);\n    }\n    return contents;\n};\nconst deserializeAws_queryKMSNotFoundException = (output, context) => {\n    const contents = {\n        message: undefined,\n    };\n    if (output[\"message\"] !== undefined) {\n        contents.message = smithy_client_1.expectString(output[\"message\"]);\n    }\n    return contents;\n};\nconst deserializeAws_queryKMSOptInRequired = (output, context) => {\n    const contents = {\n        message: undefined,\n    };\n    if (output[\"message\"] !== undefined) {\n        contents.message = smithy_client_1.expectString(output[\"message\"]);\n    }\n    return contents;\n};\nconst deserializeAws_queryKMSThrottlingException = (output, context) => {\n    const contents = {\n        message: undefined,\n    };\n    if (output[\"message\"] !== undefined) {\n        contents.message = smithy_client_1.expectString(output[\"message\"]);\n    }\n    return contents;\n};\nconst deserializeAws_queryListEndpointsByPlatformApplicationResponse = (output, context) => {\n    const contents = {\n        Endpoints: undefined,\n        NextToken: undefined,\n    };\n    if (output.Endpoints === \"\") {\n        contents.Endpoints = [];\n    }\n    if (output[\"Endpoints\"] !== undefined && output[\"Endpoints\"][\"member\"] !== undefined) {\n        contents.Endpoints = deserializeAws_queryListOfEndpoints(smithy_client_1.getArrayIfSingleItem(output[\"Endpoints\"][\"member\"]), context);\n    }\n    if (output[\"NextToken\"] !== undefined) {\n        contents.NextToken = smithy_client_1.expectString(output[\"NextToken\"]);\n    }\n    return contents;\n};\nconst deserializeAws_queryListOfEndpoints = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        if (entry === null) {\n            return null;\n        }\n        return deserializeAws_queryEndpoint(entry, context);\n    });\n};\nconst deserializeAws_queryListOfPlatformApplications = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        if (entry === null) {\n            return null;\n        }\n        return deserializeAws_queryPlatformApplication(entry, context);\n    });\n};\nconst deserializeAws_queryListOriginationNumbersResult = (output, context) => {\n    const contents = {\n        NextToken: undefined,\n        PhoneNumbers: undefined,\n    };\n    if (output[\"NextToken\"] !== undefined) {\n        contents.NextToken = smithy_client_1.expectString(output[\"NextToken\"]);\n    }\n    if (output.PhoneNumbers === \"\") {\n        contents.PhoneNumbers = [];\n    }\n    if (output[\"PhoneNumbers\"] !== undefined && output[\"PhoneNumbers\"][\"member\"] !== undefined) {\n        contents.PhoneNumbers = deserializeAws_queryPhoneNumberInformationList(smithy_client_1.getArrayIfSingleItem(output[\"PhoneNumbers\"][\"member\"]), context);\n    }\n    return contents;\n};\nconst deserializeAws_queryListPhoneNumbersOptedOutResponse = (output, context) => {\n    const contents = {\n        phoneNumbers: undefined,\n        nextToken: undefined,\n    };\n    if (output.phoneNumbers === \"\") {\n        contents.phoneNumbers = [];\n    }\n    if (output[\"phoneNumbers\"] !== undefined && output[\"phoneNumbers\"][\"member\"] !== undefined) {\n        contents.phoneNumbers = deserializeAws_queryPhoneNumberList(smithy_client_1.getArrayIfSingleItem(output[\"phoneNumbers\"][\"member\"]), context);\n    }\n    if (output[\"nextToken\"] !== undefined) {\n        contents.nextToken = smithy_client_1.expectString(output[\"nextToken\"]);\n    }\n    return contents;\n};\nconst deserializeAws_queryListPlatformApplicationsResponse = (output, context) => {\n    const contents = {\n        PlatformApplications: undefined,\n        NextToken: undefined,\n    };\n    if (output.PlatformApplications === \"\") {\n        contents.PlatformApplications = [];\n    }\n    if (output[\"PlatformApplications\"] !== undefined && output[\"PlatformApplications\"][\"member\"] !== undefined) {\n        contents.PlatformApplications = deserializeAws_queryListOfPlatformApplications(smithy_client_1.getArrayIfSingleItem(output[\"PlatformApplications\"][\"member\"]), context);\n    }\n    if (output[\"NextToken\"] !== undefined) {\n        contents.NextToken = smithy_client_1.expectString(output[\"NextToken\"]);\n    }\n    return contents;\n};\nconst deserializeAws_queryListSMSSandboxPhoneNumbersResult = (output, context) => {\n    const contents = {\n        PhoneNumbers: undefined,\n        NextToken: undefined,\n    };\n    if (output.PhoneNumbers === \"\") {\n        contents.PhoneNumbers = [];\n    }\n    if (output[\"PhoneNumbers\"] !== undefined && output[\"PhoneNumbers\"][\"member\"] !== undefined) {\n        contents.PhoneNumbers = deserializeAws_querySMSSandboxPhoneNumberList(smithy_client_1.getArrayIfSingleItem(output[\"PhoneNumbers\"][\"member\"]), context);\n    }\n    if (output[\"NextToken\"] !== undefined) {\n        contents.NextToken = smithy_client_1.expectString(output[\"NextToken\"]);\n    }\n    return contents;\n};\nconst deserializeAws_queryListSubscriptionsByTopicResponse = (output, context) => {\n    const contents = {\n        Subscriptions: undefined,\n        NextToken: undefined,\n    };\n    if (output.Subscriptions === \"\") {\n        contents.Subscriptions = [];\n    }\n    if (output[\"Subscriptions\"] !== undefined && output[\"Subscriptions\"][\"member\"] !== undefined) {\n        contents.Subscriptions = deserializeAws_querySubscriptionsList(smithy_client_1.getArrayIfSingleItem(output[\"Subscriptions\"][\"member\"]), context);\n    }\n    if (output[\"NextToken\"] !== undefined) {\n        contents.NextToken = smithy_client_1.expectString(output[\"NextToken\"]);\n    }\n    return contents;\n};\nconst deserializeAws_queryListSubscriptionsResponse = (output, context) => {\n    const contents = {\n        Subscriptions: undefined,\n        NextToken: undefined,\n    };\n    if (output.Subscriptions === \"\") {\n        contents.Subscriptions = [];\n    }\n    if (output[\"Subscriptions\"] !== undefined && output[\"Subscriptions\"][\"member\"] !== undefined) {\n        contents.Subscriptions = deserializeAws_querySubscriptionsList(smithy_client_1.getArrayIfSingleItem(output[\"Subscriptions\"][\"member\"]), context);\n    }\n    if (output[\"NextToken\"] !== undefined) {\n        contents.NextToken = smithy_client_1.expectString(output[\"NextToken\"]);\n    }\n    return contents;\n};\nconst deserializeAws_queryListTagsForResourceResponse = (output, context) => {\n    const contents = {\n        Tags: undefined,\n    };\n    if (output.Tags === \"\") {\n        contents.Tags = [];\n    }\n    if (output[\"Tags\"] !== undefined && output[\"Tags\"][\"member\"] !== undefined) {\n        contents.Tags = deserializeAws_queryTagList(smithy_client_1.getArrayIfSingleItem(output[\"Tags\"][\"member\"]), context);\n    }\n    return contents;\n};\nconst deserializeAws_queryListTopicsResponse = (output, context) => {\n    const contents = {\n        Topics: undefined,\n        NextToken: undefined,\n    };\n    if (output.Topics === \"\") {\n        contents.Topics = [];\n    }\n    if (output[\"Topics\"] !== undefined && output[\"Topics\"][\"member\"] !== undefined) {\n        contents.Topics = deserializeAws_queryTopicsList(smithy_client_1.getArrayIfSingleItem(output[\"Topics\"][\"member\"]), context);\n    }\n    if (output[\"NextToken\"] !== undefined) {\n        contents.NextToken = smithy_client_1.expectString(output[\"NextToken\"]);\n    }\n    return contents;\n};\nconst deserializeAws_queryMapStringToString = (output, context) => {\n    return output.reduce((acc, pair) => {\n        if (pair[\"value\"] === null) {\n            return acc;\n        }\n        return {\n            ...acc,\n            [pair[\"key\"]]: smithy_client_1.expectString(pair[\"value\"]),\n        };\n    }, {});\n};\nconst deserializeAws_queryNotFoundException = (output, context) => {\n    const contents = {\n        message: undefined,\n    };\n    if (output[\"message\"] !== undefined) {\n        contents.message = smithy_client_1.expectString(output[\"message\"]);\n    }\n    return contents;\n};\nconst deserializeAws_queryNumberCapabilityList = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        if (entry === null) {\n            return null;\n        }\n        return smithy_client_1.expectString(entry);\n    });\n};\nconst deserializeAws_queryOptedOutException = (output, context) => {\n    const contents = {\n        message: undefined,\n    };\n    if (output[\"message\"] !== undefined) {\n        contents.message = smithy_client_1.expectString(output[\"message\"]);\n    }\n    return contents;\n};\nconst deserializeAws_queryOptInPhoneNumberResponse = (output, context) => {\n    const contents = {};\n    return contents;\n};\nconst deserializeAws_queryPhoneNumberInformation = (output, context) => {\n    const contents = {\n        CreatedAt: undefined,\n        PhoneNumber: undefined,\n        Status: undefined,\n        Iso2CountryCode: undefined,\n        RouteType: undefined,\n        NumberCapabilities: undefined,\n    };\n    if (output[\"CreatedAt\"] !== undefined) {\n        contents.CreatedAt = smithy_client_1.expectNonNull(smithy_client_1.parseRfc3339DateTime(output[\"CreatedAt\"]));\n    }\n    if (output[\"PhoneNumber\"] !== undefined) {\n        contents.PhoneNumber = smithy_client_1.expectString(output[\"PhoneNumber\"]);\n    }\n    if (output[\"Status\"] !== undefined) {\n        contents.Status = smithy_client_1.expectString(output[\"Status\"]);\n    }\n    if (output[\"Iso2CountryCode\"] !== undefined) {\n        contents.Iso2CountryCode = smithy_client_1.expectString(output[\"Iso2CountryCode\"]);\n    }\n    if (output[\"RouteType\"] !== undefined) {\n        contents.RouteType = smithy_client_1.expectString(output[\"RouteType\"]);\n    }\n    if (output.NumberCapabilities === \"\") {\n        contents.NumberCapabilities = [];\n    }\n    if (output[\"NumberCapabilities\"] !== undefined && output[\"NumberCapabilities\"][\"member\"] !== undefined) {\n        contents.NumberCapabilities = deserializeAws_queryNumberCapabilityList(smithy_client_1.getArrayIfSingleItem(output[\"NumberCapabilities\"][\"member\"]), context);\n    }\n    return contents;\n};\nconst deserializeAws_queryPhoneNumberInformationList = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        if (entry === null) {\n            return null;\n        }\n        return deserializeAws_queryPhoneNumberInformation(entry, context);\n    });\n};\nconst deserializeAws_queryPhoneNumberList = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        if (entry === null) {\n            return null;\n        }\n        return smithy_client_1.expectString(entry);\n    });\n};\nconst deserializeAws_queryPlatformApplication = (output, context) => {\n    const contents = {\n        PlatformApplicationArn: undefined,\n        Attributes: undefined,\n    };\n    if (output[\"PlatformApplicationArn\"] !== undefined) {\n        contents.PlatformApplicationArn = smithy_client_1.expectString(output[\"PlatformApplicationArn\"]);\n    }\n    if (output.Attributes === \"\") {\n        contents.Attributes = {};\n    }\n    if (output[\"Attributes\"] !== undefined && output[\"Attributes\"][\"entry\"] !== undefined) {\n        contents.Attributes = deserializeAws_queryMapStringToString(smithy_client_1.getArrayIfSingleItem(output[\"Attributes\"][\"entry\"]), context);\n    }\n    return contents;\n};\nconst deserializeAws_queryPlatformApplicationDisabledException = (output, context) => {\n    const contents = {\n        message: undefined,\n    };\n    if (output[\"message\"] !== undefined) {\n        contents.message = smithy_client_1.expectString(output[\"message\"]);\n    }\n    return contents;\n};\nconst deserializeAws_queryPublishBatchResponse = (output, context) => {\n    const contents = {\n        Successful: undefined,\n        Failed: undefined,\n    };\n    if (output.Successful === \"\") {\n        contents.Successful = [];\n    }\n    if (output[\"Successful\"] !== undefined && output[\"Successful\"][\"member\"] !== undefined) {\n        contents.Successful = deserializeAws_queryPublishBatchResultEntryList(smithy_client_1.getArrayIfSingleItem(output[\"Successful\"][\"member\"]), context);\n    }\n    if (output.Failed === \"\") {\n        contents.Failed = [];\n    }\n    if (output[\"Failed\"] !== undefined && output[\"Failed\"][\"member\"] !== undefined) {\n        contents.Failed = deserializeAws_queryBatchResultErrorEntryList(smithy_client_1.getArrayIfSingleItem(output[\"Failed\"][\"member\"]), context);\n    }\n    return contents;\n};\nconst deserializeAws_queryPublishBatchResultEntry = (output, context) => {\n    const contents = {\n        Id: undefined,\n        MessageId: undefined,\n        SequenceNumber: undefined,\n    };\n    if (output[\"Id\"] !== undefined) {\n        contents.Id = smithy_client_1.expectString(output[\"Id\"]);\n    }\n    if (output[\"MessageId\"] !== undefined) {\n        contents.MessageId = smithy_client_1.expectString(output[\"MessageId\"]);\n    }\n    if (output[\"SequenceNumber\"] !== undefined) {\n        contents.SequenceNumber = smithy_client_1.expectString(output[\"SequenceNumber\"]);\n    }\n    return contents;\n};\nconst deserializeAws_queryPublishBatchResultEntryList = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        if (entry === null) {\n            return null;\n        }\n        return deserializeAws_queryPublishBatchResultEntry(entry, context);\n    });\n};\nconst deserializeAws_queryPublishResponse = (output, context) => {\n    const contents = {\n        MessageId: undefined,\n        SequenceNumber: undefined,\n    };\n    if (output[\"MessageId\"] !== undefined) {\n        contents.MessageId = smithy_client_1.expectString(output[\"MessageId\"]);\n    }\n    if (output[\"SequenceNumber\"] !== undefined) {\n        contents.SequenceNumber = smithy_client_1.expectString(output[\"SequenceNumber\"]);\n    }\n    return contents;\n};\nconst deserializeAws_queryResourceNotFoundException = (output, context) => {\n    const contents = {\n        message: undefined,\n    };\n    if (output[\"message\"] !== undefined) {\n        contents.message = smithy_client_1.expectString(output[\"message\"]);\n    }\n    return contents;\n};\nconst deserializeAws_querySetSMSAttributesResponse = (output, context) => {\n    const contents = {};\n    return contents;\n};\nconst deserializeAws_querySMSSandboxPhoneNumber = (output, context) => {\n    const contents = {\n        PhoneNumber: undefined,\n        Status: undefined,\n    };\n    if (output[\"PhoneNumber\"] !== undefined) {\n        contents.PhoneNumber = smithy_client_1.expectString(output[\"PhoneNumber\"]);\n    }\n    if (output[\"Status\"] !== undefined) {\n        contents.Status = smithy_client_1.expectString(output[\"Status\"]);\n    }\n    return contents;\n};\nconst deserializeAws_querySMSSandboxPhoneNumberList = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        if (entry === null) {\n            return null;\n        }\n        return deserializeAws_querySMSSandboxPhoneNumber(entry, context);\n    });\n};\nconst deserializeAws_queryStaleTagException = (output, context) => {\n    const contents = {\n        message: undefined,\n    };\n    if (output[\"message\"] !== undefined) {\n        contents.message = smithy_client_1.expectString(output[\"message\"]);\n    }\n    return contents;\n};\nconst deserializeAws_querySubscribeResponse = (output, context) => {\n    const contents = {\n        SubscriptionArn: undefined,\n    };\n    if (output[\"SubscriptionArn\"] !== undefined) {\n        contents.SubscriptionArn = smithy_client_1.expectString(output[\"SubscriptionArn\"]);\n    }\n    return contents;\n};\nconst deserializeAws_querySubscription = (output, context) => {\n    const contents = {\n        SubscriptionArn: undefined,\n        Owner: undefined,\n        Protocol: undefined,\n        Endpoint: undefined,\n        TopicArn: undefined,\n    };\n    if (output[\"SubscriptionArn\"] !== undefined) {\n        contents.SubscriptionArn = smithy_client_1.expectString(output[\"SubscriptionArn\"]);\n    }\n    if (output[\"Owner\"] !== undefined) {\n        contents.Owner = smithy_client_1.expectString(output[\"Owner\"]);\n    }\n    if (output[\"Protocol\"] !== undefined) {\n        contents.Protocol = smithy_client_1.expectString(output[\"Protocol\"]);\n    }\n    if (output[\"Endpoint\"] !== undefined) {\n        contents.Endpoint = smithy_client_1.expectString(output[\"Endpoint\"]);\n    }\n    if (output[\"TopicArn\"] !== undefined) {\n        contents.TopicArn = smithy_client_1.expectString(output[\"TopicArn\"]);\n    }\n    return contents;\n};\nconst deserializeAws_querySubscriptionAttributesMap = (output, context) => {\n    return output.reduce((acc, pair) => {\n        if (pair[\"value\"] === null) {\n            return acc;\n        }\n        return {\n            ...acc,\n            [pair[\"key\"]]: smithy_client_1.expectString(pair[\"value\"]),\n        };\n    }, {});\n};\nconst deserializeAws_querySubscriptionLimitExceededException = (output, context) => {\n    const contents = {\n        message: undefined,\n    };\n    if (output[\"message\"] !== undefined) {\n        contents.message = smithy_client_1.expectString(output[\"message\"]);\n    }\n    return contents;\n};\nconst deserializeAws_querySubscriptionsList = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        if (entry === null) {\n            return null;\n        }\n        return deserializeAws_querySubscription(entry, context);\n    });\n};\nconst deserializeAws_queryTag = (output, context) => {\n    const contents = {\n        Key: undefined,\n        Value: undefined,\n    };\n    if (output[\"Key\"] !== undefined) {\n        contents.Key = smithy_client_1.expectString(output[\"Key\"]);\n    }\n    if (output[\"Value\"] !== undefined) {\n        contents.Value = smithy_client_1.expectString(output[\"Value\"]);\n    }\n    return contents;\n};\nconst deserializeAws_queryTagLimitExceededException = (output, context) => {\n    const contents = {\n        message: undefined,\n    };\n    if (output[\"message\"] !== undefined) {\n        contents.message = smithy_client_1.expectString(output[\"message\"]);\n    }\n    return contents;\n};\nconst deserializeAws_queryTagList = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        if (entry === null) {\n            return null;\n        }\n        return deserializeAws_queryTag(entry, context);\n    });\n};\nconst deserializeAws_queryTagPolicyException = (output, context) => {\n    const contents = {\n        message: undefined,\n    };\n    if (output[\"message\"] !== undefined) {\n        contents.message = smithy_client_1.expectString(output[\"message\"]);\n    }\n    return contents;\n};\nconst deserializeAws_queryTagResourceResponse = (output, context) => {\n    const contents = {};\n    return contents;\n};\nconst deserializeAws_queryThrottledException = (output, context) => {\n    const contents = {\n        message: undefined,\n    };\n    if (output[\"message\"] !== undefined) {\n        contents.message = smithy_client_1.expectString(output[\"message\"]);\n    }\n    return contents;\n};\nconst deserializeAws_queryTooManyEntriesInBatchRequestException = (output, context) => {\n    const contents = {\n        message: undefined,\n    };\n    if (output[\"message\"] !== undefined) {\n        contents.message = smithy_client_1.expectString(output[\"message\"]);\n    }\n    return contents;\n};\nconst deserializeAws_queryTopic = (output, context) => {\n    const contents = {\n        TopicArn: undefined,\n    };\n    if (output[\"TopicArn\"] !== undefined) {\n        contents.TopicArn = smithy_client_1.expectString(output[\"TopicArn\"]);\n    }\n    return contents;\n};\nconst deserializeAws_queryTopicAttributesMap = (output, context) => {\n    return output.reduce((acc, pair) => {\n        if (pair[\"value\"] === null) {\n            return acc;\n        }\n        return {\n            ...acc,\n            [pair[\"key\"]]: smithy_client_1.expectString(pair[\"value\"]),\n        };\n    }, {});\n};\nconst deserializeAws_queryTopicLimitExceededException = (output, context) => {\n    const contents = {\n        message: undefined,\n    };\n    if (output[\"message\"] !== undefined) {\n        contents.message = smithy_client_1.expectString(output[\"message\"]);\n    }\n    return contents;\n};\nconst deserializeAws_queryTopicsList = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        if (entry === null) {\n            return null;\n        }\n        return deserializeAws_queryTopic(entry, context);\n    });\n};\nconst deserializeAws_queryUntagResourceResponse = (output, context) => {\n    const contents = {};\n    return contents;\n};\nconst deserializeAws_queryUserErrorException = (output, context) => {\n    const contents = {\n        message: undefined,\n    };\n    if (output[\"message\"] !== undefined) {\n        contents.message = smithy_client_1.expectString(output[\"message\"]);\n    }\n    return contents;\n};\nconst deserializeAws_queryValidationException = (output, context) => {\n    const contents = {\n        Message: undefined,\n    };\n    if (output[\"Message\"] !== undefined) {\n        contents.Message = smithy_client_1.expectString(output[\"Message\"]);\n    }\n    return contents;\n};\nconst deserializeAws_queryVerificationException = (output, context) => {\n    const contents = {\n        Message: undefined,\n        Status: undefined,\n    };\n    if (output[\"Message\"] !== undefined) {\n        contents.Message = smithy_client_1.expectString(output[\"Message\"]);\n    }\n    if (output[\"Status\"] !== undefined) {\n        contents.Status = smithy_client_1.expectString(output[\"Status\"]);\n    }\n    return contents;\n};\nconst deserializeAws_queryVerifySMSSandboxPhoneNumberResult = (output, context) => {\n    const contents = {};\n    return contents;\n};\nconst deserializeMetadata = (output) => {\n    var _a;\n    return ({\n        httpStatusCode: output.statusCode,\n        requestId: (_a = output.headers[\"x-amzn-requestid\"]) !== null && _a !== void 0 ? _a : output.headers[\"x-amzn-request-id\"],\n        extendedRequestId: output.headers[\"x-amz-id-2\"],\n        cfId: output.headers[\"x-amz-cf-id\"],\n    });\n};\nconst collectBody = (streamBody = new Uint8Array(), context) => {\n    if (streamBody instanceof Uint8Array) {\n        return Promise.resolve(streamBody);\n    }\n    return context.streamCollector(streamBody) || Promise.resolve(new Uint8Array());\n};\nconst collectBodyString = (streamBody, context) => collectBody(streamBody, context).then((body) => context.utf8Encoder(body));\nconst buildHttpRpcRequest = async (context, headers, path, resolvedHostname, body) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const contents = {\n        protocol,\n        hostname,\n        port,\n        method: \"POST\",\n        path: basePath.endsWith(\"/\") ? basePath.slice(0, -1) + path : basePath + path,\n        headers,\n    };\n    if (resolvedHostname !== undefined) {\n        contents.hostname = resolvedHostname;\n    }\n    if (body !== undefined) {\n        contents.body = body;\n    }\n    return new protocol_http_1.HttpRequest(contents);\n};\nconst parseBody = (streamBody, context) => collectBodyString(streamBody, context).then((encoded) => {\n    if (encoded.length) {\n        const parsedObj = fast_xml_parser_1.parse(encoded, {\n            attributeNamePrefix: \"\",\n            ignoreAttributes: false,\n            parseNodeValue: false,\n            trimValues: false,\n            tagValueProcessor: (val) => (val.trim() === \"\" && val.includes(\"\\n\") ? \"\" : entities_1.decodeHTML(val)),\n        });\n        const textNodeName = \"#text\";\n        const key = Object.keys(parsedObj)[0];\n        const parsedObjToReturn = parsedObj[key];\n        if (parsedObjToReturn[textNodeName]) {\n            parsedObjToReturn[key] = parsedObjToReturn[textNodeName];\n            delete parsedObjToReturn[textNodeName];\n        }\n        return smithy_client_1.getValueFromTextNode(parsedObjToReturn);\n    }\n    return {};\n});\nconst buildFormUrlencodedString = (formEntries) => Object.entries(formEntries)\n    .map(([key, value]) => smithy_client_1.extendedEncodeURIComponent(key) + \"=\" + smithy_client_1.extendedEncodeURIComponent(value))\n    .join(\"&\");\nconst loadQueryErrorCode = (output, data) => {\n    if (data.Error.Code !== undefined) {\n        return data.Error.Code;\n    }\n    if (output.statusCode == 404) {\n        return \"NotFound\";\n    }\n    return \"\";\n};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getRuntimeConfig = void 0;\nconst tslib_1 = require(\"tslib\");\nconst package_json_1 = tslib_1.__importDefault(require(\"../package.json\"));\nconst client_sts_1 = require(\"@aws-sdk/client-sts\");\nconst config_resolver_1 = require(\"@aws-sdk/config-resolver\");\nconst credential_provider_node_1 = require(\"@aws-sdk/credential-provider-node\");\nconst hash_node_1 = require(\"@aws-sdk/hash-node\");\nconst middleware_retry_1 = require(\"@aws-sdk/middleware-retry\");\nconst node_config_provider_1 = require(\"@aws-sdk/node-config-provider\");\nconst node_http_handler_1 = require(\"@aws-sdk/node-http-handler\");\nconst util_base64_node_1 = require(\"@aws-sdk/util-base64-node\");\nconst util_body_length_node_1 = require(\"@aws-sdk/util-body-length-node\");\nconst util_user_agent_node_1 = require(\"@aws-sdk/util-user-agent-node\");\nconst util_utf8_node_1 = require(\"@aws-sdk/util-utf8-node\");\nconst runtimeConfig_shared_1 = require(\"./runtimeConfig.shared\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\nconst util_defaults_mode_node_1 = require(\"@aws-sdk/util-defaults-mode-node\");\nconst getRuntimeConfig = (config) => {\n    var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p, _q;\n    const defaultsMode = util_defaults_mode_node_1.resolveDefaultsModeConfig(config);\n    const defaultConfigProvider = () => defaultsMode().then(smithy_client_1.loadConfigsForDefaultMode);\n    const clientSharedValues = runtimeConfig_shared_1.getRuntimeConfig(config);\n    return {\n        ...clientSharedValues,\n        ...config,\n        runtime: \"node\",\n        defaultsMode,\n        base64Decoder: (_a = config === null || config === void 0 ? void 0 : config.base64Decoder) !== null && _a !== void 0 ? _a : util_base64_node_1.fromBase64,\n        base64Encoder: (_b = config === null || config === void 0 ? void 0 : config.base64Encoder) !== null && _b !== void 0 ? _b : util_base64_node_1.toBase64,\n        bodyLengthChecker: (_c = config === null || config === void 0 ? void 0 : config.bodyLengthChecker) !== null && _c !== void 0 ? _c : util_body_length_node_1.calculateBodyLength,\n        credentialDefaultProvider: (_d = config === null || config === void 0 ? void 0 : config.credentialDefaultProvider) !== null && _d !== void 0 ? _d : client_sts_1.decorateDefaultCredentialProvider(credential_provider_node_1.defaultProvider),\n        defaultUserAgentProvider: (_e = config === null || config === void 0 ? void 0 : config.defaultUserAgentProvider) !== null && _e !== void 0 ? _e : util_user_agent_node_1.defaultUserAgent({ serviceId: clientSharedValues.serviceId, clientVersion: package_json_1.default.version }),\n        maxAttempts: (_f = config === null || config === void 0 ? void 0 : config.maxAttempts) !== null && _f !== void 0 ? _f : node_config_provider_1.loadConfig(middleware_retry_1.NODE_MAX_ATTEMPT_CONFIG_OPTIONS),\n        region: (_g = config === null || config === void 0 ? void 0 : config.region) !== null && _g !== void 0 ? _g : node_config_provider_1.loadConfig(config_resolver_1.NODE_REGION_CONFIG_OPTIONS, config_resolver_1.NODE_REGION_CONFIG_FILE_OPTIONS),\n        requestHandler: (_h = config === null || config === void 0 ? void 0 : config.requestHandler) !== null && _h !== void 0 ? _h : new node_http_handler_1.NodeHttpHandler(defaultConfigProvider),\n        retryMode: (_j = config === null || config === void 0 ? void 0 : config.retryMode) !== null && _j !== void 0 ? _j : node_config_provider_1.loadConfig({\n            ...middleware_retry_1.NODE_RETRY_MODE_CONFIG_OPTIONS,\n            default: async () => (await defaultConfigProvider()).retryMode || middleware_retry_1.DEFAULT_RETRY_MODE,\n        }),\n        sha256: (_k = config === null || config === void 0 ? void 0 : config.sha256) !== null && _k !== void 0 ? _k : hash_node_1.Hash.bind(null, \"sha256\"),\n        streamCollector: (_l = config === null || config === void 0 ? void 0 : config.streamCollector) !== null && _l !== void 0 ? _l : node_http_handler_1.streamCollector,\n        useDualstackEndpoint: (_m = config === null || config === void 0 ? void 0 : config.useDualstackEndpoint) !== null && _m !== void 0 ? _m : node_config_provider_1.loadConfig(config_resolver_1.NODE_USE_DUALSTACK_ENDPOINT_CONFIG_OPTIONS),\n        useFipsEndpoint: (_o = config === null || config === void 0 ? void 0 : config.useFipsEndpoint) !== null && _o !== void 0 ? _o : node_config_provider_1.loadConfig(config_resolver_1.NODE_USE_FIPS_ENDPOINT_CONFIG_OPTIONS),\n        utf8Decoder: (_p = config === null || config === void 0 ? void 0 : config.utf8Decoder) !== null && _p !== void 0 ? _p : util_utf8_node_1.fromUtf8,\n        utf8Encoder: (_q = config === null || config === void 0 ? void 0 : config.utf8Encoder) !== null && _q !== void 0 ? _q : util_utf8_node_1.toUtf8,\n    };\n};\nexports.getRuntimeConfig = getRuntimeConfig;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getRuntimeConfig = void 0;\nconst url_parser_1 = require(\"@aws-sdk/url-parser\");\nconst endpoints_1 = require(\"./endpoints\");\nconst getRuntimeConfig = (config) => {\n    var _a, _b, _c, _d, _e;\n    return ({\n        apiVersion: \"2010-03-31\",\n        disableHostPrefix: (_a = config === null || config === void 0 ? void 0 : config.disableHostPrefix) !== null && _a !== void 0 ? _a : false,\n        logger: (_b = config === null || config === void 0 ? void 0 : config.logger) !== null && _b !== void 0 ? _b : {},\n        regionInfoProvider: (_c = config === null || config === void 0 ? void 0 : config.regionInfoProvider) !== null && _c !== void 0 ? _c : endpoints_1.defaultRegionInfoProvider,\n        serviceId: (_d = config === null || config === void 0 ? void 0 : config.serviceId) !== null && _d !== void 0 ? _d : \"SNS\",\n        urlParser: (_e = config === null || config === void 0 ? void 0 : config.urlParser) !== null && _e !== void 0 ? _e : url_parser_1.parseUrl,\n    });\n};\nexports.getRuntimeConfig = getRuntimeConfig;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SSO = void 0;\nconst GetRoleCredentialsCommand_1 = require(\"./commands/GetRoleCredentialsCommand\");\nconst ListAccountRolesCommand_1 = require(\"./commands/ListAccountRolesCommand\");\nconst ListAccountsCommand_1 = require(\"./commands/ListAccountsCommand\");\nconst LogoutCommand_1 = require(\"./commands/LogoutCommand\");\nconst SSOClient_1 = require(\"./SSOClient\");\nclass SSO extends SSOClient_1.SSOClient {\n    getRoleCredentials(args, optionsOrCb, cb) {\n        const command = new GetRoleCredentialsCommand_1.GetRoleCredentialsCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    listAccountRoles(args, optionsOrCb, cb) {\n        const command = new ListAccountRolesCommand_1.ListAccountRolesCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    listAccounts(args, optionsOrCb, cb) {\n        const command = new ListAccountsCommand_1.ListAccountsCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    logout(args, optionsOrCb, cb) {\n        const command = new LogoutCommand_1.LogoutCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n}\nexports.SSO = SSO;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SSOClient = void 0;\nconst config_resolver_1 = require(\"@aws-sdk/config-resolver\");\nconst middleware_content_length_1 = require(\"@aws-sdk/middleware-content-length\");\nconst middleware_host_header_1 = require(\"@aws-sdk/middleware-host-header\");\nconst middleware_logger_1 = require(\"@aws-sdk/middleware-logger\");\nconst middleware_retry_1 = require(\"@aws-sdk/middleware-retry\");\nconst middleware_user_agent_1 = require(\"@aws-sdk/middleware-user-agent\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\nconst runtimeConfig_1 = require(\"./runtimeConfig\");\nclass SSOClient extends smithy_client_1.Client {\n    constructor(configuration) {\n        const _config_0 = runtimeConfig_1.getRuntimeConfig(configuration);\n        const _config_1 = config_resolver_1.resolveRegionConfig(_config_0);\n        const _config_2 = config_resolver_1.resolveEndpointsConfig(_config_1);\n        const _config_3 = middleware_retry_1.resolveRetryConfig(_config_2);\n        const _config_4 = middleware_host_header_1.resolveHostHeaderConfig(_config_3);\n        const _config_5 = middleware_user_agent_1.resolveUserAgentConfig(_config_4);\n        super(_config_5);\n        this.config = _config_5;\n        this.middlewareStack.use(middleware_retry_1.getRetryPlugin(this.config));\n        this.middlewareStack.use(middleware_content_length_1.getContentLengthPlugin(this.config));\n        this.middlewareStack.use(middleware_host_header_1.getHostHeaderPlugin(this.config));\n        this.middlewareStack.use(middleware_logger_1.getLoggerPlugin(this.config));\n        this.middlewareStack.use(middleware_user_agent_1.getUserAgentPlugin(this.config));\n    }\n    destroy() {\n        super.destroy();\n    }\n}\nexports.SSOClient = SSOClient;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.GetRoleCredentialsCommand = void 0;\nconst middleware_serde_1 = require(\"@aws-sdk/middleware-serde\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\nconst models_0_1 = require(\"../models/models_0\");\nconst Aws_restJson1_1 = require(\"../protocols/Aws_restJson1\");\nclass GetRoleCredentialsCommand extends smithy_client_1.Command {\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use(middleware_serde_1.getSerdePlugin(configuration, this.serialize, this.deserialize));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"SSOClient\";\n        const commandName = \"GetRoleCredentialsCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: models_0_1.GetRoleCredentialsRequest.filterSensitiveLog,\n            outputFilterSensitiveLog: models_0_1.GetRoleCredentialsResponse.filterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return Aws_restJson1_1.serializeAws_restJson1GetRoleCredentialsCommand(input, context);\n    }\n    deserialize(output, context) {\n        return Aws_restJson1_1.deserializeAws_restJson1GetRoleCredentialsCommand(output, context);\n    }\n}\nexports.GetRoleCredentialsCommand = GetRoleCredentialsCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ListAccountRolesCommand = void 0;\nconst middleware_serde_1 = require(\"@aws-sdk/middleware-serde\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\nconst models_0_1 = require(\"../models/models_0\");\nconst Aws_restJson1_1 = require(\"../protocols/Aws_restJson1\");\nclass ListAccountRolesCommand extends smithy_client_1.Command {\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use(middleware_serde_1.getSerdePlugin(configuration, this.serialize, this.deserialize));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"SSOClient\";\n        const commandName = \"ListAccountRolesCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: models_0_1.ListAccountRolesRequest.filterSensitiveLog,\n            outputFilterSensitiveLog: models_0_1.ListAccountRolesResponse.filterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return Aws_restJson1_1.serializeAws_restJson1ListAccountRolesCommand(input, context);\n    }\n    deserialize(output, context) {\n        return Aws_restJson1_1.deserializeAws_restJson1ListAccountRolesCommand(output, context);\n    }\n}\nexports.ListAccountRolesCommand = ListAccountRolesCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ListAccountsCommand = void 0;\nconst middleware_serde_1 = require(\"@aws-sdk/middleware-serde\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\nconst models_0_1 = require(\"../models/models_0\");\nconst Aws_restJson1_1 = require(\"../protocols/Aws_restJson1\");\nclass ListAccountsCommand extends smithy_client_1.Command {\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use(middleware_serde_1.getSerdePlugin(configuration, this.serialize, this.deserialize));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"SSOClient\";\n        const commandName = \"ListAccountsCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: models_0_1.ListAccountsRequest.filterSensitiveLog,\n            outputFilterSensitiveLog: models_0_1.ListAccountsResponse.filterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return Aws_restJson1_1.serializeAws_restJson1ListAccountsCommand(input, context);\n    }\n    deserialize(output, context) {\n        return Aws_restJson1_1.deserializeAws_restJson1ListAccountsCommand(output, context);\n    }\n}\nexports.ListAccountsCommand = ListAccountsCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.LogoutCommand = void 0;\nconst middleware_serde_1 = require(\"@aws-sdk/middleware-serde\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\nconst models_0_1 = require(\"../models/models_0\");\nconst Aws_restJson1_1 = require(\"../protocols/Aws_restJson1\");\nclass LogoutCommand extends smithy_client_1.Command {\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use(middleware_serde_1.getSerdePlugin(configuration, this.serialize, this.deserialize));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"SSOClient\";\n        const commandName = \"LogoutCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: models_0_1.LogoutRequest.filterSensitiveLog,\n            outputFilterSensitiveLog: (output) => output,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return Aws_restJson1_1.serializeAws_restJson1LogoutCommand(input, context);\n    }\n    deserialize(output, context) {\n        return Aws_restJson1_1.deserializeAws_restJson1LogoutCommand(output, context);\n    }\n}\nexports.LogoutCommand = LogoutCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = require(\"tslib\");\ntslib_1.__exportStar(require(\"./GetRoleCredentialsCommand\"), exports);\ntslib_1.__exportStar(require(\"./ListAccountRolesCommand\"), exports);\ntslib_1.__exportStar(require(\"./ListAccountsCommand\"), exports);\ntslib_1.__exportStar(require(\"./LogoutCommand\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.defaultRegionInfoProvider = void 0;\nconst config_resolver_1 = require(\"@aws-sdk/config-resolver\");\nconst regionHash = {\n    \"ap-northeast-1\": {\n        variants: [\n            {\n                hostname: \"portal.sso.ap-northeast-1.amazonaws.com\",\n                tags: [],\n            },\n        ],\n        signingRegion: \"ap-northeast-1\",\n    },\n    \"ap-northeast-2\": {\n        variants: [\n            {\n                hostname: \"portal.sso.ap-northeast-2.amazonaws.com\",\n                tags: [],\n            },\n        ],\n        signingRegion: \"ap-northeast-2\",\n    },\n    \"ap-south-1\": {\n        variants: [\n            {\n                hostname: \"portal.sso.ap-south-1.amazonaws.com\",\n                tags: [],\n            },\n        ],\n        signingRegion: \"ap-south-1\",\n    },\n    \"ap-southeast-1\": {\n        variants: [\n            {\n                hostname: \"portal.sso.ap-southeast-1.amazonaws.com\",\n                tags: [],\n            },\n        ],\n        signingRegion: \"ap-southeast-1\",\n    },\n    \"ap-southeast-2\": {\n        variants: [\n            {\n                hostname: \"portal.sso.ap-southeast-2.amazonaws.com\",\n                tags: [],\n            },\n        ],\n        signingRegion: \"ap-southeast-2\",\n    },\n    \"ca-central-1\": {\n        variants: [\n            {\n                hostname: \"portal.sso.ca-central-1.amazonaws.com\",\n                tags: [],\n            },\n        ],\n        signingRegion: \"ca-central-1\",\n    },\n    \"eu-central-1\": {\n        variants: [\n            {\n                hostname: \"portal.sso.eu-central-1.amazonaws.com\",\n                tags: [],\n            },\n        ],\n        signingRegion: \"eu-central-1\",\n    },\n    \"eu-north-1\": {\n        variants: [\n            {\n                hostname: \"portal.sso.eu-north-1.amazonaws.com\",\n                tags: [],\n            },\n        ],\n        signingRegion: \"eu-north-1\",\n    },\n    \"eu-west-1\": {\n        variants: [\n            {\n                hostname: \"portal.sso.eu-west-1.amazonaws.com\",\n                tags: [],\n            },\n        ],\n        signingRegion: \"eu-west-1\",\n    },\n    \"eu-west-2\": {\n        variants: [\n            {\n                hostname: \"portal.sso.eu-west-2.amazonaws.com\",\n                tags: [],\n            },\n        ],\n        signingRegion: \"eu-west-2\",\n    },\n    \"eu-west-3\": {\n        variants: [\n            {\n                hostname: \"portal.sso.eu-west-3.amazonaws.com\",\n                tags: [],\n            },\n        ],\n        signingRegion: \"eu-west-3\",\n    },\n    \"sa-east-1\": {\n        variants: [\n            {\n                hostname: \"portal.sso.sa-east-1.amazonaws.com\",\n                tags: [],\n            },\n        ],\n        signingRegion: \"sa-east-1\",\n    },\n    \"us-east-1\": {\n        variants: [\n            {\n                hostname: \"portal.sso.us-east-1.amazonaws.com\",\n                tags: [],\n            },\n        ],\n        signingRegion: \"us-east-1\",\n    },\n    \"us-east-2\": {\n        variants: [\n            {\n                hostname: \"portal.sso.us-east-2.amazonaws.com\",\n                tags: [],\n            },\n        ],\n        signingRegion: \"us-east-2\",\n    },\n    \"us-gov-east-1\": {\n        variants: [\n            {\n                hostname: \"portal.sso.us-gov-east-1.amazonaws.com\",\n                tags: [],\n            },\n        ],\n        signingRegion: \"us-gov-east-1\",\n    },\n    \"us-gov-west-1\": {\n        variants: [\n            {\n                hostname: \"portal.sso.us-gov-west-1.amazonaws.com\",\n                tags: [],\n            },\n        ],\n        signingRegion: \"us-gov-west-1\",\n    },\n    \"us-west-2\": {\n        variants: [\n            {\n                hostname: \"portal.sso.us-west-2.amazonaws.com\",\n                tags: [],\n            },\n        ],\n        signingRegion: \"us-west-2\",\n    },\n};\nconst partitionHash = {\n    aws: {\n        regions: [\n            \"af-south-1\",\n            \"ap-east-1\",\n            \"ap-northeast-1\",\n            \"ap-northeast-2\",\n            \"ap-northeast-3\",\n            \"ap-south-1\",\n            \"ap-southeast-1\",\n            \"ap-southeast-2\",\n            \"ap-southeast-3\",\n            \"ca-central-1\",\n            \"eu-central-1\",\n            \"eu-north-1\",\n            \"eu-south-1\",\n            \"eu-west-1\",\n            \"eu-west-2\",\n            \"eu-west-3\",\n            \"me-south-1\",\n            \"sa-east-1\",\n            \"us-east-1\",\n            \"us-east-2\",\n            \"us-west-1\",\n            \"us-west-2\",\n        ],\n        regionRegex: \"^(us|eu|ap|sa|ca|me|af)\\\\-\\\\w+\\\\-\\\\d+$\",\n        variants: [\n            {\n                hostname: \"portal.sso.{region}.amazonaws.com\",\n                tags: [],\n            },\n            {\n                hostname: \"portal.sso-fips.{region}.amazonaws.com\",\n                tags: [\"fips\"],\n            },\n            {\n                hostname: \"portal.sso-fips.{region}.api.aws\",\n                tags: [\"dualstack\", \"fips\"],\n            },\n            {\n                hostname: \"portal.sso.{region}.api.aws\",\n                tags: [\"dualstack\"],\n            },\n        ],\n    },\n    \"aws-cn\": {\n        regions: [\"cn-north-1\", \"cn-northwest-1\"],\n        regionRegex: \"^cn\\\\-\\\\w+\\\\-\\\\d+$\",\n        variants: [\n            {\n                hostname: \"portal.sso.{region}.amazonaws.com.cn\",\n                tags: [],\n            },\n            {\n                hostname: \"portal.sso-fips.{region}.amazonaws.com.cn\",\n                tags: [\"fips\"],\n            },\n            {\n                hostname: \"portal.sso-fips.{region}.api.amazonwebservices.com.cn\",\n                tags: [\"dualstack\", \"fips\"],\n            },\n            {\n                hostname: \"portal.sso.{region}.api.amazonwebservices.com.cn\",\n                tags: [\"dualstack\"],\n            },\n        ],\n    },\n    \"aws-iso\": {\n        regions: [\"us-iso-east-1\", \"us-iso-west-1\"],\n        regionRegex: \"^us\\\\-iso\\\\-\\\\w+\\\\-\\\\d+$\",\n        variants: [\n            {\n                hostname: \"portal.sso.{region}.c2s.ic.gov\",\n                tags: [],\n            },\n            {\n                hostname: \"portal.sso-fips.{region}.c2s.ic.gov\",\n                tags: [\"fips\"],\n            },\n        ],\n    },\n    \"aws-iso-b\": {\n        regions: [\"us-isob-east-1\"],\n        regionRegex: \"^us\\\\-isob\\\\-\\\\w+\\\\-\\\\d+$\",\n        variants: [\n            {\n                hostname: \"portal.sso.{region}.sc2s.sgov.gov\",\n                tags: [],\n            },\n            {\n                hostname: \"portal.sso-fips.{region}.sc2s.sgov.gov\",\n                tags: [\"fips\"],\n            },\n        ],\n    },\n    \"aws-us-gov\": {\n        regions: [\"us-gov-east-1\", \"us-gov-west-1\"],\n        regionRegex: \"^us\\\\-gov\\\\-\\\\w+\\\\-\\\\d+$\",\n        variants: [\n            {\n                hostname: \"portal.sso.{region}.amazonaws.com\",\n                tags: [],\n            },\n            {\n                hostname: \"portal.sso-fips.{region}.amazonaws.com\",\n                tags: [\"fips\"],\n            },\n            {\n                hostname: \"portal.sso-fips.{region}.api.aws\",\n                tags: [\"dualstack\", \"fips\"],\n            },\n            {\n                hostname: \"portal.sso.{region}.api.aws\",\n                tags: [\"dualstack\"],\n            },\n        ],\n    },\n};\nconst defaultRegionInfoProvider = async (region, options) => config_resolver_1.getRegionInfo(region, {\n    ...options,\n    signingService: \"awsssoportal\",\n    regionHash,\n    partitionHash,\n});\nexports.defaultRegionInfoProvider = defaultRegionInfoProvider;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = require(\"tslib\");\ntslib_1.__exportStar(require(\"./SSO\"), exports);\ntslib_1.__exportStar(require(\"./SSOClient\"), exports);\ntslib_1.__exportStar(require(\"./commands\"), exports);\ntslib_1.__exportStar(require(\"./models\"), exports);\ntslib_1.__exportStar(require(\"./pagination\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = require(\"tslib\");\ntslib_1.__exportStar(require(\"./models_0\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.LogoutRequest = exports.ListAccountsResponse = exports.ListAccountsRequest = exports.ListAccountRolesResponse = exports.RoleInfo = exports.ListAccountRolesRequest = exports.GetRoleCredentialsResponse = exports.RoleCredentials = exports.GetRoleCredentialsRequest = exports.AccountInfo = void 0;\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\nvar AccountInfo;\n(function (AccountInfo) {\n    AccountInfo.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(AccountInfo = exports.AccountInfo || (exports.AccountInfo = {}));\nvar GetRoleCredentialsRequest;\n(function (GetRoleCredentialsRequest) {\n    GetRoleCredentialsRequest.filterSensitiveLog = (obj) => ({\n        ...obj,\n        ...(obj.accessToken && { accessToken: smithy_client_1.SENSITIVE_STRING }),\n    });\n})(GetRoleCredentialsRequest = exports.GetRoleCredentialsRequest || (exports.GetRoleCredentialsRequest = {}));\nvar RoleCredentials;\n(function (RoleCredentials) {\n    RoleCredentials.filterSensitiveLog = (obj) => ({\n        ...obj,\n        ...(obj.secretAccessKey && { secretAccessKey: smithy_client_1.SENSITIVE_STRING }),\n        ...(obj.sessionToken && { sessionToken: smithy_client_1.SENSITIVE_STRING }),\n    });\n})(RoleCredentials = exports.RoleCredentials || (exports.RoleCredentials = {}));\nvar GetRoleCredentialsResponse;\n(function (GetRoleCredentialsResponse) {\n    GetRoleCredentialsResponse.filterSensitiveLog = (obj) => ({\n        ...obj,\n        ...(obj.roleCredentials && { roleCredentials: RoleCredentials.filterSensitiveLog(obj.roleCredentials) }),\n    });\n})(GetRoleCredentialsResponse = exports.GetRoleCredentialsResponse || (exports.GetRoleCredentialsResponse = {}));\nvar ListAccountRolesRequest;\n(function (ListAccountRolesRequest) {\n    ListAccountRolesRequest.filterSensitiveLog = (obj) => ({\n        ...obj,\n        ...(obj.accessToken && { accessToken: smithy_client_1.SENSITIVE_STRING }),\n    });\n})(ListAccountRolesRequest = exports.ListAccountRolesRequest || (exports.ListAccountRolesRequest = {}));\nvar RoleInfo;\n(function (RoleInfo) {\n    RoleInfo.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(RoleInfo = exports.RoleInfo || (exports.RoleInfo = {}));\nvar ListAccountRolesResponse;\n(function (ListAccountRolesResponse) {\n    ListAccountRolesResponse.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(ListAccountRolesResponse = exports.ListAccountRolesResponse || (exports.ListAccountRolesResponse = {}));\nvar ListAccountsRequest;\n(function (ListAccountsRequest) {\n    ListAccountsRequest.filterSensitiveLog = (obj) => ({\n        ...obj,\n        ...(obj.accessToken && { accessToken: smithy_client_1.SENSITIVE_STRING }),\n    });\n})(ListAccountsRequest = exports.ListAccountsRequest || (exports.ListAccountsRequest = {}));\nvar ListAccountsResponse;\n(function (ListAccountsResponse) {\n    ListAccountsResponse.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(ListAccountsResponse = exports.ListAccountsResponse || (exports.ListAccountsResponse = {}));\nvar LogoutRequest;\n(function (LogoutRequest) {\n    LogoutRequest.filterSensitiveLog = (obj) => ({\n        ...obj,\n        ...(obj.accessToken && { accessToken: smithy_client_1.SENSITIVE_STRING }),\n    });\n})(LogoutRequest = exports.LogoutRequest || (exports.LogoutRequest = {}));\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.paginateListAccountRoles = void 0;\nconst ListAccountRolesCommand_1 = require(\"../commands/ListAccountRolesCommand\");\nconst SSO_1 = require(\"../SSO\");\nconst SSOClient_1 = require(\"../SSOClient\");\nconst makePagedClientRequest = async (client, input, ...args) => {\n    return await client.send(new ListAccountRolesCommand_1.ListAccountRolesCommand(input), ...args);\n};\nconst makePagedRequest = async (client, input, ...args) => {\n    return await client.listAccountRoles(input, ...args);\n};\nasync function* paginateListAccountRoles(config, input, ...additionalArguments) {\n    let token = config.startingToken || undefined;\n    let hasNext = true;\n    let page;\n    while (hasNext) {\n        input.nextToken = token;\n        input[\"maxResults\"] = config.pageSize;\n        if (config.client instanceof SSO_1.SSO) {\n            page = await makePagedRequest(config.client, input, ...additionalArguments);\n        }\n        else if (config.client instanceof SSOClient_1.SSOClient) {\n            page = await makePagedClientRequest(config.client, input, ...additionalArguments);\n        }\n        else {\n            throw new Error(\"Invalid client, expected SSO | SSOClient\");\n        }\n        yield page;\n        token = page.nextToken;\n        hasNext = !!token;\n    }\n    return undefined;\n}\nexports.paginateListAccountRoles = paginateListAccountRoles;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.paginateListAccounts = void 0;\nconst ListAccountsCommand_1 = require(\"../commands/ListAccountsCommand\");\nconst SSO_1 = require(\"../SSO\");\nconst SSOClient_1 = require(\"../SSOClient\");\nconst makePagedClientRequest = async (client, input, ...args) => {\n    return await client.send(new ListAccountsCommand_1.ListAccountsCommand(input), ...args);\n};\nconst makePagedRequest = async (client, input, ...args) => {\n    return await client.listAccounts(input, ...args);\n};\nasync function* paginateListAccounts(config, input, ...additionalArguments) {\n    let token = config.startingToken || undefined;\n    let hasNext = true;\n    let page;\n    while (hasNext) {\n        input.nextToken = token;\n        input[\"maxResults\"] = config.pageSize;\n        if (config.client instanceof SSO_1.SSO) {\n            page = await makePagedRequest(config.client, input, ...additionalArguments);\n        }\n        else if (config.client instanceof SSOClient_1.SSOClient) {\n            page = await makePagedClientRequest(config.client, input, ...additionalArguments);\n        }\n        else {\n            throw new Error(\"Invalid client, expected SSO | SSOClient\");\n        }\n        yield page;\n        token = page.nextToken;\n        hasNext = !!token;\n    }\n    return undefined;\n}\nexports.paginateListAccounts = paginateListAccounts;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = require(\"tslib\");\ntslib_1.__exportStar(require(\"./Interfaces\"), exports);\ntslib_1.__exportStar(require(\"./ListAccountRolesPaginator\"), exports);\ntslib_1.__exportStar(require(\"./ListAccountsPaginator\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.deserializeAws_restJson1LogoutCommand = exports.deserializeAws_restJson1ListAccountsCommand = exports.deserializeAws_restJson1ListAccountRolesCommand = exports.deserializeAws_restJson1GetRoleCredentialsCommand = exports.serializeAws_restJson1LogoutCommand = exports.serializeAws_restJson1ListAccountsCommand = exports.serializeAws_restJson1ListAccountRolesCommand = exports.serializeAws_restJson1GetRoleCredentialsCommand = void 0;\nconst protocol_http_1 = require(\"@aws-sdk/protocol-http\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\nconst serializeAws_restJson1GetRoleCredentialsCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = {\n        ...(isSerializableHeaderValue(input.accessToken) && { \"x-amz-sso_bearer_token\": input.accessToken }),\n    };\n    const resolvedPath = `${(basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\"}` + \"/federation/credentials\";\n    const query = {\n        ...(input.roleName !== undefined && { role_name: input.roleName }),\n        ...(input.accountId !== undefined && { account_id: input.accountId }),\n    };\n    let body;\n    return new protocol_http_1.HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"GET\",\n        headers,\n        path: resolvedPath,\n        query,\n        body,\n    });\n};\nexports.serializeAws_restJson1GetRoleCredentialsCommand = serializeAws_restJson1GetRoleCredentialsCommand;\nconst serializeAws_restJson1ListAccountRolesCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = {\n        ...(isSerializableHeaderValue(input.accessToken) && { \"x-amz-sso_bearer_token\": input.accessToken }),\n    };\n    const resolvedPath = `${(basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\"}` + \"/assignment/roles\";\n    const query = {\n        ...(input.nextToken !== undefined && { next_token: input.nextToken }),\n        ...(input.maxResults !== undefined && { max_result: input.maxResults.toString() }),\n        ...(input.accountId !== undefined && { account_id: input.accountId }),\n    };\n    let body;\n    return new protocol_http_1.HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"GET\",\n        headers,\n        path: resolvedPath,\n        query,\n        body,\n    });\n};\nexports.serializeAws_restJson1ListAccountRolesCommand = serializeAws_restJson1ListAccountRolesCommand;\nconst serializeAws_restJson1ListAccountsCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = {\n        ...(isSerializableHeaderValue(input.accessToken) && { \"x-amz-sso_bearer_token\": input.accessToken }),\n    };\n    const resolvedPath = `${(basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\"}` + \"/assignment/accounts\";\n    const query = {\n        ...(input.nextToken !== undefined && { next_token: input.nextToken }),\n        ...(input.maxResults !== undefined && { max_result: input.maxResults.toString() }),\n    };\n    let body;\n    return new protocol_http_1.HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"GET\",\n        headers,\n        path: resolvedPath,\n        query,\n        body,\n    });\n};\nexports.serializeAws_restJson1ListAccountsCommand = serializeAws_restJson1ListAccountsCommand;\nconst serializeAws_restJson1LogoutCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = {\n        ...(isSerializableHeaderValue(input.accessToken) && { \"x-amz-sso_bearer_token\": input.accessToken }),\n    };\n    const resolvedPath = `${(basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\"}` + \"/logout\";\n    let body;\n    return new protocol_http_1.HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"POST\",\n        headers,\n        path: resolvedPath,\n        body,\n    });\n};\nexports.serializeAws_restJson1LogoutCommand = serializeAws_restJson1LogoutCommand;\nconst deserializeAws_restJson1GetRoleCredentialsCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return deserializeAws_restJson1GetRoleCredentialsCommandError(output, context);\n    }\n    const contents = {\n        $metadata: deserializeMetadata(output),\n        roleCredentials: undefined,\n    };\n    const data = smithy_client_1.expectNonNull(smithy_client_1.expectObject(await parseBody(output.body, context)), \"body\");\n    if (data.roleCredentials !== undefined && data.roleCredentials !== null) {\n        contents.roleCredentials = deserializeAws_restJson1RoleCredentials(data.roleCredentials, context);\n    }\n    return Promise.resolve(contents);\n};\nexports.deserializeAws_restJson1GetRoleCredentialsCommand = deserializeAws_restJson1GetRoleCredentialsCommand;\nconst deserializeAws_restJson1GetRoleCredentialsCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseBody(output.body, context),\n    };\n    let response;\n    let errorCode = \"UnknownError\";\n    errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"InvalidRequestException\":\n        case \"com.amazonaws.sso#InvalidRequestException\":\n            response = {\n                ...(await deserializeAws_restJson1InvalidRequestExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"ResourceNotFoundException\":\n        case \"com.amazonaws.sso#ResourceNotFoundException\":\n            response = {\n                ...(await deserializeAws_restJson1ResourceNotFoundExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"TooManyRequestsException\":\n        case \"com.amazonaws.sso#TooManyRequestsException\":\n            response = {\n                ...(await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"UnauthorizedException\":\n        case \"com.amazonaws.sso#UnauthorizedException\":\n            response = {\n                ...(await deserializeAws_restJson1UnauthorizedExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        default:\n            const parsedBody = parsedOutput.body;\n            errorCode = parsedBody.code || parsedBody.Code || errorCode;\n            response = {\n                ...parsedBody,\n                name: `${errorCode}`,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output),\n            };\n    }\n    const message = response.message || response.Message || errorCode;\n    response.message = message;\n    delete response.Message;\n    return Promise.reject(Object.assign(new Error(message), response));\n};\nconst deserializeAws_restJson1ListAccountRolesCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return deserializeAws_restJson1ListAccountRolesCommandError(output, context);\n    }\n    const contents = {\n        $metadata: deserializeMetadata(output),\n        nextToken: undefined,\n        roleList: undefined,\n    };\n    const data = smithy_client_1.expectNonNull(smithy_client_1.expectObject(await parseBody(output.body, context)), \"body\");\n    if (data.nextToken !== undefined && data.nextToken !== null) {\n        contents.nextToken = smithy_client_1.expectString(data.nextToken);\n    }\n    if (data.roleList !== undefined && data.roleList !== null) {\n        contents.roleList = deserializeAws_restJson1RoleListType(data.roleList, context);\n    }\n    return Promise.resolve(contents);\n};\nexports.deserializeAws_restJson1ListAccountRolesCommand = deserializeAws_restJson1ListAccountRolesCommand;\nconst deserializeAws_restJson1ListAccountRolesCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseBody(output.body, context),\n    };\n    let response;\n    let errorCode = \"UnknownError\";\n    errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"InvalidRequestException\":\n        case \"com.amazonaws.sso#InvalidRequestException\":\n            response = {\n                ...(await deserializeAws_restJson1InvalidRequestExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"ResourceNotFoundException\":\n        case \"com.amazonaws.sso#ResourceNotFoundException\":\n            response = {\n                ...(await deserializeAws_restJson1ResourceNotFoundExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"TooManyRequestsException\":\n        case \"com.amazonaws.sso#TooManyRequestsException\":\n            response = {\n                ...(await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"UnauthorizedException\":\n        case \"com.amazonaws.sso#UnauthorizedException\":\n            response = {\n                ...(await deserializeAws_restJson1UnauthorizedExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        default:\n            const parsedBody = parsedOutput.body;\n            errorCode = parsedBody.code || parsedBody.Code || errorCode;\n            response = {\n                ...parsedBody,\n                name: `${errorCode}`,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output),\n            };\n    }\n    const message = response.message || response.Message || errorCode;\n    response.message = message;\n    delete response.Message;\n    return Promise.reject(Object.assign(new Error(message), response));\n};\nconst deserializeAws_restJson1ListAccountsCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return deserializeAws_restJson1ListAccountsCommandError(output, context);\n    }\n    const contents = {\n        $metadata: deserializeMetadata(output),\n        accountList: undefined,\n        nextToken: undefined,\n    };\n    const data = smithy_client_1.expectNonNull(smithy_client_1.expectObject(await parseBody(output.body, context)), \"body\");\n    if (data.accountList !== undefined && data.accountList !== null) {\n        contents.accountList = deserializeAws_restJson1AccountListType(data.accountList, context);\n    }\n    if (data.nextToken !== undefined && data.nextToken !== null) {\n        contents.nextToken = smithy_client_1.expectString(data.nextToken);\n    }\n    return Promise.resolve(contents);\n};\nexports.deserializeAws_restJson1ListAccountsCommand = deserializeAws_restJson1ListAccountsCommand;\nconst deserializeAws_restJson1ListAccountsCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseBody(output.body, context),\n    };\n    let response;\n    let errorCode = \"UnknownError\";\n    errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"InvalidRequestException\":\n        case \"com.amazonaws.sso#InvalidRequestException\":\n            response = {\n                ...(await deserializeAws_restJson1InvalidRequestExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"ResourceNotFoundException\":\n        case \"com.amazonaws.sso#ResourceNotFoundException\":\n            response = {\n                ...(await deserializeAws_restJson1ResourceNotFoundExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"TooManyRequestsException\":\n        case \"com.amazonaws.sso#TooManyRequestsException\":\n            response = {\n                ...(await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"UnauthorizedException\":\n        case \"com.amazonaws.sso#UnauthorizedException\":\n            response = {\n                ...(await deserializeAws_restJson1UnauthorizedExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        default:\n            const parsedBody = parsedOutput.body;\n            errorCode = parsedBody.code || parsedBody.Code || errorCode;\n            response = {\n                ...parsedBody,\n                name: `${errorCode}`,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output),\n            };\n    }\n    const message = response.message || response.Message || errorCode;\n    response.message = message;\n    delete response.Message;\n    return Promise.reject(Object.assign(new Error(message), response));\n};\nconst deserializeAws_restJson1LogoutCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return deserializeAws_restJson1LogoutCommandError(output, context);\n    }\n    const contents = {\n        $metadata: deserializeMetadata(output),\n    };\n    await collectBody(output.body, context);\n    return Promise.resolve(contents);\n};\nexports.deserializeAws_restJson1LogoutCommand = deserializeAws_restJson1LogoutCommand;\nconst deserializeAws_restJson1LogoutCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseBody(output.body, context),\n    };\n    let response;\n    let errorCode = \"UnknownError\";\n    errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"InvalidRequestException\":\n        case \"com.amazonaws.sso#InvalidRequestException\":\n            response = {\n                ...(await deserializeAws_restJson1InvalidRequestExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"TooManyRequestsException\":\n        case \"com.amazonaws.sso#TooManyRequestsException\":\n            response = {\n                ...(await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"UnauthorizedException\":\n        case \"com.amazonaws.sso#UnauthorizedException\":\n            response = {\n                ...(await deserializeAws_restJson1UnauthorizedExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        default:\n            const parsedBody = parsedOutput.body;\n            errorCode = parsedBody.code || parsedBody.Code || errorCode;\n            response = {\n                ...parsedBody,\n                name: `${errorCode}`,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output),\n            };\n    }\n    const message = response.message || response.Message || errorCode;\n    response.message = message;\n    delete response.Message;\n    return Promise.reject(Object.assign(new Error(message), response));\n};\nconst deserializeAws_restJson1InvalidRequestExceptionResponse = async (parsedOutput, context) => {\n    const contents = {\n        name: \"InvalidRequestException\",\n        $fault: \"client\",\n        $metadata: deserializeMetadata(parsedOutput),\n        message: undefined,\n    };\n    const data = parsedOutput.body;\n    if (data.message !== undefined && data.message !== null) {\n        contents.message = smithy_client_1.expectString(data.message);\n    }\n    return contents;\n};\nconst deserializeAws_restJson1ResourceNotFoundExceptionResponse = async (parsedOutput, context) => {\n    const contents = {\n        name: \"ResourceNotFoundException\",\n        $fault: \"client\",\n        $metadata: deserializeMetadata(parsedOutput),\n        message: undefined,\n    };\n    const data = parsedOutput.body;\n    if (data.message !== undefined && data.message !== null) {\n        contents.message = smithy_client_1.expectString(data.message);\n    }\n    return contents;\n};\nconst deserializeAws_restJson1TooManyRequestsExceptionResponse = async (parsedOutput, context) => {\n    const contents = {\n        name: \"TooManyRequestsException\",\n        $fault: \"client\",\n        $metadata: deserializeMetadata(parsedOutput),\n        message: undefined,\n    };\n    const data = parsedOutput.body;\n    if (data.message !== undefined && data.message !== null) {\n        contents.message = smithy_client_1.expectString(data.message);\n    }\n    return contents;\n};\nconst deserializeAws_restJson1UnauthorizedExceptionResponse = async (parsedOutput, context) => {\n    const contents = {\n        name: \"UnauthorizedException\",\n        $fault: \"client\",\n        $metadata: deserializeMetadata(parsedOutput),\n        message: undefined,\n    };\n    const data = parsedOutput.body;\n    if (data.message !== undefined && data.message !== null) {\n        contents.message = smithy_client_1.expectString(data.message);\n    }\n    return contents;\n};\nconst deserializeAws_restJson1AccountInfo = (output, context) => {\n    return {\n        accountId: smithy_client_1.expectString(output.accountId),\n        accountName: smithy_client_1.expectString(output.accountName),\n        emailAddress: smithy_client_1.expectString(output.emailAddress),\n    };\n};\nconst deserializeAws_restJson1AccountListType = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        if (entry === null) {\n            return null;\n        }\n        return deserializeAws_restJson1AccountInfo(entry, context);\n    });\n};\nconst deserializeAws_restJson1RoleCredentials = (output, context) => {\n    return {\n        accessKeyId: smithy_client_1.expectString(output.accessKeyId),\n        expiration: smithy_client_1.expectLong(output.expiration),\n        secretAccessKey: smithy_client_1.expectString(output.secretAccessKey),\n        sessionToken: smithy_client_1.expectString(output.sessionToken),\n    };\n};\nconst deserializeAws_restJson1RoleInfo = (output, context) => {\n    return {\n        accountId: smithy_client_1.expectString(output.accountId),\n        roleName: smithy_client_1.expectString(output.roleName),\n    };\n};\nconst deserializeAws_restJson1RoleListType = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        if (entry === null) {\n            return null;\n        }\n        return deserializeAws_restJson1RoleInfo(entry, context);\n    });\n};\nconst deserializeMetadata = (output) => {\n    var _a;\n    return ({\n        httpStatusCode: output.statusCode,\n        requestId: (_a = output.headers[\"x-amzn-requestid\"]) !== null && _a !== void 0 ? _a : output.headers[\"x-amzn-request-id\"],\n        extendedRequestId: output.headers[\"x-amz-id-2\"],\n        cfId: output.headers[\"x-amz-cf-id\"],\n    });\n};\nconst collectBody = (streamBody = new Uint8Array(), context) => {\n    if (streamBody instanceof Uint8Array) {\n        return Promise.resolve(streamBody);\n    }\n    return context.streamCollector(streamBody) || Promise.resolve(new Uint8Array());\n};\nconst collectBodyString = (streamBody, context) => collectBody(streamBody, context).then((body) => context.utf8Encoder(body));\nconst isSerializableHeaderValue = (value) => value !== undefined &&\n    value !== null &&\n    value !== \"\" &&\n    (!Object.getOwnPropertyNames(value).includes(\"length\") || value.length != 0) &&\n    (!Object.getOwnPropertyNames(value).includes(\"size\") || value.size != 0);\nconst parseBody = (streamBody, context) => collectBodyString(streamBody, context).then((encoded) => {\n    if (encoded.length) {\n        return JSON.parse(encoded);\n    }\n    return {};\n});\nconst loadRestJsonErrorCode = (output, data) => {\n    const findKey = (object, key) => Object.keys(object).find((k) => k.toLowerCase() === key.toLowerCase());\n    const sanitizeErrorCode = (rawValue) => {\n        let cleanValue = rawValue;\n        if (cleanValue.indexOf(\":\") >= 0) {\n            cleanValue = cleanValue.split(\":\")[0];\n        }\n        if (cleanValue.indexOf(\"#\") >= 0) {\n            cleanValue = cleanValue.split(\"#\")[1];\n        }\n        return cleanValue;\n    };\n    const headerKey = findKey(output.headers, \"x-amzn-errortype\");\n    if (headerKey !== undefined) {\n        return sanitizeErrorCode(output.headers[headerKey]);\n    }\n    if (data.code !== undefined) {\n        return sanitizeErrorCode(data.code);\n    }\n    if (data[\"__type\"] !== undefined) {\n        return sanitizeErrorCode(data[\"__type\"]);\n    }\n    return \"\";\n};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getRuntimeConfig = void 0;\nconst tslib_1 = require(\"tslib\");\nconst package_json_1 = tslib_1.__importDefault(require(\"../package.json\"));\nconst config_resolver_1 = require(\"@aws-sdk/config-resolver\");\nconst hash_node_1 = require(\"@aws-sdk/hash-node\");\nconst middleware_retry_1 = require(\"@aws-sdk/middleware-retry\");\nconst node_config_provider_1 = require(\"@aws-sdk/node-config-provider\");\nconst node_http_handler_1 = require(\"@aws-sdk/node-http-handler\");\nconst util_base64_node_1 = require(\"@aws-sdk/util-base64-node\");\nconst util_body_length_node_1 = require(\"@aws-sdk/util-body-length-node\");\nconst util_user_agent_node_1 = require(\"@aws-sdk/util-user-agent-node\");\nconst util_utf8_node_1 = require(\"@aws-sdk/util-utf8-node\");\nconst runtimeConfig_shared_1 = require(\"./runtimeConfig.shared\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\nconst util_defaults_mode_node_1 = require(\"@aws-sdk/util-defaults-mode-node\");\nconst getRuntimeConfig = (config) => {\n    var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p;\n    const defaultsMode = util_defaults_mode_node_1.resolveDefaultsModeConfig(config);\n    const defaultConfigProvider = () => defaultsMode().then(smithy_client_1.loadConfigsForDefaultMode);\n    const clientSharedValues = runtimeConfig_shared_1.getRuntimeConfig(config);\n    return {\n        ...clientSharedValues,\n        ...config,\n        runtime: \"node\",\n        defaultsMode,\n        base64Decoder: (_a = config === null || config === void 0 ? void 0 : config.base64Decoder) !== null && _a !== void 0 ? _a : util_base64_node_1.fromBase64,\n        base64Encoder: (_b = config === null || config === void 0 ? void 0 : config.base64Encoder) !== null && _b !== void 0 ? _b : util_base64_node_1.toBase64,\n        bodyLengthChecker: (_c = config === null || config === void 0 ? void 0 : config.bodyLengthChecker) !== null && _c !== void 0 ? _c : util_body_length_node_1.calculateBodyLength,\n        defaultUserAgentProvider: (_d = config === null || config === void 0 ? void 0 : config.defaultUserAgentProvider) !== null && _d !== void 0 ? _d : util_user_agent_node_1.defaultUserAgent({ serviceId: clientSharedValues.serviceId, clientVersion: package_json_1.default.version }),\n        maxAttempts: (_e = config === null || config === void 0 ? void 0 : config.maxAttempts) !== null && _e !== void 0 ? _e : node_config_provider_1.loadConfig(middleware_retry_1.NODE_MAX_ATTEMPT_CONFIG_OPTIONS),\n        region: (_f = config === null || config === void 0 ? void 0 : config.region) !== null && _f !== void 0 ? _f : node_config_provider_1.loadConfig(config_resolver_1.NODE_REGION_CONFIG_OPTIONS, config_resolver_1.NODE_REGION_CONFIG_FILE_OPTIONS),\n        requestHandler: (_g = config === null || config === void 0 ? void 0 : config.requestHandler) !== null && _g !== void 0 ? _g : new node_http_handler_1.NodeHttpHandler(defaultConfigProvider),\n        retryMode: (_h = config === null || config === void 0 ? void 0 : config.retryMode) !== null && _h !== void 0 ? _h : node_config_provider_1.loadConfig({\n            ...middleware_retry_1.NODE_RETRY_MODE_CONFIG_OPTIONS,\n            default: async () => (await defaultConfigProvider()).retryMode || middleware_retry_1.DEFAULT_RETRY_MODE,\n        }),\n        sha256: (_j = config === null || config === void 0 ? void 0 : config.sha256) !== null && _j !== void 0 ? _j : hash_node_1.Hash.bind(null, \"sha256\"),\n        streamCollector: (_k = config === null || config === void 0 ? void 0 : config.streamCollector) !== null && _k !== void 0 ? _k : node_http_handler_1.streamCollector,\n        useDualstackEndpoint: (_l = config === null || config === void 0 ? void 0 : config.useDualstackEndpoint) !== null && _l !== void 0 ? _l : node_config_provider_1.loadConfig(config_resolver_1.NODE_USE_DUALSTACK_ENDPOINT_CONFIG_OPTIONS),\n        useFipsEndpoint: (_m = config === null || config === void 0 ? void 0 : config.useFipsEndpoint) !== null && _m !== void 0 ? _m : node_config_provider_1.loadConfig(config_resolver_1.NODE_USE_FIPS_ENDPOINT_CONFIG_OPTIONS),\n        utf8Decoder: (_o = config === null || config === void 0 ? void 0 : config.utf8Decoder) !== null && _o !== void 0 ? _o : util_utf8_node_1.fromUtf8,\n        utf8Encoder: (_p = config === null || config === void 0 ? void 0 : config.utf8Encoder) !== null && _p !== void 0 ? _p : util_utf8_node_1.toUtf8,\n    };\n};\nexports.getRuntimeConfig = getRuntimeConfig;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getRuntimeConfig = void 0;\nconst url_parser_1 = require(\"@aws-sdk/url-parser\");\nconst endpoints_1 = require(\"./endpoints\");\nconst getRuntimeConfig = (config) => {\n    var _a, _b, _c, _d, _e;\n    return ({\n        apiVersion: \"2019-06-10\",\n        disableHostPrefix: (_a = config === null || config === void 0 ? void 0 : config.disableHostPrefix) !== null && _a !== void 0 ? _a : false,\n        logger: (_b = config === null || config === void 0 ? void 0 : config.logger) !== null && _b !== void 0 ? _b : {},\n        regionInfoProvider: (_c = config === null || config === void 0 ? void 0 : config.regionInfoProvider) !== null && _c !== void 0 ? _c : endpoints_1.defaultRegionInfoProvider,\n        serviceId: (_d = config === null || config === void 0 ? void 0 : config.serviceId) !== null && _d !== void 0 ? _d : \"SSO\",\n        urlParser: (_e = config === null || config === void 0 ? void 0 : config.urlParser) !== null && _e !== void 0 ? _e : url_parser_1.parseUrl,\n    });\n};\nexports.getRuntimeConfig = getRuntimeConfig;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.STS = void 0;\nconst AssumeRoleCommand_1 = require(\"./commands/AssumeRoleCommand\");\nconst AssumeRoleWithSAMLCommand_1 = require(\"./commands/AssumeRoleWithSAMLCommand\");\nconst AssumeRoleWithWebIdentityCommand_1 = require(\"./commands/AssumeRoleWithWebIdentityCommand\");\nconst DecodeAuthorizationMessageCommand_1 = require(\"./commands/DecodeAuthorizationMessageCommand\");\nconst GetAccessKeyInfoCommand_1 = require(\"./commands/GetAccessKeyInfoCommand\");\nconst GetCallerIdentityCommand_1 = require(\"./commands/GetCallerIdentityCommand\");\nconst GetFederationTokenCommand_1 = require(\"./commands/GetFederationTokenCommand\");\nconst GetSessionTokenCommand_1 = require(\"./commands/GetSessionTokenCommand\");\nconst STSClient_1 = require(\"./STSClient\");\nclass STS extends STSClient_1.STSClient {\n    assumeRole(args, optionsOrCb, cb) {\n        const command = new AssumeRoleCommand_1.AssumeRoleCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    assumeRoleWithSAML(args, optionsOrCb, cb) {\n        const command = new AssumeRoleWithSAMLCommand_1.AssumeRoleWithSAMLCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    assumeRoleWithWebIdentity(args, optionsOrCb, cb) {\n        const command = new AssumeRoleWithWebIdentityCommand_1.AssumeRoleWithWebIdentityCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    decodeAuthorizationMessage(args, optionsOrCb, cb) {\n        const command = new DecodeAuthorizationMessageCommand_1.DecodeAuthorizationMessageCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    getAccessKeyInfo(args, optionsOrCb, cb) {\n        const command = new GetAccessKeyInfoCommand_1.GetAccessKeyInfoCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    getCallerIdentity(args, optionsOrCb, cb) {\n        const command = new GetCallerIdentityCommand_1.GetCallerIdentityCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    getFederationToken(args, optionsOrCb, cb) {\n        const command = new GetFederationTokenCommand_1.GetFederationTokenCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    getSessionToken(args, optionsOrCb, cb) {\n        const command = new GetSessionTokenCommand_1.GetSessionTokenCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n}\nexports.STS = STS;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.STSClient = void 0;\nconst config_resolver_1 = require(\"@aws-sdk/config-resolver\");\nconst middleware_content_length_1 = require(\"@aws-sdk/middleware-content-length\");\nconst middleware_host_header_1 = require(\"@aws-sdk/middleware-host-header\");\nconst middleware_logger_1 = require(\"@aws-sdk/middleware-logger\");\nconst middleware_retry_1 = require(\"@aws-sdk/middleware-retry\");\nconst middleware_sdk_sts_1 = require(\"@aws-sdk/middleware-sdk-sts\");\nconst middleware_user_agent_1 = require(\"@aws-sdk/middleware-user-agent\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\nconst runtimeConfig_1 = require(\"./runtimeConfig\");\nclass STSClient extends smithy_client_1.Client {\n    constructor(configuration) {\n        const _config_0 = runtimeConfig_1.getRuntimeConfig(configuration);\n        const _config_1 = config_resolver_1.resolveRegionConfig(_config_0);\n        const _config_2 = config_resolver_1.resolveEndpointsConfig(_config_1);\n        const _config_3 = middleware_retry_1.resolveRetryConfig(_config_2);\n        const _config_4 = middleware_host_header_1.resolveHostHeaderConfig(_config_3);\n        const _config_5 = middleware_sdk_sts_1.resolveStsAuthConfig(_config_4, { stsClientCtor: STSClient });\n        const _config_6 = middleware_user_agent_1.resolveUserAgentConfig(_config_5);\n        super(_config_6);\n        this.config = _config_6;\n        this.middlewareStack.use(middleware_retry_1.getRetryPlugin(this.config));\n        this.middlewareStack.use(middleware_content_length_1.getContentLengthPlugin(this.config));\n        this.middlewareStack.use(middleware_host_header_1.getHostHeaderPlugin(this.config));\n        this.middlewareStack.use(middleware_logger_1.getLoggerPlugin(this.config));\n        this.middlewareStack.use(middleware_user_agent_1.getUserAgentPlugin(this.config));\n    }\n    destroy() {\n        super.destroy();\n    }\n}\nexports.STSClient = STSClient;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AssumeRoleCommand = void 0;\nconst middleware_serde_1 = require(\"@aws-sdk/middleware-serde\");\nconst middleware_signing_1 = require(\"@aws-sdk/middleware-signing\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\nconst models_0_1 = require(\"../models/models_0\");\nconst Aws_query_1 = require(\"../protocols/Aws_query\");\nclass AssumeRoleCommand extends smithy_client_1.Command {\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use(middleware_serde_1.getSerdePlugin(configuration, this.serialize, this.deserialize));\n        this.middlewareStack.use(middleware_signing_1.getAwsAuthPlugin(configuration));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"STSClient\";\n        const commandName = \"AssumeRoleCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: models_0_1.AssumeRoleRequest.filterSensitiveLog,\n            outputFilterSensitiveLog: models_0_1.AssumeRoleResponse.filterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return Aws_query_1.serializeAws_queryAssumeRoleCommand(input, context);\n    }\n    deserialize(output, context) {\n        return Aws_query_1.deserializeAws_queryAssumeRoleCommand(output, context);\n    }\n}\nexports.AssumeRoleCommand = AssumeRoleCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AssumeRoleWithSAMLCommand = void 0;\nconst middleware_serde_1 = require(\"@aws-sdk/middleware-serde\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\nconst models_0_1 = require(\"../models/models_0\");\nconst Aws_query_1 = require(\"../protocols/Aws_query\");\nclass AssumeRoleWithSAMLCommand extends smithy_client_1.Command {\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use(middleware_serde_1.getSerdePlugin(configuration, this.serialize, this.deserialize));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"STSClient\";\n        const commandName = \"AssumeRoleWithSAMLCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: models_0_1.AssumeRoleWithSAMLRequest.filterSensitiveLog,\n            outputFilterSensitiveLog: models_0_1.AssumeRoleWithSAMLResponse.filterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return Aws_query_1.serializeAws_queryAssumeRoleWithSAMLCommand(input, context);\n    }\n    deserialize(output, context) {\n        return Aws_query_1.deserializeAws_queryAssumeRoleWithSAMLCommand(output, context);\n    }\n}\nexports.AssumeRoleWithSAMLCommand = AssumeRoleWithSAMLCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AssumeRoleWithWebIdentityCommand = void 0;\nconst middleware_serde_1 = require(\"@aws-sdk/middleware-serde\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\nconst models_0_1 = require(\"../models/models_0\");\nconst Aws_query_1 = require(\"../protocols/Aws_query\");\nclass AssumeRoleWithWebIdentityCommand extends smithy_client_1.Command {\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use(middleware_serde_1.getSerdePlugin(configuration, this.serialize, this.deserialize));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"STSClient\";\n        const commandName = \"AssumeRoleWithWebIdentityCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: models_0_1.AssumeRoleWithWebIdentityRequest.filterSensitiveLog,\n            outputFilterSensitiveLog: models_0_1.AssumeRoleWithWebIdentityResponse.filterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return Aws_query_1.serializeAws_queryAssumeRoleWithWebIdentityCommand(input, context);\n    }\n    deserialize(output, context) {\n        return Aws_query_1.deserializeAws_queryAssumeRoleWithWebIdentityCommand(output, context);\n    }\n}\nexports.AssumeRoleWithWebIdentityCommand = AssumeRoleWithWebIdentityCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DecodeAuthorizationMessageCommand = void 0;\nconst middleware_serde_1 = require(\"@aws-sdk/middleware-serde\");\nconst middleware_signing_1 = require(\"@aws-sdk/middleware-signing\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\nconst models_0_1 = require(\"../models/models_0\");\nconst Aws_query_1 = require(\"../protocols/Aws_query\");\nclass DecodeAuthorizationMessageCommand extends smithy_client_1.Command {\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use(middleware_serde_1.getSerdePlugin(configuration, this.serialize, this.deserialize));\n        this.middlewareStack.use(middleware_signing_1.getAwsAuthPlugin(configuration));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"STSClient\";\n        const commandName = \"DecodeAuthorizationMessageCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: models_0_1.DecodeAuthorizationMessageRequest.filterSensitiveLog,\n            outputFilterSensitiveLog: models_0_1.DecodeAuthorizationMessageResponse.filterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return Aws_query_1.serializeAws_queryDecodeAuthorizationMessageCommand(input, context);\n    }\n    deserialize(output, context) {\n        return Aws_query_1.deserializeAws_queryDecodeAuthorizationMessageCommand(output, context);\n    }\n}\nexports.DecodeAuthorizationMessageCommand = DecodeAuthorizationMessageCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.GetAccessKeyInfoCommand = void 0;\nconst middleware_serde_1 = require(\"@aws-sdk/middleware-serde\");\nconst middleware_signing_1 = require(\"@aws-sdk/middleware-signing\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\nconst models_0_1 = require(\"../models/models_0\");\nconst Aws_query_1 = require(\"../protocols/Aws_query\");\nclass GetAccessKeyInfoCommand extends smithy_client_1.Command {\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use(middleware_serde_1.getSerdePlugin(configuration, this.serialize, this.deserialize));\n        this.middlewareStack.use(middleware_signing_1.getAwsAuthPlugin(configuration));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"STSClient\";\n        const commandName = \"GetAccessKeyInfoCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: models_0_1.GetAccessKeyInfoRequest.filterSensitiveLog,\n            outputFilterSensitiveLog: models_0_1.GetAccessKeyInfoResponse.filterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return Aws_query_1.serializeAws_queryGetAccessKeyInfoCommand(input, context);\n    }\n    deserialize(output, context) {\n        return Aws_query_1.deserializeAws_queryGetAccessKeyInfoCommand(output, context);\n    }\n}\nexports.GetAccessKeyInfoCommand = GetAccessKeyInfoCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.GetCallerIdentityCommand = void 0;\nconst middleware_serde_1 = require(\"@aws-sdk/middleware-serde\");\nconst middleware_signing_1 = require(\"@aws-sdk/middleware-signing\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\nconst models_0_1 = require(\"../models/models_0\");\nconst Aws_query_1 = require(\"../protocols/Aws_query\");\nclass GetCallerIdentityCommand extends smithy_client_1.Command {\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use(middleware_serde_1.getSerdePlugin(configuration, this.serialize, this.deserialize));\n        this.middlewareStack.use(middleware_signing_1.getAwsAuthPlugin(configuration));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"STSClient\";\n        const commandName = \"GetCallerIdentityCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: models_0_1.GetCallerIdentityRequest.filterSensitiveLog,\n            outputFilterSensitiveLog: models_0_1.GetCallerIdentityResponse.filterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return Aws_query_1.serializeAws_queryGetCallerIdentityCommand(input, context);\n    }\n    deserialize(output, context) {\n        return Aws_query_1.deserializeAws_queryGetCallerIdentityCommand(output, context);\n    }\n}\nexports.GetCallerIdentityCommand = GetCallerIdentityCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.GetFederationTokenCommand = void 0;\nconst middleware_serde_1 = require(\"@aws-sdk/middleware-serde\");\nconst middleware_signing_1 = require(\"@aws-sdk/middleware-signing\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\nconst models_0_1 = require(\"../models/models_0\");\nconst Aws_query_1 = require(\"../protocols/Aws_query\");\nclass GetFederationTokenCommand extends smithy_client_1.Command {\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use(middleware_serde_1.getSerdePlugin(configuration, this.serialize, this.deserialize));\n        this.middlewareStack.use(middleware_signing_1.getAwsAuthPlugin(configuration));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"STSClient\";\n        const commandName = \"GetFederationTokenCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: models_0_1.GetFederationTokenRequest.filterSensitiveLog,\n            outputFilterSensitiveLog: models_0_1.GetFederationTokenResponse.filterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return Aws_query_1.serializeAws_queryGetFederationTokenCommand(input, context);\n    }\n    deserialize(output, context) {\n        return Aws_query_1.deserializeAws_queryGetFederationTokenCommand(output, context);\n    }\n}\nexports.GetFederationTokenCommand = GetFederationTokenCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.GetSessionTokenCommand = void 0;\nconst middleware_serde_1 = require(\"@aws-sdk/middleware-serde\");\nconst middleware_signing_1 = require(\"@aws-sdk/middleware-signing\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\nconst models_0_1 = require(\"../models/models_0\");\nconst Aws_query_1 = require(\"../protocols/Aws_query\");\nclass GetSessionTokenCommand extends smithy_client_1.Command {\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use(middleware_serde_1.getSerdePlugin(configuration, this.serialize, this.deserialize));\n        this.middlewareStack.use(middleware_signing_1.getAwsAuthPlugin(configuration));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"STSClient\";\n        const commandName = \"GetSessionTokenCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: models_0_1.GetSessionTokenRequest.filterSensitiveLog,\n            outputFilterSensitiveLog: models_0_1.GetSessionTokenResponse.filterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return Aws_query_1.serializeAws_queryGetSessionTokenCommand(input, context);\n    }\n    deserialize(output, context) {\n        return Aws_query_1.deserializeAws_queryGetSessionTokenCommand(output, context);\n    }\n}\nexports.GetSessionTokenCommand = GetSessionTokenCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = require(\"tslib\");\ntslib_1.__exportStar(require(\"./AssumeRoleCommand\"), exports);\ntslib_1.__exportStar(require(\"./AssumeRoleWithSAMLCommand\"), exports);\ntslib_1.__exportStar(require(\"./AssumeRoleWithWebIdentityCommand\"), exports);\ntslib_1.__exportStar(require(\"./DecodeAuthorizationMessageCommand\"), exports);\ntslib_1.__exportStar(require(\"./GetAccessKeyInfoCommand\"), exports);\ntslib_1.__exportStar(require(\"./GetCallerIdentityCommand\"), exports);\ntslib_1.__exportStar(require(\"./GetFederationTokenCommand\"), exports);\ntslib_1.__exportStar(require(\"./GetSessionTokenCommand\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.decorateDefaultCredentialProvider = exports.getDefaultRoleAssumerWithWebIdentity = exports.getDefaultRoleAssumer = void 0;\nconst defaultStsRoleAssumers_1 = require(\"./defaultStsRoleAssumers\");\nconst STSClient_1 = require(\"./STSClient\");\nconst getDefaultRoleAssumer = (stsOptions = {}) => defaultStsRoleAssumers_1.getDefaultRoleAssumer(stsOptions, STSClient_1.STSClient);\nexports.getDefaultRoleAssumer = getDefaultRoleAssumer;\nconst getDefaultRoleAssumerWithWebIdentity = (stsOptions = {}) => defaultStsRoleAssumers_1.getDefaultRoleAssumerWithWebIdentity(stsOptions, STSClient_1.STSClient);\nexports.getDefaultRoleAssumerWithWebIdentity = getDefaultRoleAssumerWithWebIdentity;\nconst decorateDefaultCredentialProvider = (provider) => (input) => provider({\n    roleAssumer: exports.getDefaultRoleAssumer(input),\n    roleAssumerWithWebIdentity: exports.getDefaultRoleAssumerWithWebIdentity(input),\n    ...input,\n});\nexports.decorateDefaultCredentialProvider = decorateDefaultCredentialProvider;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.decorateDefaultCredentialProvider = exports.getDefaultRoleAssumerWithWebIdentity = exports.getDefaultRoleAssumer = void 0;\nconst AssumeRoleCommand_1 = require(\"./commands/AssumeRoleCommand\");\nconst AssumeRoleWithWebIdentityCommand_1 = require(\"./commands/AssumeRoleWithWebIdentityCommand\");\nconst ASSUME_ROLE_DEFAULT_REGION = \"us-east-1\";\nconst decorateDefaultRegion = (region) => {\n    if (typeof region !== \"function\") {\n        return region === undefined ? ASSUME_ROLE_DEFAULT_REGION : region;\n    }\n    return async () => {\n        try {\n            return await region();\n        }\n        catch (e) {\n            return ASSUME_ROLE_DEFAULT_REGION;\n        }\n    };\n};\nconst getDefaultRoleAssumer = (stsOptions, stsClientCtor) => {\n    let stsClient;\n    let closureSourceCreds;\n    return async (sourceCreds, params) => {\n        closureSourceCreds = sourceCreds;\n        if (!stsClient) {\n            const { logger, region, requestHandler } = stsOptions;\n            stsClient = new stsClientCtor({\n                logger,\n                credentialDefaultProvider: () => async () => closureSourceCreds,\n                region: decorateDefaultRegion(region || stsOptions.region),\n                ...(requestHandler ? { requestHandler } : {}),\n            });\n        }\n        const { Credentials } = await stsClient.send(new AssumeRoleCommand_1.AssumeRoleCommand(params));\n        if (!Credentials || !Credentials.AccessKeyId || !Credentials.SecretAccessKey) {\n            throw new Error(`Invalid response from STS.assumeRole call with role ${params.RoleArn}`);\n        }\n        return {\n            accessKeyId: Credentials.AccessKeyId,\n            secretAccessKey: Credentials.SecretAccessKey,\n            sessionToken: Credentials.SessionToken,\n            expiration: Credentials.Expiration,\n        };\n    };\n};\nexports.getDefaultRoleAssumer = getDefaultRoleAssumer;\nconst getDefaultRoleAssumerWithWebIdentity = (stsOptions, stsClientCtor) => {\n    let stsClient;\n    return async (params) => {\n        if (!stsClient) {\n            const { logger, region, requestHandler } = stsOptions;\n            stsClient = new stsClientCtor({\n                logger,\n                region: decorateDefaultRegion(region || stsOptions.region),\n                ...(requestHandler ? { requestHandler } : {}),\n            });\n        }\n        const { Credentials } = await stsClient.send(new AssumeRoleWithWebIdentityCommand_1.AssumeRoleWithWebIdentityCommand(params));\n        if (!Credentials || !Credentials.AccessKeyId || !Credentials.SecretAccessKey) {\n            throw new Error(`Invalid response from STS.assumeRoleWithWebIdentity call with role ${params.RoleArn}`);\n        }\n        return {\n            accessKeyId: Credentials.AccessKeyId,\n            secretAccessKey: Credentials.SecretAccessKey,\n            sessionToken: Credentials.SessionToken,\n            expiration: Credentials.Expiration,\n        };\n    };\n};\nexports.getDefaultRoleAssumerWithWebIdentity = getDefaultRoleAssumerWithWebIdentity;\nconst decorateDefaultCredentialProvider = (provider) => (input) => provider({\n    roleAssumer: exports.getDefaultRoleAssumer(input, input.stsClientCtor),\n    roleAssumerWithWebIdentity: exports.getDefaultRoleAssumerWithWebIdentity(input, input.stsClientCtor),\n    ...input,\n});\nexports.decorateDefaultCredentialProvider = decorateDefaultCredentialProvider;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.defaultRegionInfoProvider = void 0;\nconst config_resolver_1 = require(\"@aws-sdk/config-resolver\");\nconst regionHash = {\n    \"aws-global\": {\n        variants: [\n            {\n                hostname: \"sts.amazonaws.com\",\n                tags: [],\n            },\n        ],\n        signingRegion: \"us-east-1\",\n    },\n    \"us-east-1\": {\n        variants: [\n            {\n                hostname: \"sts-fips.us-east-1.amazonaws.com\",\n                tags: [\"fips\"],\n            },\n        ],\n    },\n    \"us-east-2\": {\n        variants: [\n            {\n                hostname: \"sts-fips.us-east-2.amazonaws.com\",\n                tags: [\"fips\"],\n            },\n        ],\n    },\n    \"us-gov-east-1\": {\n        variants: [\n            {\n                hostname: \"sts.us-gov-east-1.amazonaws.com\",\n                tags: [\"fips\"],\n            },\n        ],\n    },\n    \"us-gov-west-1\": {\n        variants: [\n            {\n                hostname: \"sts.us-gov-west-1.amazonaws.com\",\n                tags: [\"fips\"],\n            },\n        ],\n    },\n    \"us-west-1\": {\n        variants: [\n            {\n                hostname: \"sts-fips.us-west-1.amazonaws.com\",\n                tags: [\"fips\"],\n            },\n        ],\n    },\n    \"us-west-2\": {\n        variants: [\n            {\n                hostname: \"sts-fips.us-west-2.amazonaws.com\",\n                tags: [\"fips\"],\n            },\n        ],\n    },\n};\nconst partitionHash = {\n    aws: {\n        regions: [\n            \"af-south-1\",\n            \"ap-east-1\",\n            \"ap-northeast-1\",\n            \"ap-northeast-2\",\n            \"ap-northeast-3\",\n            \"ap-south-1\",\n            \"ap-southeast-1\",\n            \"ap-southeast-2\",\n            \"ap-southeast-3\",\n            \"aws-global\",\n            \"ca-central-1\",\n            \"eu-central-1\",\n            \"eu-north-1\",\n            \"eu-south-1\",\n            \"eu-west-1\",\n            \"eu-west-2\",\n            \"eu-west-3\",\n            \"me-south-1\",\n            \"sa-east-1\",\n            \"us-east-1\",\n            \"us-east-1-fips\",\n            \"us-east-2\",\n            \"us-east-2-fips\",\n            \"us-west-1\",\n            \"us-west-1-fips\",\n            \"us-west-2\",\n            \"us-west-2-fips\",\n        ],\n        regionRegex: \"^(us|eu|ap|sa|ca|me|af)\\\\-\\\\w+\\\\-\\\\d+$\",\n        variants: [\n            {\n                hostname: \"sts.{region}.amazonaws.com\",\n                tags: [],\n            },\n            {\n                hostname: \"sts-fips.{region}.amazonaws.com\",\n                tags: [\"fips\"],\n            },\n            {\n                hostname: \"sts-fips.{region}.api.aws\",\n                tags: [\"dualstack\", \"fips\"],\n            },\n            {\n                hostname: \"sts.{region}.api.aws\",\n                tags: [\"dualstack\"],\n            },\n        ],\n    },\n    \"aws-cn\": {\n        regions: [\"cn-north-1\", \"cn-northwest-1\"],\n        regionRegex: \"^cn\\\\-\\\\w+\\\\-\\\\d+$\",\n        variants: [\n            {\n                hostname: \"sts.{region}.amazonaws.com.cn\",\n                tags: [],\n            },\n            {\n                hostname: \"sts-fips.{region}.amazonaws.com.cn\",\n                tags: [\"fips\"],\n            },\n            {\n                hostname: \"sts-fips.{region}.api.amazonwebservices.com.cn\",\n                tags: [\"dualstack\", \"fips\"],\n            },\n            {\n                hostname: \"sts.{region}.api.amazonwebservices.com.cn\",\n                tags: [\"dualstack\"],\n            },\n        ],\n    },\n    \"aws-iso\": {\n        regions: [\"us-iso-east-1\", \"us-iso-west-1\"],\n        regionRegex: \"^us\\\\-iso\\\\-\\\\w+\\\\-\\\\d+$\",\n        variants: [\n            {\n                hostname: \"sts.{region}.c2s.ic.gov\",\n                tags: [],\n            },\n            {\n                hostname: \"sts-fips.{region}.c2s.ic.gov\",\n                tags: [\"fips\"],\n            },\n        ],\n    },\n    \"aws-iso-b\": {\n        regions: [\"us-isob-east-1\"],\n        regionRegex: \"^us\\\\-isob\\\\-\\\\w+\\\\-\\\\d+$\",\n        variants: [\n            {\n                hostname: \"sts.{region}.sc2s.sgov.gov\",\n                tags: [],\n            },\n            {\n                hostname: \"sts-fips.{region}.sc2s.sgov.gov\",\n                tags: [\"fips\"],\n            },\n        ],\n    },\n    \"aws-us-gov\": {\n        regions: [\"us-gov-east-1\", \"us-gov-east-1-fips\", \"us-gov-west-1\", \"us-gov-west-1-fips\"],\n        regionRegex: \"^us\\\\-gov\\\\-\\\\w+\\\\-\\\\d+$\",\n        variants: [\n            {\n                hostname: \"sts.{region}.amazonaws.com\",\n                tags: [],\n            },\n            {\n                hostname: \"sts.{region}.amazonaws.com\",\n                tags: [\"fips\"],\n            },\n            {\n                hostname: \"sts-fips.{region}.api.aws\",\n                tags: [\"dualstack\", \"fips\"],\n            },\n            {\n                hostname: \"sts.{region}.api.aws\",\n                tags: [\"dualstack\"],\n            },\n        ],\n    },\n};\nconst defaultRegionInfoProvider = async (region, options) => config_resolver_1.getRegionInfo(region, {\n    ...options,\n    signingService: \"sts\",\n    regionHash,\n    partitionHash,\n});\nexports.defaultRegionInfoProvider = defaultRegionInfoProvider;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = require(\"tslib\");\ntslib_1.__exportStar(require(\"./STS\"), exports);\ntslib_1.__exportStar(require(\"./STSClient\"), exports);\ntslib_1.__exportStar(require(\"./commands\"), exports);\ntslib_1.__exportStar(require(\"./defaultRoleAssumers\"), exports);\ntslib_1.__exportStar(require(\"./models\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = require(\"tslib\");\ntslib_1.__exportStar(require(\"./models_0\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.GetSessionTokenResponse = exports.GetSessionTokenRequest = exports.GetFederationTokenResponse = exports.FederatedUser = exports.GetFederationTokenRequest = exports.GetCallerIdentityResponse = exports.GetCallerIdentityRequest = exports.GetAccessKeyInfoResponse = exports.GetAccessKeyInfoRequest = exports.DecodeAuthorizationMessageResponse = exports.DecodeAuthorizationMessageRequest = exports.AssumeRoleWithWebIdentityResponse = exports.AssumeRoleWithWebIdentityRequest = exports.AssumeRoleWithSAMLResponse = exports.AssumeRoleWithSAMLRequest = exports.AssumeRoleResponse = exports.Credentials = exports.AssumeRoleRequest = exports.Tag = exports.PolicyDescriptorType = exports.AssumedRoleUser = void 0;\nvar AssumedRoleUser;\n(function (AssumedRoleUser) {\n    AssumedRoleUser.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(AssumedRoleUser = exports.AssumedRoleUser || (exports.AssumedRoleUser = {}));\nvar PolicyDescriptorType;\n(function (PolicyDescriptorType) {\n    PolicyDescriptorType.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(PolicyDescriptorType = exports.PolicyDescriptorType || (exports.PolicyDescriptorType = {}));\nvar Tag;\n(function (Tag) {\n    Tag.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(Tag = exports.Tag || (exports.Tag = {}));\nvar AssumeRoleRequest;\n(function (AssumeRoleRequest) {\n    AssumeRoleRequest.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(AssumeRoleRequest = exports.AssumeRoleRequest || (exports.AssumeRoleRequest = {}));\nvar Credentials;\n(function (Credentials) {\n    Credentials.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(Credentials = exports.Credentials || (exports.Credentials = {}));\nvar AssumeRoleResponse;\n(function (AssumeRoleResponse) {\n    AssumeRoleResponse.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(AssumeRoleResponse = exports.AssumeRoleResponse || (exports.AssumeRoleResponse = {}));\nvar AssumeRoleWithSAMLRequest;\n(function (AssumeRoleWithSAMLRequest) {\n    AssumeRoleWithSAMLRequest.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(AssumeRoleWithSAMLRequest = exports.AssumeRoleWithSAMLRequest || (exports.AssumeRoleWithSAMLRequest = {}));\nvar AssumeRoleWithSAMLResponse;\n(function (AssumeRoleWithSAMLResponse) {\n    AssumeRoleWithSAMLResponse.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(AssumeRoleWithSAMLResponse = exports.AssumeRoleWithSAMLResponse || (exports.AssumeRoleWithSAMLResponse = {}));\nvar AssumeRoleWithWebIdentityRequest;\n(function (AssumeRoleWithWebIdentityRequest) {\n    AssumeRoleWithWebIdentityRequest.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(AssumeRoleWithWebIdentityRequest = exports.AssumeRoleWithWebIdentityRequest || (exports.AssumeRoleWithWebIdentityRequest = {}));\nvar AssumeRoleWithWebIdentityResponse;\n(function (AssumeRoleWithWebIdentityResponse) {\n    AssumeRoleWithWebIdentityResponse.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(AssumeRoleWithWebIdentityResponse = exports.AssumeRoleWithWebIdentityResponse || (exports.AssumeRoleWithWebIdentityResponse = {}));\nvar DecodeAuthorizationMessageRequest;\n(function (DecodeAuthorizationMessageRequest) {\n    DecodeAuthorizationMessageRequest.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(DecodeAuthorizationMessageRequest = exports.DecodeAuthorizationMessageRequest || (exports.DecodeAuthorizationMessageRequest = {}));\nvar DecodeAuthorizationMessageResponse;\n(function (DecodeAuthorizationMessageResponse) {\n    DecodeAuthorizationMessageResponse.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(DecodeAuthorizationMessageResponse = exports.DecodeAuthorizationMessageResponse || (exports.DecodeAuthorizationMessageResponse = {}));\nvar GetAccessKeyInfoRequest;\n(function (GetAccessKeyInfoRequest) {\n    GetAccessKeyInfoRequest.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(GetAccessKeyInfoRequest = exports.GetAccessKeyInfoRequest || (exports.GetAccessKeyInfoRequest = {}));\nvar GetAccessKeyInfoResponse;\n(function (GetAccessKeyInfoResponse) {\n    GetAccessKeyInfoResponse.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(GetAccessKeyInfoResponse = exports.GetAccessKeyInfoResponse || (exports.GetAccessKeyInfoResponse = {}));\nvar GetCallerIdentityRequest;\n(function (GetCallerIdentityRequest) {\n    GetCallerIdentityRequest.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(GetCallerIdentityRequest = exports.GetCallerIdentityRequest || (exports.GetCallerIdentityRequest = {}));\nvar GetCallerIdentityResponse;\n(function (GetCallerIdentityResponse) {\n    GetCallerIdentityResponse.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(GetCallerIdentityResponse = exports.GetCallerIdentityResponse || (exports.GetCallerIdentityResponse = {}));\nvar GetFederationTokenRequest;\n(function (GetFederationTokenRequest) {\n    GetFederationTokenRequest.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(GetFederationTokenRequest = exports.GetFederationTokenRequest || (exports.GetFederationTokenRequest = {}));\nvar FederatedUser;\n(function (FederatedUser) {\n    FederatedUser.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(FederatedUser = exports.FederatedUser || (exports.FederatedUser = {}));\nvar GetFederationTokenResponse;\n(function (GetFederationTokenResponse) {\n    GetFederationTokenResponse.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(GetFederationTokenResponse = exports.GetFederationTokenResponse || (exports.GetFederationTokenResponse = {}));\nvar GetSessionTokenRequest;\n(function (GetSessionTokenRequest) {\n    GetSessionTokenRequest.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(GetSessionTokenRequest = exports.GetSessionTokenRequest || (exports.GetSessionTokenRequest = {}));\nvar GetSessionTokenResponse;\n(function (GetSessionTokenResponse) {\n    GetSessionTokenResponse.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(GetSessionTokenResponse = exports.GetSessionTokenResponse || (exports.GetSessionTokenResponse = {}));\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.deserializeAws_queryGetSessionTokenCommand = exports.deserializeAws_queryGetFederationTokenCommand = exports.deserializeAws_queryGetCallerIdentityCommand = exports.deserializeAws_queryGetAccessKeyInfoCommand = exports.deserializeAws_queryDecodeAuthorizationMessageCommand = exports.deserializeAws_queryAssumeRoleWithWebIdentityCommand = exports.deserializeAws_queryAssumeRoleWithSAMLCommand = exports.deserializeAws_queryAssumeRoleCommand = exports.serializeAws_queryGetSessionTokenCommand = exports.serializeAws_queryGetFederationTokenCommand = exports.serializeAws_queryGetCallerIdentityCommand = exports.serializeAws_queryGetAccessKeyInfoCommand = exports.serializeAws_queryDecodeAuthorizationMessageCommand = exports.serializeAws_queryAssumeRoleWithWebIdentityCommand = exports.serializeAws_queryAssumeRoleWithSAMLCommand = exports.serializeAws_queryAssumeRoleCommand = void 0;\nconst protocol_http_1 = require(\"@aws-sdk/protocol-http\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\nconst entities_1 = require(\"entities\");\nconst fast_xml_parser_1 = require(\"fast-xml-parser\");\nconst serializeAws_queryAssumeRoleCommand = async (input, context) => {\n    const headers = {\n        \"content-type\": \"application/x-www-form-urlencoded\",\n    };\n    let body;\n    body = buildFormUrlencodedString({\n        ...serializeAws_queryAssumeRoleRequest(input, context),\n        Action: \"AssumeRole\",\n        Version: \"2011-06-15\",\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexports.serializeAws_queryAssumeRoleCommand = serializeAws_queryAssumeRoleCommand;\nconst serializeAws_queryAssumeRoleWithSAMLCommand = async (input, context) => {\n    const headers = {\n        \"content-type\": \"application/x-www-form-urlencoded\",\n    };\n    let body;\n    body = buildFormUrlencodedString({\n        ...serializeAws_queryAssumeRoleWithSAMLRequest(input, context),\n        Action: \"AssumeRoleWithSAML\",\n        Version: \"2011-06-15\",\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexports.serializeAws_queryAssumeRoleWithSAMLCommand = serializeAws_queryAssumeRoleWithSAMLCommand;\nconst serializeAws_queryAssumeRoleWithWebIdentityCommand = async (input, context) => {\n    const headers = {\n        \"content-type\": \"application/x-www-form-urlencoded\",\n    };\n    let body;\n    body = buildFormUrlencodedString({\n        ...serializeAws_queryAssumeRoleWithWebIdentityRequest(input, context),\n        Action: \"AssumeRoleWithWebIdentity\",\n        Version: \"2011-06-15\",\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexports.serializeAws_queryAssumeRoleWithWebIdentityCommand = serializeAws_queryAssumeRoleWithWebIdentityCommand;\nconst serializeAws_queryDecodeAuthorizationMessageCommand = async (input, context) => {\n    const headers = {\n        \"content-type\": \"application/x-www-form-urlencoded\",\n    };\n    let body;\n    body = buildFormUrlencodedString({\n        ...serializeAws_queryDecodeAuthorizationMessageRequest(input, context),\n        Action: \"DecodeAuthorizationMessage\",\n        Version: \"2011-06-15\",\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexports.serializeAws_queryDecodeAuthorizationMessageCommand = serializeAws_queryDecodeAuthorizationMessageCommand;\nconst serializeAws_queryGetAccessKeyInfoCommand = async (input, context) => {\n    const headers = {\n        \"content-type\": \"application/x-www-form-urlencoded\",\n    };\n    let body;\n    body = buildFormUrlencodedString({\n        ...serializeAws_queryGetAccessKeyInfoRequest(input, context),\n        Action: \"GetAccessKeyInfo\",\n        Version: \"2011-06-15\",\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexports.serializeAws_queryGetAccessKeyInfoCommand = serializeAws_queryGetAccessKeyInfoCommand;\nconst serializeAws_queryGetCallerIdentityCommand = async (input, context) => {\n    const headers = {\n        \"content-type\": \"application/x-www-form-urlencoded\",\n    };\n    let body;\n    body = buildFormUrlencodedString({\n        ...serializeAws_queryGetCallerIdentityRequest(input, context),\n        Action: \"GetCallerIdentity\",\n        Version: \"2011-06-15\",\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexports.serializeAws_queryGetCallerIdentityCommand = serializeAws_queryGetCallerIdentityCommand;\nconst serializeAws_queryGetFederationTokenCommand = async (input, context) => {\n    const headers = {\n        \"content-type\": \"application/x-www-form-urlencoded\",\n    };\n    let body;\n    body = buildFormUrlencodedString({\n        ...serializeAws_queryGetFederationTokenRequest(input, context),\n        Action: \"GetFederationToken\",\n        Version: \"2011-06-15\",\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexports.serializeAws_queryGetFederationTokenCommand = serializeAws_queryGetFederationTokenCommand;\nconst serializeAws_queryGetSessionTokenCommand = async (input, context) => {\n    const headers = {\n        \"content-type\": \"application/x-www-form-urlencoded\",\n    };\n    let body;\n    body = buildFormUrlencodedString({\n        ...serializeAws_queryGetSessionTokenRequest(input, context),\n        Action: \"GetSessionToken\",\n        Version: \"2011-06-15\",\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexports.serializeAws_queryGetSessionTokenCommand = serializeAws_queryGetSessionTokenCommand;\nconst deserializeAws_queryAssumeRoleCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return deserializeAws_queryAssumeRoleCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = deserializeAws_queryAssumeRoleResponse(data.AssumeRoleResult, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return Promise.resolve(response);\n};\nexports.deserializeAws_queryAssumeRoleCommand = deserializeAws_queryAssumeRoleCommand;\nconst deserializeAws_queryAssumeRoleCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseBody(output.body, context),\n    };\n    let response;\n    let errorCode = \"UnknownError\";\n    errorCode = loadQueryErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"ExpiredTokenException\":\n        case \"com.amazonaws.sts#ExpiredTokenException\":\n            response = {\n                ...(await deserializeAws_queryExpiredTokenExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"MalformedPolicyDocumentException\":\n        case \"com.amazonaws.sts#MalformedPolicyDocumentException\":\n            response = {\n                ...(await deserializeAws_queryMalformedPolicyDocumentExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"PackedPolicyTooLargeException\":\n        case \"com.amazonaws.sts#PackedPolicyTooLargeException\":\n            response = {\n                ...(await deserializeAws_queryPackedPolicyTooLargeExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"RegionDisabledException\":\n        case \"com.amazonaws.sts#RegionDisabledException\":\n            response = {\n                ...(await deserializeAws_queryRegionDisabledExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        default:\n            const parsedBody = parsedOutput.body;\n            errorCode = parsedBody.Error.code || parsedBody.Error.Code || errorCode;\n            response = {\n                ...parsedBody.Error,\n                name: `${errorCode}`,\n                message: parsedBody.Error.message || parsedBody.Error.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output),\n            };\n    }\n    const message = response.message || response.Message || errorCode;\n    response.message = message;\n    delete response.Message;\n    return Promise.reject(Object.assign(new Error(message), response));\n};\nconst deserializeAws_queryAssumeRoleWithSAMLCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return deserializeAws_queryAssumeRoleWithSAMLCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = deserializeAws_queryAssumeRoleWithSAMLResponse(data.AssumeRoleWithSAMLResult, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return Promise.resolve(response);\n};\nexports.deserializeAws_queryAssumeRoleWithSAMLCommand = deserializeAws_queryAssumeRoleWithSAMLCommand;\nconst deserializeAws_queryAssumeRoleWithSAMLCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseBody(output.body, context),\n    };\n    let response;\n    let errorCode = \"UnknownError\";\n    errorCode = loadQueryErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"ExpiredTokenException\":\n        case \"com.amazonaws.sts#ExpiredTokenException\":\n            response = {\n                ...(await deserializeAws_queryExpiredTokenExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"IDPRejectedClaimException\":\n        case \"com.amazonaws.sts#IDPRejectedClaimException\":\n            response = {\n                ...(await deserializeAws_queryIDPRejectedClaimExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"InvalidIdentityTokenException\":\n        case \"com.amazonaws.sts#InvalidIdentityTokenException\":\n            response = {\n                ...(await deserializeAws_queryInvalidIdentityTokenExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"MalformedPolicyDocumentException\":\n        case \"com.amazonaws.sts#MalformedPolicyDocumentException\":\n            response = {\n                ...(await deserializeAws_queryMalformedPolicyDocumentExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"PackedPolicyTooLargeException\":\n        case \"com.amazonaws.sts#PackedPolicyTooLargeException\":\n            response = {\n                ...(await deserializeAws_queryPackedPolicyTooLargeExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"RegionDisabledException\":\n        case \"com.amazonaws.sts#RegionDisabledException\":\n            response = {\n                ...(await deserializeAws_queryRegionDisabledExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        default:\n            const parsedBody = parsedOutput.body;\n            errorCode = parsedBody.Error.code || parsedBody.Error.Code || errorCode;\n            response = {\n                ...parsedBody.Error,\n                name: `${errorCode}`,\n                message: parsedBody.Error.message || parsedBody.Error.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output),\n            };\n    }\n    const message = response.message || response.Message || errorCode;\n    response.message = message;\n    delete response.Message;\n    return Promise.reject(Object.assign(new Error(message), response));\n};\nconst deserializeAws_queryAssumeRoleWithWebIdentityCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return deserializeAws_queryAssumeRoleWithWebIdentityCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = deserializeAws_queryAssumeRoleWithWebIdentityResponse(data.AssumeRoleWithWebIdentityResult, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return Promise.resolve(response);\n};\nexports.deserializeAws_queryAssumeRoleWithWebIdentityCommand = deserializeAws_queryAssumeRoleWithWebIdentityCommand;\nconst deserializeAws_queryAssumeRoleWithWebIdentityCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseBody(output.body, context),\n    };\n    let response;\n    let errorCode = \"UnknownError\";\n    errorCode = loadQueryErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"ExpiredTokenException\":\n        case \"com.amazonaws.sts#ExpiredTokenException\":\n            response = {\n                ...(await deserializeAws_queryExpiredTokenExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"IDPCommunicationErrorException\":\n        case \"com.amazonaws.sts#IDPCommunicationErrorException\":\n            response = {\n                ...(await deserializeAws_queryIDPCommunicationErrorExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"IDPRejectedClaimException\":\n        case \"com.amazonaws.sts#IDPRejectedClaimException\":\n            response = {\n                ...(await deserializeAws_queryIDPRejectedClaimExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"InvalidIdentityTokenException\":\n        case \"com.amazonaws.sts#InvalidIdentityTokenException\":\n            response = {\n                ...(await deserializeAws_queryInvalidIdentityTokenExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"MalformedPolicyDocumentException\":\n        case \"com.amazonaws.sts#MalformedPolicyDocumentException\":\n            response = {\n                ...(await deserializeAws_queryMalformedPolicyDocumentExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"PackedPolicyTooLargeException\":\n        case \"com.amazonaws.sts#PackedPolicyTooLargeException\":\n            response = {\n                ...(await deserializeAws_queryPackedPolicyTooLargeExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"RegionDisabledException\":\n        case \"com.amazonaws.sts#RegionDisabledException\":\n            response = {\n                ...(await deserializeAws_queryRegionDisabledExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        default:\n            const parsedBody = parsedOutput.body;\n            errorCode = parsedBody.Error.code || parsedBody.Error.Code || errorCode;\n            response = {\n                ...parsedBody.Error,\n                name: `${errorCode}`,\n                message: parsedBody.Error.message || parsedBody.Error.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output),\n            };\n    }\n    const message = response.message || response.Message || errorCode;\n    response.message = message;\n    delete response.Message;\n    return Promise.reject(Object.assign(new Error(message), response));\n};\nconst deserializeAws_queryDecodeAuthorizationMessageCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return deserializeAws_queryDecodeAuthorizationMessageCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = deserializeAws_queryDecodeAuthorizationMessageResponse(data.DecodeAuthorizationMessageResult, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return Promise.resolve(response);\n};\nexports.deserializeAws_queryDecodeAuthorizationMessageCommand = deserializeAws_queryDecodeAuthorizationMessageCommand;\nconst deserializeAws_queryDecodeAuthorizationMessageCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseBody(output.body, context),\n    };\n    let response;\n    let errorCode = \"UnknownError\";\n    errorCode = loadQueryErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"InvalidAuthorizationMessageException\":\n        case \"com.amazonaws.sts#InvalidAuthorizationMessageException\":\n            response = {\n                ...(await deserializeAws_queryInvalidAuthorizationMessageExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        default:\n            const parsedBody = parsedOutput.body;\n            errorCode = parsedBody.Error.code || parsedBody.Error.Code || errorCode;\n            response = {\n                ...parsedBody.Error,\n                name: `${errorCode}`,\n                message: parsedBody.Error.message || parsedBody.Error.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output),\n            };\n    }\n    const message = response.message || response.Message || errorCode;\n    response.message = message;\n    delete response.Message;\n    return Promise.reject(Object.assign(new Error(message), response));\n};\nconst deserializeAws_queryGetAccessKeyInfoCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return deserializeAws_queryGetAccessKeyInfoCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = deserializeAws_queryGetAccessKeyInfoResponse(data.GetAccessKeyInfoResult, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return Promise.resolve(response);\n};\nexports.deserializeAws_queryGetAccessKeyInfoCommand = deserializeAws_queryGetAccessKeyInfoCommand;\nconst deserializeAws_queryGetAccessKeyInfoCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseBody(output.body, context),\n    };\n    let response;\n    let errorCode = \"UnknownError\";\n    errorCode = loadQueryErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        default:\n            const parsedBody = parsedOutput.body;\n            errorCode = parsedBody.Error.code || parsedBody.Error.Code || errorCode;\n            response = {\n                ...parsedBody.Error,\n                name: `${errorCode}`,\n                message: parsedBody.Error.message || parsedBody.Error.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output),\n            };\n    }\n    const message = response.message || response.Message || errorCode;\n    response.message = message;\n    delete response.Message;\n    return Promise.reject(Object.assign(new Error(message), response));\n};\nconst deserializeAws_queryGetCallerIdentityCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return deserializeAws_queryGetCallerIdentityCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = deserializeAws_queryGetCallerIdentityResponse(data.GetCallerIdentityResult, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return Promise.resolve(response);\n};\nexports.deserializeAws_queryGetCallerIdentityCommand = deserializeAws_queryGetCallerIdentityCommand;\nconst deserializeAws_queryGetCallerIdentityCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseBody(output.body, context),\n    };\n    let response;\n    let errorCode = \"UnknownError\";\n    errorCode = loadQueryErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        default:\n            const parsedBody = parsedOutput.body;\n            errorCode = parsedBody.Error.code || parsedBody.Error.Code || errorCode;\n            response = {\n                ...parsedBody.Error,\n                name: `${errorCode}`,\n                message: parsedBody.Error.message || parsedBody.Error.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output),\n            };\n    }\n    const message = response.message || response.Message || errorCode;\n    response.message = message;\n    delete response.Message;\n    return Promise.reject(Object.assign(new Error(message), response));\n};\nconst deserializeAws_queryGetFederationTokenCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return deserializeAws_queryGetFederationTokenCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = deserializeAws_queryGetFederationTokenResponse(data.GetFederationTokenResult, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return Promise.resolve(response);\n};\nexports.deserializeAws_queryGetFederationTokenCommand = deserializeAws_queryGetFederationTokenCommand;\nconst deserializeAws_queryGetFederationTokenCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseBody(output.body, context),\n    };\n    let response;\n    let errorCode = \"UnknownError\";\n    errorCode = loadQueryErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"MalformedPolicyDocumentException\":\n        case \"com.amazonaws.sts#MalformedPolicyDocumentException\":\n            response = {\n                ...(await deserializeAws_queryMalformedPolicyDocumentExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"PackedPolicyTooLargeException\":\n        case \"com.amazonaws.sts#PackedPolicyTooLargeException\":\n            response = {\n                ...(await deserializeAws_queryPackedPolicyTooLargeExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"RegionDisabledException\":\n        case \"com.amazonaws.sts#RegionDisabledException\":\n            response = {\n                ...(await deserializeAws_queryRegionDisabledExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        default:\n            const parsedBody = parsedOutput.body;\n            errorCode = parsedBody.Error.code || parsedBody.Error.Code || errorCode;\n            response = {\n                ...parsedBody.Error,\n                name: `${errorCode}`,\n                message: parsedBody.Error.message || parsedBody.Error.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output),\n            };\n    }\n    const message = response.message || response.Message || errorCode;\n    response.message = message;\n    delete response.Message;\n    return Promise.reject(Object.assign(new Error(message), response));\n};\nconst deserializeAws_queryGetSessionTokenCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return deserializeAws_queryGetSessionTokenCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = deserializeAws_queryGetSessionTokenResponse(data.GetSessionTokenResult, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return Promise.resolve(response);\n};\nexports.deserializeAws_queryGetSessionTokenCommand = deserializeAws_queryGetSessionTokenCommand;\nconst deserializeAws_queryGetSessionTokenCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseBody(output.body, context),\n    };\n    let response;\n    let errorCode = \"UnknownError\";\n    errorCode = loadQueryErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"RegionDisabledException\":\n        case \"com.amazonaws.sts#RegionDisabledException\":\n            response = {\n                ...(await deserializeAws_queryRegionDisabledExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        default:\n            const parsedBody = parsedOutput.body;\n            errorCode = parsedBody.Error.code || parsedBody.Error.Code || errorCode;\n            response = {\n                ...parsedBody.Error,\n                name: `${errorCode}`,\n                message: parsedBody.Error.message || parsedBody.Error.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output),\n            };\n    }\n    const message = response.message || response.Message || errorCode;\n    response.message = message;\n    delete response.Message;\n    return Promise.reject(Object.assign(new Error(message), response));\n};\nconst deserializeAws_queryExpiredTokenExceptionResponse = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = deserializeAws_queryExpiredTokenException(body.Error, context);\n    const contents = {\n        name: \"ExpiredTokenException\",\n        $fault: \"client\",\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    };\n    return contents;\n};\nconst deserializeAws_queryIDPCommunicationErrorExceptionResponse = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = deserializeAws_queryIDPCommunicationErrorException(body.Error, context);\n    const contents = {\n        name: \"IDPCommunicationErrorException\",\n        $fault: \"client\",\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    };\n    return contents;\n};\nconst deserializeAws_queryIDPRejectedClaimExceptionResponse = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = deserializeAws_queryIDPRejectedClaimException(body.Error, context);\n    const contents = {\n        name: \"IDPRejectedClaimException\",\n        $fault: \"client\",\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    };\n    return contents;\n};\nconst deserializeAws_queryInvalidAuthorizationMessageExceptionResponse = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = deserializeAws_queryInvalidAuthorizationMessageException(body.Error, context);\n    const contents = {\n        name: \"InvalidAuthorizationMessageException\",\n        $fault: \"client\",\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    };\n    return contents;\n};\nconst deserializeAws_queryInvalidIdentityTokenExceptionResponse = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = deserializeAws_queryInvalidIdentityTokenException(body.Error, context);\n    const contents = {\n        name: \"InvalidIdentityTokenException\",\n        $fault: \"client\",\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    };\n    return contents;\n};\nconst deserializeAws_queryMalformedPolicyDocumentExceptionResponse = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = deserializeAws_queryMalformedPolicyDocumentException(body.Error, context);\n    const contents = {\n        name: \"MalformedPolicyDocumentException\",\n        $fault: \"client\",\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    };\n    return contents;\n};\nconst deserializeAws_queryPackedPolicyTooLargeExceptionResponse = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = deserializeAws_queryPackedPolicyTooLargeException(body.Error, context);\n    const contents = {\n        name: \"PackedPolicyTooLargeException\",\n        $fault: \"client\",\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    };\n    return contents;\n};\nconst deserializeAws_queryRegionDisabledExceptionResponse = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = deserializeAws_queryRegionDisabledException(body.Error, context);\n    const contents = {\n        name: \"RegionDisabledException\",\n        $fault: \"client\",\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    };\n    return contents;\n};\nconst serializeAws_queryAssumeRoleRequest = (input, context) => {\n    const entries = {};\n    if (input.RoleArn !== undefined && input.RoleArn !== null) {\n        entries[\"RoleArn\"] = input.RoleArn;\n    }\n    if (input.RoleSessionName !== undefined && input.RoleSessionName !== null) {\n        entries[\"RoleSessionName\"] = input.RoleSessionName;\n    }\n    if (input.PolicyArns !== undefined && input.PolicyArns !== null) {\n        const memberEntries = serializeAws_querypolicyDescriptorListType(input.PolicyArns, context);\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            const loc = `PolicyArns.${key}`;\n            entries[loc] = value;\n        });\n    }\n    if (input.Policy !== undefined && input.Policy !== null) {\n        entries[\"Policy\"] = input.Policy;\n    }\n    if (input.DurationSeconds !== undefined && input.DurationSeconds !== null) {\n        entries[\"DurationSeconds\"] = input.DurationSeconds;\n    }\n    if (input.Tags !== undefined && input.Tags !== null) {\n        const memberEntries = serializeAws_querytagListType(input.Tags, context);\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            const loc = `Tags.${key}`;\n            entries[loc] = value;\n        });\n    }\n    if (input.TransitiveTagKeys !== undefined && input.TransitiveTagKeys !== null) {\n        const memberEntries = serializeAws_querytagKeyListType(input.TransitiveTagKeys, context);\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            const loc = `TransitiveTagKeys.${key}`;\n            entries[loc] = value;\n        });\n    }\n    if (input.ExternalId !== undefined && input.ExternalId !== null) {\n        entries[\"ExternalId\"] = input.ExternalId;\n    }\n    if (input.SerialNumber !== undefined && input.SerialNumber !== null) {\n        entries[\"SerialNumber\"] = input.SerialNumber;\n    }\n    if (input.TokenCode !== undefined && input.TokenCode !== null) {\n        entries[\"TokenCode\"] = input.TokenCode;\n    }\n    if (input.SourceIdentity !== undefined && input.SourceIdentity !== null) {\n        entries[\"SourceIdentity\"] = input.SourceIdentity;\n    }\n    return entries;\n};\nconst serializeAws_queryAssumeRoleWithSAMLRequest = (input, context) => {\n    const entries = {};\n    if (input.RoleArn !== undefined && input.RoleArn !== null) {\n        entries[\"RoleArn\"] = input.RoleArn;\n    }\n    if (input.PrincipalArn !== undefined && input.PrincipalArn !== null) {\n        entries[\"PrincipalArn\"] = input.PrincipalArn;\n    }\n    if (input.SAMLAssertion !== undefined && input.SAMLAssertion !== null) {\n        entries[\"SAMLAssertion\"] = input.SAMLAssertion;\n    }\n    if (input.PolicyArns !== undefined && input.PolicyArns !== null) {\n        const memberEntries = serializeAws_querypolicyDescriptorListType(input.PolicyArns, context);\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            const loc = `PolicyArns.${key}`;\n            entries[loc] = value;\n        });\n    }\n    if (input.Policy !== undefined && input.Policy !== null) {\n        entries[\"Policy\"] = input.Policy;\n    }\n    if (input.DurationSeconds !== undefined && input.DurationSeconds !== null) {\n        entries[\"DurationSeconds\"] = input.DurationSeconds;\n    }\n    return entries;\n};\nconst serializeAws_queryAssumeRoleWithWebIdentityRequest = (input, context) => {\n    const entries = {};\n    if (input.RoleArn !== undefined && input.RoleArn !== null) {\n        entries[\"RoleArn\"] = input.RoleArn;\n    }\n    if (input.RoleSessionName !== undefined && input.RoleSessionName !== null) {\n        entries[\"RoleSessionName\"] = input.RoleSessionName;\n    }\n    if (input.WebIdentityToken !== undefined && input.WebIdentityToken !== null) {\n        entries[\"WebIdentityToken\"] = input.WebIdentityToken;\n    }\n    if (input.ProviderId !== undefined && input.ProviderId !== null) {\n        entries[\"ProviderId\"] = input.ProviderId;\n    }\n    if (input.PolicyArns !== undefined && input.PolicyArns !== null) {\n        const memberEntries = serializeAws_querypolicyDescriptorListType(input.PolicyArns, context);\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            const loc = `PolicyArns.${key}`;\n            entries[loc] = value;\n        });\n    }\n    if (input.Policy !== undefined && input.Policy !== null) {\n        entries[\"Policy\"] = input.Policy;\n    }\n    if (input.DurationSeconds !== undefined && input.DurationSeconds !== null) {\n        entries[\"DurationSeconds\"] = input.DurationSeconds;\n    }\n    return entries;\n};\nconst serializeAws_queryDecodeAuthorizationMessageRequest = (input, context) => {\n    const entries = {};\n    if (input.EncodedMessage !== undefined && input.EncodedMessage !== null) {\n        entries[\"EncodedMessage\"] = input.EncodedMessage;\n    }\n    return entries;\n};\nconst serializeAws_queryGetAccessKeyInfoRequest = (input, context) => {\n    const entries = {};\n    if (input.AccessKeyId !== undefined && input.AccessKeyId !== null) {\n        entries[\"AccessKeyId\"] = input.AccessKeyId;\n    }\n    return entries;\n};\nconst serializeAws_queryGetCallerIdentityRequest = (input, context) => {\n    const entries = {};\n    return entries;\n};\nconst serializeAws_queryGetFederationTokenRequest = (input, context) => {\n    const entries = {};\n    if (input.Name !== undefined && input.Name !== null) {\n        entries[\"Name\"] = input.Name;\n    }\n    if (input.Policy !== undefined && input.Policy !== null) {\n        entries[\"Policy\"] = input.Policy;\n    }\n    if (input.PolicyArns !== undefined && input.PolicyArns !== null) {\n        const memberEntries = serializeAws_querypolicyDescriptorListType(input.PolicyArns, context);\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            const loc = `PolicyArns.${key}`;\n            entries[loc] = value;\n        });\n    }\n    if (input.DurationSeconds !== undefined && input.DurationSeconds !== null) {\n        entries[\"DurationSeconds\"] = input.DurationSeconds;\n    }\n    if (input.Tags !== undefined && input.Tags !== null) {\n        const memberEntries = serializeAws_querytagListType(input.Tags, context);\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            const loc = `Tags.${key}`;\n            entries[loc] = value;\n        });\n    }\n    return entries;\n};\nconst serializeAws_queryGetSessionTokenRequest = (input, context) => {\n    const entries = {};\n    if (input.DurationSeconds !== undefined && input.DurationSeconds !== null) {\n        entries[\"DurationSeconds\"] = input.DurationSeconds;\n    }\n    if (input.SerialNumber !== undefined && input.SerialNumber !== null) {\n        entries[\"SerialNumber\"] = input.SerialNumber;\n    }\n    if (input.TokenCode !== undefined && input.TokenCode !== null) {\n        entries[\"TokenCode\"] = input.TokenCode;\n    }\n    return entries;\n};\nconst serializeAws_querypolicyDescriptorListType = (input, context) => {\n    const entries = {};\n    let counter = 1;\n    for (const entry of input) {\n        if (entry === null) {\n            continue;\n        }\n        const memberEntries = serializeAws_queryPolicyDescriptorType(entry, context);\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            entries[`member.${counter}.${key}`] = value;\n        });\n        counter++;\n    }\n    return entries;\n};\nconst serializeAws_queryPolicyDescriptorType = (input, context) => {\n    const entries = {};\n    if (input.arn !== undefined && input.arn !== null) {\n        entries[\"arn\"] = input.arn;\n    }\n    return entries;\n};\nconst serializeAws_queryTag = (input, context) => {\n    const entries = {};\n    if (input.Key !== undefined && input.Key !== null) {\n        entries[\"Key\"] = input.Key;\n    }\n    if (input.Value !== undefined && input.Value !== null) {\n        entries[\"Value\"] = input.Value;\n    }\n    return entries;\n};\nconst serializeAws_querytagKeyListType = (input, context) => {\n    const entries = {};\n    let counter = 1;\n    for (const entry of input) {\n        if (entry === null) {\n            continue;\n        }\n        entries[`member.${counter}`] = entry;\n        counter++;\n    }\n    return entries;\n};\nconst serializeAws_querytagListType = (input, context) => {\n    const entries = {};\n    let counter = 1;\n    for (const entry of input) {\n        if (entry === null) {\n            continue;\n        }\n        const memberEntries = serializeAws_queryTag(entry, context);\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            entries[`member.${counter}.${key}`] = value;\n        });\n        counter++;\n    }\n    return entries;\n};\nconst deserializeAws_queryAssumedRoleUser = (output, context) => {\n    const contents = {\n        AssumedRoleId: undefined,\n        Arn: undefined,\n    };\n    if (output[\"AssumedRoleId\"] !== undefined) {\n        contents.AssumedRoleId = smithy_client_1.expectString(output[\"AssumedRoleId\"]);\n    }\n    if (output[\"Arn\"] !== undefined) {\n        contents.Arn = smithy_client_1.expectString(output[\"Arn\"]);\n    }\n    return contents;\n};\nconst deserializeAws_queryAssumeRoleResponse = (output, context) => {\n    const contents = {\n        Credentials: undefined,\n        AssumedRoleUser: undefined,\n        PackedPolicySize: undefined,\n        SourceIdentity: undefined,\n    };\n    if (output[\"Credentials\"] !== undefined) {\n        contents.Credentials = deserializeAws_queryCredentials(output[\"Credentials\"], context);\n    }\n    if (output[\"AssumedRoleUser\"] !== undefined) {\n        contents.AssumedRoleUser = deserializeAws_queryAssumedRoleUser(output[\"AssumedRoleUser\"], context);\n    }\n    if (output[\"PackedPolicySize\"] !== undefined) {\n        contents.PackedPolicySize = smithy_client_1.strictParseInt32(output[\"PackedPolicySize\"]);\n    }\n    if (output[\"SourceIdentity\"] !== undefined) {\n        contents.SourceIdentity = smithy_client_1.expectString(output[\"SourceIdentity\"]);\n    }\n    return contents;\n};\nconst deserializeAws_queryAssumeRoleWithSAMLResponse = (output, context) => {\n    const contents = {\n        Credentials: undefined,\n        AssumedRoleUser: undefined,\n        PackedPolicySize: undefined,\n        Subject: undefined,\n        SubjectType: undefined,\n        Issuer: undefined,\n        Audience: undefined,\n        NameQualifier: undefined,\n        SourceIdentity: undefined,\n    };\n    if (output[\"Credentials\"] !== undefined) {\n        contents.Credentials = deserializeAws_queryCredentials(output[\"Credentials\"], context);\n    }\n    if (output[\"AssumedRoleUser\"] !== undefined) {\n        contents.AssumedRoleUser = deserializeAws_queryAssumedRoleUser(output[\"AssumedRoleUser\"], context);\n    }\n    if (output[\"PackedPolicySize\"] !== undefined) {\n        contents.PackedPolicySize = smithy_client_1.strictParseInt32(output[\"PackedPolicySize\"]);\n    }\n    if (output[\"Subject\"] !== undefined) {\n        contents.Subject = smithy_client_1.expectString(output[\"Subject\"]);\n    }\n    if (output[\"SubjectType\"] !== undefined) {\n        contents.SubjectType = smithy_client_1.expectString(output[\"SubjectType\"]);\n    }\n    if (output[\"Issuer\"] !== undefined) {\n        contents.Issuer = smithy_client_1.expectString(output[\"Issuer\"]);\n    }\n    if (output[\"Audience\"] !== undefined) {\n        contents.Audience = smithy_client_1.expectString(output[\"Audience\"]);\n    }\n    if (output[\"NameQualifier\"] !== undefined) {\n        contents.NameQualifier = smithy_client_1.expectString(output[\"NameQualifier\"]);\n    }\n    if (output[\"SourceIdentity\"] !== undefined) {\n        contents.SourceIdentity = smithy_client_1.expectString(output[\"SourceIdentity\"]);\n    }\n    return contents;\n};\nconst deserializeAws_queryAssumeRoleWithWebIdentityResponse = (output, context) => {\n    const contents = {\n        Credentials: undefined,\n        SubjectFromWebIdentityToken: undefined,\n        AssumedRoleUser: undefined,\n        PackedPolicySize: undefined,\n        Provider: undefined,\n        Audience: undefined,\n        SourceIdentity: undefined,\n    };\n    if (output[\"Credentials\"] !== undefined) {\n        contents.Credentials = deserializeAws_queryCredentials(output[\"Credentials\"], context);\n    }\n    if (output[\"SubjectFromWebIdentityToken\"] !== undefined) {\n        contents.SubjectFromWebIdentityToken = smithy_client_1.expectString(output[\"SubjectFromWebIdentityToken\"]);\n    }\n    if (output[\"AssumedRoleUser\"] !== undefined) {\n        contents.AssumedRoleUser = deserializeAws_queryAssumedRoleUser(output[\"AssumedRoleUser\"], context);\n    }\n    if (output[\"PackedPolicySize\"] !== undefined) {\n        contents.PackedPolicySize = smithy_client_1.strictParseInt32(output[\"PackedPolicySize\"]);\n    }\n    if (output[\"Provider\"] !== undefined) {\n        contents.Provider = smithy_client_1.expectString(output[\"Provider\"]);\n    }\n    if (output[\"Audience\"] !== undefined) {\n        contents.Audience = smithy_client_1.expectString(output[\"Audience\"]);\n    }\n    if (output[\"SourceIdentity\"] !== undefined) {\n        contents.SourceIdentity = smithy_client_1.expectString(output[\"SourceIdentity\"]);\n    }\n    return contents;\n};\nconst deserializeAws_queryCredentials = (output, context) => {\n    const contents = {\n        AccessKeyId: undefined,\n        SecretAccessKey: undefined,\n        SessionToken: undefined,\n        Expiration: undefined,\n    };\n    if (output[\"AccessKeyId\"] !== undefined) {\n        contents.AccessKeyId = smithy_client_1.expectString(output[\"AccessKeyId\"]);\n    }\n    if (output[\"SecretAccessKey\"] !== undefined) {\n        contents.SecretAccessKey = smithy_client_1.expectString(output[\"SecretAccessKey\"]);\n    }\n    if (output[\"SessionToken\"] !== undefined) {\n        contents.SessionToken = smithy_client_1.expectString(output[\"SessionToken\"]);\n    }\n    if (output[\"Expiration\"] !== undefined) {\n        contents.Expiration = smithy_client_1.expectNonNull(smithy_client_1.parseRfc3339DateTime(output[\"Expiration\"]));\n    }\n    return contents;\n};\nconst deserializeAws_queryDecodeAuthorizationMessageResponse = (output, context) => {\n    const contents = {\n        DecodedMessage: undefined,\n    };\n    if (output[\"DecodedMessage\"] !== undefined) {\n        contents.DecodedMessage = smithy_client_1.expectString(output[\"DecodedMessage\"]);\n    }\n    return contents;\n};\nconst deserializeAws_queryExpiredTokenException = (output, context) => {\n    const contents = {\n        message: undefined,\n    };\n    if (output[\"message\"] !== undefined) {\n        contents.message = smithy_client_1.expectString(output[\"message\"]);\n    }\n    return contents;\n};\nconst deserializeAws_queryFederatedUser = (output, context) => {\n    const contents = {\n        FederatedUserId: undefined,\n        Arn: undefined,\n    };\n    if (output[\"FederatedUserId\"] !== undefined) {\n        contents.FederatedUserId = smithy_client_1.expectString(output[\"FederatedUserId\"]);\n    }\n    if (output[\"Arn\"] !== undefined) {\n        contents.Arn = smithy_client_1.expectString(output[\"Arn\"]);\n    }\n    return contents;\n};\nconst deserializeAws_queryGetAccessKeyInfoResponse = (output, context) => {\n    const contents = {\n        Account: undefined,\n    };\n    if (output[\"Account\"] !== undefined) {\n        contents.Account = smithy_client_1.expectString(output[\"Account\"]);\n    }\n    return contents;\n};\nconst deserializeAws_queryGetCallerIdentityResponse = (output, context) => {\n    const contents = {\n        UserId: undefined,\n        Account: undefined,\n        Arn: undefined,\n    };\n    if (output[\"UserId\"] !== undefined) {\n        contents.UserId = smithy_client_1.expectString(output[\"UserId\"]);\n    }\n    if (output[\"Account\"] !== undefined) {\n        contents.Account = smithy_client_1.expectString(output[\"Account\"]);\n    }\n    if (output[\"Arn\"] !== undefined) {\n        contents.Arn = smithy_client_1.expectString(output[\"Arn\"]);\n    }\n    return contents;\n};\nconst deserializeAws_queryGetFederationTokenResponse = (output, context) => {\n    const contents = {\n        Credentials: undefined,\n        FederatedUser: undefined,\n        PackedPolicySize: undefined,\n    };\n    if (output[\"Credentials\"] !== undefined) {\n        contents.Credentials = deserializeAws_queryCredentials(output[\"Credentials\"], context);\n    }\n    if (output[\"FederatedUser\"] !== undefined) {\n        contents.FederatedUser = deserializeAws_queryFederatedUser(output[\"FederatedUser\"], context);\n    }\n    if (output[\"PackedPolicySize\"] !== undefined) {\n        contents.PackedPolicySize = smithy_client_1.strictParseInt32(output[\"PackedPolicySize\"]);\n    }\n    return contents;\n};\nconst deserializeAws_queryGetSessionTokenResponse = (output, context) => {\n    const contents = {\n        Credentials: undefined,\n    };\n    if (output[\"Credentials\"] !== undefined) {\n        contents.Credentials = deserializeAws_queryCredentials(output[\"Credentials\"], context);\n    }\n    return contents;\n};\nconst deserializeAws_queryIDPCommunicationErrorException = (output, context) => {\n    const contents = {\n        message: undefined,\n    };\n    if (output[\"message\"] !== undefined) {\n        contents.message = smithy_client_1.expectString(output[\"message\"]);\n    }\n    return contents;\n};\nconst deserializeAws_queryIDPRejectedClaimException = (output, context) => {\n    const contents = {\n        message: undefined,\n    };\n    if (output[\"message\"] !== undefined) {\n        contents.message = smithy_client_1.expectString(output[\"message\"]);\n    }\n    return contents;\n};\nconst deserializeAws_queryInvalidAuthorizationMessageException = (output, context) => {\n    const contents = {\n        message: undefined,\n    };\n    if (output[\"message\"] !== undefined) {\n        contents.message = smithy_client_1.expectString(output[\"message\"]);\n    }\n    return contents;\n};\nconst deserializeAws_queryInvalidIdentityTokenException = (output, context) => {\n    const contents = {\n        message: undefined,\n    };\n    if (output[\"message\"] !== undefined) {\n        contents.message = smithy_client_1.expectString(output[\"message\"]);\n    }\n    return contents;\n};\nconst deserializeAws_queryMalformedPolicyDocumentException = (output, context) => {\n    const contents = {\n        message: undefined,\n    };\n    if (output[\"message\"] !== undefined) {\n        contents.message = smithy_client_1.expectString(output[\"message\"]);\n    }\n    return contents;\n};\nconst deserializeAws_queryPackedPolicyTooLargeException = (output, context) => {\n    const contents = {\n        message: undefined,\n    };\n    if (output[\"message\"] !== undefined) {\n        contents.message = smithy_client_1.expectString(output[\"message\"]);\n    }\n    return contents;\n};\nconst deserializeAws_queryRegionDisabledException = (output, context) => {\n    const contents = {\n        message: undefined,\n    };\n    if (output[\"message\"] !== undefined) {\n        contents.message = smithy_client_1.expectString(output[\"message\"]);\n    }\n    return contents;\n};\nconst deserializeMetadata = (output) => {\n    var _a;\n    return ({\n        httpStatusCode: output.statusCode,\n        requestId: (_a = output.headers[\"x-amzn-requestid\"]) !== null && _a !== void 0 ? _a : output.headers[\"x-amzn-request-id\"],\n        extendedRequestId: output.headers[\"x-amz-id-2\"],\n        cfId: output.headers[\"x-amz-cf-id\"],\n    });\n};\nconst collectBody = (streamBody = new Uint8Array(), context) => {\n    if (streamBody instanceof Uint8Array) {\n        return Promise.resolve(streamBody);\n    }\n    return context.streamCollector(streamBody) || Promise.resolve(new Uint8Array());\n};\nconst collectBodyString = (streamBody, context) => collectBody(streamBody, context).then((body) => context.utf8Encoder(body));\nconst buildHttpRpcRequest = async (context, headers, path, resolvedHostname, body) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const contents = {\n        protocol,\n        hostname,\n        port,\n        method: \"POST\",\n        path: basePath.endsWith(\"/\") ? basePath.slice(0, -1) + path : basePath + path,\n        headers,\n    };\n    if (resolvedHostname !== undefined) {\n        contents.hostname = resolvedHostname;\n    }\n    if (body !== undefined) {\n        contents.body = body;\n    }\n    return new protocol_http_1.HttpRequest(contents);\n};\nconst parseBody = (streamBody, context) => collectBodyString(streamBody, context).then((encoded) => {\n    if (encoded.length) {\n        const parsedObj = fast_xml_parser_1.parse(encoded, {\n            attributeNamePrefix: \"\",\n            ignoreAttributes: false,\n            parseNodeValue: false,\n            trimValues: false,\n            tagValueProcessor: (val) => (val.trim() === \"\" && val.includes(\"\\n\") ? \"\" : entities_1.decodeHTML(val)),\n        });\n        const textNodeName = \"#text\";\n        const key = Object.keys(parsedObj)[0];\n        const parsedObjToReturn = parsedObj[key];\n        if (parsedObjToReturn[textNodeName]) {\n            parsedObjToReturn[key] = parsedObjToReturn[textNodeName];\n            delete parsedObjToReturn[textNodeName];\n        }\n        return smithy_client_1.getValueFromTextNode(parsedObjToReturn);\n    }\n    return {};\n});\nconst buildFormUrlencodedString = (formEntries) => Object.entries(formEntries)\n    .map(([key, value]) => smithy_client_1.extendedEncodeURIComponent(key) + \"=\" + smithy_client_1.extendedEncodeURIComponent(value))\n    .join(\"&\");\nconst loadQueryErrorCode = (output, data) => {\n    if (data.Error.Code !== undefined) {\n        return data.Error.Code;\n    }\n    if (output.statusCode == 404) {\n        return \"NotFound\";\n    }\n    return \"\";\n};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getRuntimeConfig = void 0;\nconst tslib_1 = require(\"tslib\");\nconst package_json_1 = tslib_1.__importDefault(require(\"../package.json\"));\nconst defaultStsRoleAssumers_1 = require(\"./defaultStsRoleAssumers\");\nconst config_resolver_1 = require(\"@aws-sdk/config-resolver\");\nconst credential_provider_node_1 = require(\"@aws-sdk/credential-provider-node\");\nconst hash_node_1 = require(\"@aws-sdk/hash-node\");\nconst middleware_retry_1 = require(\"@aws-sdk/middleware-retry\");\nconst node_config_provider_1 = require(\"@aws-sdk/node-config-provider\");\nconst node_http_handler_1 = require(\"@aws-sdk/node-http-handler\");\nconst util_base64_node_1 = require(\"@aws-sdk/util-base64-node\");\nconst util_body_length_node_1 = require(\"@aws-sdk/util-body-length-node\");\nconst util_user_agent_node_1 = require(\"@aws-sdk/util-user-agent-node\");\nconst util_utf8_node_1 = require(\"@aws-sdk/util-utf8-node\");\nconst runtimeConfig_shared_1 = require(\"./runtimeConfig.shared\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\nconst util_defaults_mode_node_1 = require(\"@aws-sdk/util-defaults-mode-node\");\nconst getRuntimeConfig = (config) => {\n    var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p, _q;\n    const defaultsMode = util_defaults_mode_node_1.resolveDefaultsModeConfig(config);\n    const defaultConfigProvider = () => defaultsMode().then(smithy_client_1.loadConfigsForDefaultMode);\n    const clientSharedValues = runtimeConfig_shared_1.getRuntimeConfig(config);\n    return {\n        ...clientSharedValues,\n        ...config,\n        runtime: \"node\",\n        defaultsMode,\n        base64Decoder: (_a = config === null || config === void 0 ? void 0 : config.base64Decoder) !== null && _a !== void 0 ? _a : util_base64_node_1.fromBase64,\n        base64Encoder: (_b = config === null || config === void 0 ? void 0 : config.base64Encoder) !== null && _b !== void 0 ? _b : util_base64_node_1.toBase64,\n        bodyLengthChecker: (_c = config === null || config === void 0 ? void 0 : config.bodyLengthChecker) !== null && _c !== void 0 ? _c : util_body_length_node_1.calculateBodyLength,\n        credentialDefaultProvider: (_d = config === null || config === void 0 ? void 0 : config.credentialDefaultProvider) !== null && _d !== void 0 ? _d : defaultStsRoleAssumers_1.decorateDefaultCredentialProvider(credential_provider_node_1.defaultProvider),\n        defaultUserAgentProvider: (_e = config === null || config === void 0 ? void 0 : config.defaultUserAgentProvider) !== null && _e !== void 0 ? _e : util_user_agent_node_1.defaultUserAgent({ serviceId: clientSharedValues.serviceId, clientVersion: package_json_1.default.version }),\n        maxAttempts: (_f = config === null || config === void 0 ? void 0 : config.maxAttempts) !== null && _f !== void 0 ? _f : node_config_provider_1.loadConfig(middleware_retry_1.NODE_MAX_ATTEMPT_CONFIG_OPTIONS),\n        region: (_g = config === null || config === void 0 ? void 0 : config.region) !== null && _g !== void 0 ? _g : node_config_provider_1.loadConfig(config_resolver_1.NODE_REGION_CONFIG_OPTIONS, config_resolver_1.NODE_REGION_CONFIG_FILE_OPTIONS),\n        requestHandler: (_h = config === null || config === void 0 ? void 0 : config.requestHandler) !== null && _h !== void 0 ? _h : new node_http_handler_1.NodeHttpHandler(defaultConfigProvider),\n        retryMode: (_j = config === null || config === void 0 ? void 0 : config.retryMode) !== null && _j !== void 0 ? _j : node_config_provider_1.loadConfig({\n            ...middleware_retry_1.NODE_RETRY_MODE_CONFIG_OPTIONS,\n            default: async () => (await defaultConfigProvider()).retryMode || middleware_retry_1.DEFAULT_RETRY_MODE,\n        }),\n        sha256: (_k = config === null || config === void 0 ? void 0 : config.sha256) !== null && _k !== void 0 ? _k : hash_node_1.Hash.bind(null, \"sha256\"),\n        streamCollector: (_l = config === null || config === void 0 ? void 0 : config.streamCollector) !== null && _l !== void 0 ? _l : node_http_handler_1.streamCollector,\n        useDualstackEndpoint: (_m = config === null || config === void 0 ? void 0 : config.useDualstackEndpoint) !== null && _m !== void 0 ? _m : node_config_provider_1.loadConfig(config_resolver_1.NODE_USE_DUALSTACK_ENDPOINT_CONFIG_OPTIONS),\n        useFipsEndpoint: (_o = config === null || config === void 0 ? void 0 : config.useFipsEndpoint) !== null && _o !== void 0 ? _o : node_config_provider_1.loadConfig(config_resolver_1.NODE_USE_FIPS_ENDPOINT_CONFIG_OPTIONS),\n        utf8Decoder: (_p = config === null || config === void 0 ? void 0 : config.utf8Decoder) !== null && _p !== void 0 ? _p : util_utf8_node_1.fromUtf8,\n        utf8Encoder: (_q = config === null || config === void 0 ? void 0 : config.utf8Encoder) !== null && _q !== void 0 ? _q : util_utf8_node_1.toUtf8,\n    };\n};\nexports.getRuntimeConfig = getRuntimeConfig;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getRuntimeConfig = void 0;\nconst url_parser_1 = require(\"@aws-sdk/url-parser\");\nconst endpoints_1 = require(\"./endpoints\");\nconst getRuntimeConfig = (config) => {\n    var _a, _b, _c, _d, _e;\n    return ({\n        apiVersion: \"2011-06-15\",\n        disableHostPrefix: (_a = config === null || config === void 0 ? void 0 : config.disableHostPrefix) !== null && _a !== void 0 ? _a : false,\n        logger: (_b = config === null || config === void 0 ? void 0 : config.logger) !== null && _b !== void 0 ? _b : {},\n        regionInfoProvider: (_c = config === null || config === void 0 ? void 0 : config.regionInfoProvider) !== null && _c !== void 0 ? _c : endpoints_1.defaultRegionInfoProvider,\n        serviceId: (_d = config === null || config === void 0 ? void 0 : config.serviceId) !== null && _d !== void 0 ? _d : \"STS\",\n        urlParser: (_e = config === null || config === void 0 ? void 0 : config.urlParser) !== null && _e !== void 0 ? _e : url_parser_1.parseUrl,\n    });\n};\nexports.getRuntimeConfig = getRuntimeConfig;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.NODE_USE_DUALSTACK_ENDPOINT_CONFIG_OPTIONS = exports.DEFAULT_USE_DUALSTACK_ENDPOINT = exports.CONFIG_USE_DUALSTACK_ENDPOINT = exports.ENV_USE_DUALSTACK_ENDPOINT = void 0;\nconst util_config_provider_1 = require(\"@aws-sdk/util-config-provider\");\nexports.ENV_USE_DUALSTACK_ENDPOINT = \"AWS_USE_DUALSTACK_ENDPOINT\";\nexports.CONFIG_USE_DUALSTACK_ENDPOINT = \"use_dualstack_endpoint\";\nexports.DEFAULT_USE_DUALSTACK_ENDPOINT = false;\nexports.NODE_USE_DUALSTACK_ENDPOINT_CONFIG_OPTIONS = {\n    environmentVariableSelector: (env) => util_config_provider_1.booleanSelector(env, exports.ENV_USE_DUALSTACK_ENDPOINT, util_config_provider_1.SelectorType.ENV),\n    configFileSelector: (profile) => util_config_provider_1.booleanSelector(profile, exports.CONFIG_USE_DUALSTACK_ENDPOINT, util_config_provider_1.SelectorType.CONFIG),\n    default: false,\n};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.NODE_USE_FIPS_ENDPOINT_CONFIG_OPTIONS = exports.DEFAULT_USE_FIPS_ENDPOINT = exports.CONFIG_USE_FIPS_ENDPOINT = exports.ENV_USE_FIPS_ENDPOINT = void 0;\nconst util_config_provider_1 = require(\"@aws-sdk/util-config-provider\");\nexports.ENV_USE_FIPS_ENDPOINT = \"AWS_USE_FIPS_ENDPOINT\";\nexports.CONFIG_USE_FIPS_ENDPOINT = \"use_fips_endpoint\";\nexports.DEFAULT_USE_FIPS_ENDPOINT = false;\nexports.NODE_USE_FIPS_ENDPOINT_CONFIG_OPTIONS = {\n    environmentVariableSelector: (env) => util_config_provider_1.booleanSelector(env, exports.ENV_USE_FIPS_ENDPOINT, util_config_provider_1.SelectorType.ENV),\n    configFileSelector: (profile) => util_config_provider_1.booleanSelector(profile, exports.CONFIG_USE_FIPS_ENDPOINT, util_config_provider_1.SelectorType.CONFIG),\n    default: false,\n};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = require(\"tslib\");\ntslib_1.__exportStar(require(\"./NodeUseDualstackEndpointConfigOptions\"), exports);\ntslib_1.__exportStar(require(\"./NodeUseFipsEndpointConfigOptions\"), exports);\ntslib_1.__exportStar(require(\"./resolveCustomEndpointsConfig\"), exports);\ntslib_1.__exportStar(require(\"./resolveEndpointsConfig\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.resolveCustomEndpointsConfig = void 0;\nconst normalizeBoolean_1 = require(\"./utils/normalizeBoolean\");\nconst normalizeEndpoint_1 = require(\"./utils/normalizeEndpoint\");\nconst resolveCustomEndpointsConfig = (input) => {\n    var _a;\n    return ({\n        ...input,\n        tls: (_a = input.tls) !== null && _a !== void 0 ? _a : true,\n        endpoint: normalizeEndpoint_1.normalizeEndpoint(input),\n        isCustomEndpoint: true,\n        useDualstackEndpoint: normalizeBoolean_1.normalizeBoolean(input.useDualstackEndpoint),\n    });\n};\nexports.resolveCustomEndpointsConfig = resolveCustomEndpointsConfig;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.resolveEndpointsConfig = void 0;\nconst getEndpointFromRegion_1 = require(\"./utils/getEndpointFromRegion\");\nconst normalizeBoolean_1 = require(\"./utils/normalizeBoolean\");\nconst normalizeEndpoint_1 = require(\"./utils/normalizeEndpoint\");\nconst resolveEndpointsConfig = (input) => {\n    var _a;\n    const useDualstackEndpoint = normalizeBoolean_1.normalizeBoolean(input.useDualstackEndpoint);\n    const { endpoint, useFipsEndpoint } = input;\n    return {\n        ...input,\n        tls: (_a = input.tls) !== null && _a !== void 0 ? _a : true,\n        endpoint: endpoint\n            ? normalizeEndpoint_1.normalizeEndpoint({ ...input, endpoint })\n            : () => getEndpointFromRegion_1.getEndpointFromRegion({ ...input, useDualstackEndpoint, useFipsEndpoint }),\n        isCustomEndpoint: endpoint ? true : false,\n        useDualstackEndpoint,\n    };\n};\nexports.resolveEndpointsConfig = resolveEndpointsConfig;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getEndpointFromRegion = void 0;\nconst getEndpointFromRegion = async (input) => {\n    var _a;\n    const { tls = true } = input;\n    const region = await input.region();\n    const dnsHostRegex = new RegExp(/^([a-zA-Z0-9]|[a-zA-Z0-9][a-zA-Z0-9-]{0,61}[a-zA-Z0-9])$/);\n    if (!dnsHostRegex.test(region)) {\n        throw new Error(\"Invalid region in client config\");\n    }\n    const useDualstackEndpoint = await input.useDualstackEndpoint();\n    const useFipsEndpoint = await input.useFipsEndpoint();\n    const { hostname } = (_a = (await input.regionInfoProvider(region, { useDualstackEndpoint, useFipsEndpoint }))) !== null && _a !== void 0 ? _a : {};\n    if (!hostname) {\n        throw new Error(\"Cannot resolve hostname from client config\");\n    }\n    return input.urlParser(`${tls ? \"https:\" : \"http:\"}//${hostname}`);\n};\nexports.getEndpointFromRegion = getEndpointFromRegion;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.normalizeBoolean = void 0;\nconst normalizeBoolean = (value) => {\n    if (typeof value === \"boolean\") {\n        const promisified = Promise.resolve(value);\n        return () => promisified;\n    }\n    return value;\n};\nexports.normalizeBoolean = normalizeBoolean;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.normalizeEndpoint = void 0;\nconst normalizeEndpoint = ({ endpoint, urlParser }) => {\n    if (typeof endpoint === \"string\") {\n        const promisified = Promise.resolve(urlParser(endpoint));\n        return () => promisified;\n    }\n    else if (typeof endpoint === \"object\") {\n        const promisified = Promise.resolve(endpoint);\n        return () => promisified;\n    }\n    return endpoint;\n};\nexports.normalizeEndpoint = normalizeEndpoint;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = require(\"tslib\");\ntslib_1.__exportStar(require(\"./endpointsConfig\"), exports);\ntslib_1.__exportStar(require(\"./regionConfig\"), exports);\ntslib_1.__exportStar(require(\"./regionInfo\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.NODE_REGION_CONFIG_FILE_OPTIONS = exports.NODE_REGION_CONFIG_OPTIONS = exports.REGION_INI_NAME = exports.REGION_ENV_NAME = void 0;\nexports.REGION_ENV_NAME = \"AWS_REGION\";\nexports.REGION_INI_NAME = \"region\";\nexports.NODE_REGION_CONFIG_OPTIONS = {\n    environmentVariableSelector: (env) => env[exports.REGION_ENV_NAME],\n    configFileSelector: (profile) => profile[exports.REGION_INI_NAME],\n    default: () => {\n        throw new Error(\"Region is missing\");\n    },\n};\nexports.NODE_REGION_CONFIG_FILE_OPTIONS = {\n    preferredFile: \"credentials\",\n};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getRealRegion = void 0;\nconst isFipsRegion_1 = require(\"./isFipsRegion\");\nconst getRealRegion = (region) => isFipsRegion_1.isFipsRegion(region)\n    ? [\"fips-aws-global\", \"aws-fips\"].includes(region)\n        ? \"us-east-1\"\n        : region.replace(/fips-(dkr-|prod-)?|-fips/, \"\")\n    : region;\nexports.getRealRegion = getRealRegion;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = require(\"tslib\");\ntslib_1.__exportStar(require(\"./config\"), exports);\ntslib_1.__exportStar(require(\"./resolveRegionConfig\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isFipsRegion = void 0;\nconst isFipsRegion = (region) => typeof region === \"string\" && (region.startsWith(\"fips-\") || region.endsWith(\"-fips\"));\nexports.isFipsRegion = isFipsRegion;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.resolveRegionConfig = void 0;\nconst getRealRegion_1 = require(\"./getRealRegion\");\nconst isFipsRegion_1 = require(\"./isFipsRegion\");\nconst resolveRegionConfig = (input) => {\n    const { region, useFipsEndpoint } = input;\n    if (!region) {\n        throw new Error(\"Region is missing\");\n    }\n    return {\n        ...input,\n        region: async () => {\n            if (typeof region === \"string\") {\n                return getRealRegion_1.getRealRegion(region);\n            }\n            const providedRegion = await region();\n            return getRealRegion_1.getRealRegion(providedRegion);\n        },\n        useFipsEndpoint: async () => {\n            const providedRegion = typeof region === \"string\" ? region : await region();\n            if (isFipsRegion_1.isFipsRegion(providedRegion)) {\n                return true;\n            }\n            return typeof useFipsEndpoint === \"boolean\" ? Promise.resolve(useFipsEndpoint) : useFipsEndpoint();\n        },\n    };\n};\nexports.resolveRegionConfig = resolveRegionConfig;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getHostnameFromVariants = void 0;\nconst getHostnameFromVariants = (variants = [], { useFipsEndpoint, useDualstackEndpoint }) => {\n    var _a;\n    return (_a = variants.find(({ tags }) => useFipsEndpoint === tags.includes(\"fips\") && useDualstackEndpoint === tags.includes(\"dualstack\"))) === null || _a === void 0 ? void 0 : _a.hostname;\n};\nexports.getHostnameFromVariants = getHostnameFromVariants;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getRegionInfo = void 0;\nconst getHostnameFromVariants_1 = require(\"./getHostnameFromVariants\");\nconst getResolvedHostname_1 = require(\"./getResolvedHostname\");\nconst getResolvedPartition_1 = require(\"./getResolvedPartition\");\nconst getResolvedSigningRegion_1 = require(\"./getResolvedSigningRegion\");\nconst getRegionInfo = (region, { useFipsEndpoint = false, useDualstackEndpoint = false, signingService, regionHash, partitionHash, }) => {\n    var _a, _b, _c, _d, _e, _f;\n    const partition = getResolvedPartition_1.getResolvedPartition(region, { partitionHash });\n    const resolvedRegion = region in regionHash ? region : (_b = (_a = partitionHash[partition]) === null || _a === void 0 ? void 0 : _a.endpoint) !== null && _b !== void 0 ? _b : region;\n    const hostnameOptions = { useFipsEndpoint, useDualstackEndpoint };\n    const regionHostname = getHostnameFromVariants_1.getHostnameFromVariants((_c = regionHash[resolvedRegion]) === null || _c === void 0 ? void 0 : _c.variants, hostnameOptions);\n    const partitionHostname = getHostnameFromVariants_1.getHostnameFromVariants((_d = partitionHash[partition]) === null || _d === void 0 ? void 0 : _d.variants, hostnameOptions);\n    const hostname = getResolvedHostname_1.getResolvedHostname(resolvedRegion, { regionHostname, partitionHostname });\n    if (hostname === undefined) {\n        throw new Error(`Endpoint resolution failed for: ${{ resolvedRegion, useFipsEndpoint, useDualstackEndpoint }}`);\n    }\n    const signingRegion = getResolvedSigningRegion_1.getResolvedSigningRegion(hostname, {\n        signingRegion: (_e = regionHash[resolvedRegion]) === null || _e === void 0 ? void 0 : _e.signingRegion,\n        regionRegex: partitionHash[partition].regionRegex,\n        useFipsEndpoint,\n    });\n    return {\n        partition,\n        signingService,\n        hostname,\n        ...(signingRegion && { signingRegion }),\n        ...(((_f = regionHash[resolvedRegion]) === null || _f === void 0 ? void 0 : _f.signingService) && {\n            signingService: regionHash[resolvedRegion].signingService,\n        }),\n    };\n};\nexports.getRegionInfo = getRegionInfo;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getResolvedHostname = void 0;\nconst getResolvedHostname = (resolvedRegion, { regionHostname, partitionHostname }) => regionHostname\n    ? regionHostname\n    : partitionHostname\n        ? partitionHostname.replace(\"{region}\", resolvedRegion)\n        : undefined;\nexports.getResolvedHostname = getResolvedHostname;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getResolvedPartition = void 0;\nconst getResolvedPartition = (region, { partitionHash }) => { var _a; return (_a = Object.keys(partitionHash || {}).find((key) => partitionHash[key].regions.includes(region))) !== null && _a !== void 0 ? _a : \"aws\"; };\nexports.getResolvedPartition = getResolvedPartition;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getResolvedSigningRegion = void 0;\nconst getResolvedSigningRegion = (hostname, { signingRegion, regionRegex, useFipsEndpoint }) => {\n    if (signingRegion) {\n        return signingRegion;\n    }\n    else if (useFipsEndpoint) {\n        const regionRegexJs = regionRegex.replace(\"\\\\\\\\\", \"\\\\\").replace(/^\\^/g, \"\\\\.\").replace(/\\$$/g, \"\\\\.\");\n        const regionRegexmatchArray = hostname.match(regionRegexJs);\n        if (regionRegexmatchArray) {\n            return regionRegexmatchArray[0].slice(1, -1);\n        }\n    }\n};\nexports.getResolvedSigningRegion = getResolvedSigningRegion;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = require(\"tslib\");\ntslib_1.__exportStar(require(\"./PartitionHash\"), exports);\ntslib_1.__exportStar(require(\"./RegionHash\"), exports);\ntslib_1.__exportStar(require(\"./getRegionInfo\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.fromEnv = exports.ENV_EXPIRATION = exports.ENV_SESSION = exports.ENV_SECRET = exports.ENV_KEY = void 0;\nconst property_provider_1 = require(\"@aws-sdk/property-provider\");\nexports.ENV_KEY = \"AWS_ACCESS_KEY_ID\";\nexports.ENV_SECRET = \"AWS_SECRET_ACCESS_KEY\";\nexports.ENV_SESSION = \"AWS_SESSION_TOKEN\";\nexports.ENV_EXPIRATION = \"AWS_CREDENTIAL_EXPIRATION\";\nfunction fromEnv() {\n    return () => {\n        const accessKeyId = process.env[exports.ENV_KEY];\n        const secretAccessKey = process.env[exports.ENV_SECRET];\n        const expiry = process.env[exports.ENV_EXPIRATION];\n        if (accessKeyId && secretAccessKey) {\n            return Promise.resolve({\n                accessKeyId,\n                secretAccessKey,\n                sessionToken: process.env[exports.ENV_SESSION],\n                expiration: expiry ? new Date(expiry) : undefined,\n            });\n        }\n        return Promise.reject(new property_provider_1.CredentialsProviderError(\"Unable to find environment variable credentials.\"));\n    };\n}\nexports.fromEnv = fromEnv;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Endpoint = void 0;\nvar Endpoint;\n(function (Endpoint) {\n    Endpoint[\"IPv4\"] = \"http://169.254.169.254\";\n    Endpoint[\"IPv6\"] = \"http://[fd00:ec2::254]\";\n})(Endpoint = exports.Endpoint || (exports.Endpoint = {}));\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ENDPOINT_CONFIG_OPTIONS = exports.CONFIG_ENDPOINT_NAME = exports.ENV_ENDPOINT_NAME = void 0;\nexports.ENV_ENDPOINT_NAME = \"AWS_EC2_METADATA_SERVICE_ENDPOINT\";\nexports.CONFIG_ENDPOINT_NAME = \"ec2_metadata_service_endpoint\";\nexports.ENDPOINT_CONFIG_OPTIONS = {\n    environmentVariableSelector: (env) => env[exports.ENV_ENDPOINT_NAME],\n    configFileSelector: (profile) => profile[exports.CONFIG_ENDPOINT_NAME],\n    default: undefined,\n};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.EndpointMode = void 0;\nvar EndpointMode;\n(function (EndpointMode) {\n    EndpointMode[\"IPv4\"] = \"IPv4\";\n    EndpointMode[\"IPv6\"] = \"IPv6\";\n})(EndpointMode = exports.EndpointMode || (exports.EndpointMode = {}));\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ENDPOINT_MODE_CONFIG_OPTIONS = exports.CONFIG_ENDPOINT_MODE_NAME = exports.ENV_ENDPOINT_MODE_NAME = void 0;\nconst EndpointMode_1 = require(\"./EndpointMode\");\nexports.ENV_ENDPOINT_MODE_NAME = \"AWS_EC2_METADATA_SERVICE_ENDPOINT_MODE\";\nexports.CONFIG_ENDPOINT_MODE_NAME = \"ec2_metadata_service_endpoint_mode\";\nexports.ENDPOINT_MODE_CONFIG_OPTIONS = {\n    environmentVariableSelector: (env) => env[exports.ENV_ENDPOINT_MODE_NAME],\n    configFileSelector: (profile) => profile[exports.CONFIG_ENDPOINT_MODE_NAME],\n    default: EndpointMode_1.EndpointMode.IPv4,\n};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.fromContainerMetadata = exports.ENV_CMDS_AUTH_TOKEN = exports.ENV_CMDS_RELATIVE_URI = exports.ENV_CMDS_FULL_URI = void 0;\nconst property_provider_1 = require(\"@aws-sdk/property-provider\");\nconst url_1 = require(\"url\");\nconst httpRequest_1 = require(\"./remoteProvider/httpRequest\");\nconst ImdsCredentials_1 = require(\"./remoteProvider/ImdsCredentials\");\nconst RemoteProviderInit_1 = require(\"./remoteProvider/RemoteProviderInit\");\nconst retry_1 = require(\"./remoteProvider/retry\");\nexports.ENV_CMDS_FULL_URI = \"AWS_CONTAINER_CREDENTIALS_FULL_URI\";\nexports.ENV_CMDS_RELATIVE_URI = \"AWS_CONTAINER_CREDENTIALS_RELATIVE_URI\";\nexports.ENV_CMDS_AUTH_TOKEN = \"AWS_CONTAINER_AUTHORIZATION_TOKEN\";\nconst fromContainerMetadata = (init = {}) => {\n    const { timeout, maxRetries } = RemoteProviderInit_1.providerConfigFromInit(init);\n    return () => retry_1.retry(async () => {\n        const requestOptions = await getCmdsUri();\n        const credsResponse = JSON.parse(await requestFromEcsImds(timeout, requestOptions));\n        if (!ImdsCredentials_1.isImdsCredentials(credsResponse)) {\n            throw new property_provider_1.CredentialsProviderError(\"Invalid response received from instance metadata service.\");\n        }\n        return ImdsCredentials_1.fromImdsCredentials(credsResponse);\n    }, maxRetries);\n};\nexports.fromContainerMetadata = fromContainerMetadata;\nconst requestFromEcsImds = async (timeout, options) => {\n    if (process.env[exports.ENV_CMDS_AUTH_TOKEN]) {\n        options.headers = {\n            ...options.headers,\n            Authorization: process.env[exports.ENV_CMDS_AUTH_TOKEN],\n        };\n    }\n    const buffer = await httpRequest_1.httpRequest({\n        ...options,\n        timeout,\n    });\n    return buffer.toString();\n};\nconst CMDS_IP = \"169.254.170.2\";\nconst GREENGRASS_HOSTS = {\n    localhost: true,\n    \"127.0.0.1\": true,\n};\nconst GREENGRASS_PROTOCOLS = {\n    \"http:\": true,\n    \"https:\": true,\n};\nconst getCmdsUri = async () => {\n    if (process.env[exports.ENV_CMDS_RELATIVE_URI]) {\n        return {\n            hostname: CMDS_IP,\n            path: process.env[exports.ENV_CMDS_RELATIVE_URI],\n        };\n    }\n    if (process.env[exports.ENV_CMDS_FULL_URI]) {\n        const parsed = url_1.parse(process.env[exports.ENV_CMDS_FULL_URI]);\n        if (!parsed.hostname || !(parsed.hostname in GREENGRASS_HOSTS)) {\n            throw new property_provider_1.CredentialsProviderError(`${parsed.hostname} is not a valid container metadata service hostname`, false);\n        }\n        if (!parsed.protocol || !(parsed.protocol in GREENGRASS_PROTOCOLS)) {\n            throw new property_provider_1.CredentialsProviderError(`${parsed.protocol} is not a valid container metadata service protocol`, false);\n        }\n        return {\n            ...parsed,\n            port: parsed.port ? parseInt(parsed.port, 10) : undefined,\n        };\n    }\n    throw new property_provider_1.CredentialsProviderError(\"The container metadata credential provider cannot be used unless\" +\n        ` the ${exports.ENV_CMDS_RELATIVE_URI} or ${exports.ENV_CMDS_FULL_URI} environment` +\n        \" variable is set\", false);\n};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.fromInstanceMetadata = void 0;\nconst property_provider_1 = require(\"@aws-sdk/property-provider\");\nconst httpRequest_1 = require(\"./remoteProvider/httpRequest\");\nconst ImdsCredentials_1 = require(\"./remoteProvider/ImdsCredentials\");\nconst RemoteProviderInit_1 = require(\"./remoteProvider/RemoteProviderInit\");\nconst retry_1 = require(\"./remoteProvider/retry\");\nconst getInstanceMetadataEndpoint_1 = require(\"./utils/getInstanceMetadataEndpoint\");\nconst IMDS_PATH = \"/latest/meta-data/iam/security-credentials/\";\nconst IMDS_TOKEN_PATH = \"/latest/api/token\";\nconst fromInstanceMetadata = (init = {}) => {\n    let disableFetchToken = false;\n    const { timeout, maxRetries } = RemoteProviderInit_1.providerConfigFromInit(init);\n    const getCredentials = async (maxRetries, options) => {\n        const profile = (await retry_1.retry(async () => {\n            let profile;\n            try {\n                profile = await getProfile(options);\n            }\n            catch (err) {\n                if (err.statusCode === 401) {\n                    disableFetchToken = false;\n                }\n                throw err;\n            }\n            return profile;\n        }, maxRetries)).trim();\n        return retry_1.retry(async () => {\n            let creds;\n            try {\n                creds = await getCredentialsFromProfile(profile, options);\n            }\n            catch (err) {\n                if (err.statusCode === 401) {\n                    disableFetchToken = false;\n                }\n                throw err;\n            }\n            return creds;\n        }, maxRetries);\n    };\n    return async () => {\n        const endpoint = await getInstanceMetadataEndpoint_1.getInstanceMetadataEndpoint();\n        if (disableFetchToken) {\n            return getCredentials(maxRetries, { ...endpoint, timeout });\n        }\n        else {\n            let token;\n            try {\n                token = (await getMetadataToken({ ...endpoint, timeout })).toString();\n            }\n            catch (error) {\n                if ((error === null || error === void 0 ? void 0 : error.statusCode) === 400) {\n                    throw Object.assign(error, {\n                        message: \"EC2 Metadata token request returned error\",\n                    });\n                }\n                else if (error.message === \"TimeoutError\" || [403, 404, 405].includes(error.statusCode)) {\n                    disableFetchToken = true;\n                }\n                return getCredentials(maxRetries, { ...endpoint, timeout });\n            }\n            return getCredentials(maxRetries, {\n                ...endpoint,\n                headers: {\n                    \"x-aws-ec2-metadata-token\": token,\n                },\n                timeout,\n            });\n        }\n    };\n};\nexports.fromInstanceMetadata = fromInstanceMetadata;\nconst getMetadataToken = async (options) => httpRequest_1.httpRequest({\n    ...options,\n    path: IMDS_TOKEN_PATH,\n    method: \"PUT\",\n    headers: {\n        \"x-aws-ec2-metadata-token-ttl-seconds\": \"21600\",\n    },\n});\nconst getProfile = async (options) => (await httpRequest_1.httpRequest({ ...options, path: IMDS_PATH })).toString();\nconst getCredentialsFromProfile = async (profile, options) => {\n    const credsResponse = JSON.parse((await httpRequest_1.httpRequest({\n        ...options,\n        path: IMDS_PATH + profile,\n    })).toString());\n    if (!ImdsCredentials_1.isImdsCredentials(credsResponse)) {\n        throw new property_provider_1.CredentialsProviderError(\"Invalid response received from instance metadata service.\");\n    }\n    return ImdsCredentials_1.fromImdsCredentials(credsResponse);\n};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getInstanceMetadataEndpoint = exports.httpRequest = void 0;\nconst tslib_1 = require(\"tslib\");\ntslib_1.__exportStar(require(\"./fromContainerMetadata\"), exports);\ntslib_1.__exportStar(require(\"./fromInstanceMetadata\"), exports);\ntslib_1.__exportStar(require(\"./remoteProvider/RemoteProviderInit\"), exports);\nvar httpRequest_1 = require(\"./remoteProvider/httpRequest\");\nObject.defineProperty(exports, \"httpRequest\", { enumerable: true, get: function () { return httpRequest_1.httpRequest; } });\nvar getInstanceMetadataEndpoint_1 = require(\"./utils/getInstanceMetadataEndpoint\");\nObject.defineProperty(exports, \"getInstanceMetadataEndpoint\", { enumerable: true, get: function () { return getInstanceMetadataEndpoint_1.getInstanceMetadataEndpoint; } });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.fromImdsCredentials = exports.isImdsCredentials = void 0;\nconst isImdsCredentials = (arg) => Boolean(arg) &&\n    typeof arg === \"object\" &&\n    typeof arg.AccessKeyId === \"string\" &&\n    typeof arg.SecretAccessKey === \"string\" &&\n    typeof arg.Token === \"string\" &&\n    typeof arg.Expiration === \"string\";\nexports.isImdsCredentials = isImdsCredentials;\nconst fromImdsCredentials = (creds) => ({\n    accessKeyId: creds.AccessKeyId,\n    secretAccessKey: creds.SecretAccessKey,\n    sessionToken: creds.Token,\n    expiration: new Date(creds.Expiration),\n});\nexports.fromImdsCredentials = fromImdsCredentials;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.providerConfigFromInit = exports.DEFAULT_MAX_RETRIES = exports.DEFAULT_TIMEOUT = void 0;\nexports.DEFAULT_TIMEOUT = 1000;\nexports.DEFAULT_MAX_RETRIES = 0;\nconst providerConfigFromInit = ({ maxRetries = exports.DEFAULT_MAX_RETRIES, timeout = exports.DEFAULT_TIMEOUT, }) => ({ maxRetries, timeout });\nexports.providerConfigFromInit = providerConfigFromInit;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.httpRequest = void 0;\nconst property_provider_1 = require(\"@aws-sdk/property-provider\");\nconst buffer_1 = require(\"buffer\");\nconst http_1 = require(\"http\");\nfunction httpRequest(options) {\n    return new Promise((resolve, reject) => {\n        var _a;\n        const req = http_1.request({\n            method: \"GET\",\n            ...options,\n            hostname: (_a = options.hostname) === null || _a === void 0 ? void 0 : _a.replace(/^\\[(.+)\\]$/, \"$1\"),\n        });\n        req.on(\"error\", (err) => {\n            reject(Object.assign(new property_provider_1.ProviderError(\"Unable to connect to instance metadata service\"), err));\n            req.destroy();\n        });\n        req.on(\"timeout\", () => {\n            reject(new property_provider_1.ProviderError(\"TimeoutError from instance metadata service\"));\n            req.destroy();\n        });\n        req.on(\"response\", (res) => {\n            const { statusCode = 400 } = res;\n            if (statusCode < 200 || 300 <= statusCode) {\n                reject(Object.assign(new property_provider_1.ProviderError(\"Error response received from instance metadata service\"), { statusCode }));\n                req.destroy();\n            }\n            const chunks = [];\n            res.on(\"data\", (chunk) => {\n                chunks.push(chunk);\n            });\n            res.on(\"end\", () => {\n                resolve(buffer_1.Buffer.concat(chunks));\n                req.destroy();\n            });\n        });\n        req.end();\n    });\n}\nexports.httpRequest = httpRequest;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.retry = void 0;\nconst retry = (toRetry, maxRetries) => {\n    let promise = toRetry();\n    for (let i = 0; i < maxRetries; i++) {\n        promise = promise.catch(toRetry);\n    }\n    return promise;\n};\nexports.retry = retry;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getInstanceMetadataEndpoint = void 0;\nconst node_config_provider_1 = require(\"@aws-sdk/node-config-provider\");\nconst url_parser_1 = require(\"@aws-sdk/url-parser\");\nconst Endpoint_1 = require(\"../config/Endpoint\");\nconst EndpointConfigOptions_1 = require(\"../config/EndpointConfigOptions\");\nconst EndpointMode_1 = require(\"../config/EndpointMode\");\nconst EndpointModeConfigOptions_1 = require(\"../config/EndpointModeConfigOptions\");\nconst getInstanceMetadataEndpoint = async () => url_parser_1.parseUrl((await getFromEndpointConfig()) || (await getFromEndpointModeConfig()));\nexports.getInstanceMetadataEndpoint = getInstanceMetadataEndpoint;\nconst getFromEndpointConfig = async () => node_config_provider_1.loadConfig(EndpointConfigOptions_1.ENDPOINT_CONFIG_OPTIONS)();\nconst getFromEndpointModeConfig = async () => {\n    const endpointMode = await node_config_provider_1.loadConfig(EndpointModeConfigOptions_1.ENDPOINT_MODE_CONFIG_OPTIONS)();\n    switch (endpointMode) {\n        case EndpointMode_1.EndpointMode.IPv4:\n            return Endpoint_1.Endpoint.IPv4;\n        case EndpointMode_1.EndpointMode.IPv6:\n            return Endpoint_1.Endpoint.IPv6;\n        default:\n            throw new Error(`Unsupported endpoint mode: ${endpointMode}.` + ` Select from ${Object.values(EndpointMode_1.EndpointMode)}`);\n    }\n};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.fromIni = void 0;\nconst credential_provider_env_1 = require(\"@aws-sdk/credential-provider-env\");\nconst credential_provider_imds_1 = require(\"@aws-sdk/credential-provider-imds\");\nconst credential_provider_sso_1 = require(\"@aws-sdk/credential-provider-sso\");\nconst credential_provider_web_identity_1 = require(\"@aws-sdk/credential-provider-web-identity\");\nconst property_provider_1 = require(\"@aws-sdk/property-provider\");\nconst util_credentials_1 = require(\"@aws-sdk/util-credentials\");\nconst isStaticCredsProfile = (arg) => Boolean(arg) &&\n    typeof arg === \"object\" &&\n    typeof arg.aws_access_key_id === \"string\" &&\n    typeof arg.aws_secret_access_key === \"string\" &&\n    [\"undefined\", \"string\"].indexOf(typeof arg.aws_session_token) > -1;\nconst isWebIdentityProfile = (arg) => Boolean(arg) &&\n    typeof arg === \"object\" &&\n    typeof arg.web_identity_token_file === \"string\" &&\n    typeof arg.role_arn === \"string\" &&\n    [\"undefined\", \"string\"].indexOf(typeof arg.role_session_name) > -1;\nconst isAssumeRoleProfile = (arg) => Boolean(arg) &&\n    typeof arg === \"object\" &&\n    typeof arg.role_arn === \"string\" &&\n    [\"undefined\", \"string\"].indexOf(typeof arg.role_session_name) > -1 &&\n    [\"undefined\", \"string\"].indexOf(typeof arg.external_id) > -1 &&\n    [\"undefined\", \"string\"].indexOf(typeof arg.mfa_serial) > -1;\nconst isAssumeRoleWithSourceProfile = (arg) => isAssumeRoleProfile(arg) && typeof arg.source_profile === \"string\" && typeof arg.credential_source === \"undefined\";\nconst isAssumeRoleWithProviderProfile = (arg) => isAssumeRoleProfile(arg) && typeof arg.credential_source === \"string\" && typeof arg.source_profile === \"undefined\";\nconst fromIni = (init = {}) => async () => {\n    const profiles = await util_credentials_1.parseKnownFiles(init);\n    return resolveProfileData(util_credentials_1.getMasterProfileName(init), profiles, init);\n};\nexports.fromIni = fromIni;\nconst resolveProfileData = async (profileName, profiles, options, visitedProfiles = {}) => {\n    const data = profiles[profileName];\n    if (Object.keys(visitedProfiles).length > 0 && isStaticCredsProfile(data)) {\n        return resolveStaticCredentials(data);\n    }\n    if (isAssumeRoleWithSourceProfile(data) || isAssumeRoleWithProviderProfile(data)) {\n        const { external_id: ExternalId, mfa_serial, role_arn: RoleArn, role_session_name: RoleSessionName = \"aws-sdk-js-\" + Date.now(), source_profile, credential_source, } = data;\n        if (!options.roleAssumer) {\n            throw new property_provider_1.CredentialsProviderError(`Profile ${profileName} requires a role to be assumed, but no` + ` role assumption callback was provided.`, false);\n        }\n        if (source_profile && source_profile in visitedProfiles) {\n            throw new property_provider_1.CredentialsProviderError(`Detected a cycle attempting to resolve credentials for profile` +\n                ` ${util_credentials_1.getMasterProfileName(options)}. Profiles visited: ` +\n                Object.keys(visitedProfiles).join(\", \"), false);\n        }\n        const sourceCreds = source_profile\n            ? resolveProfileData(source_profile, profiles, options, {\n                ...visitedProfiles,\n                [source_profile]: true,\n            })\n            : resolveCredentialSource(credential_source, profileName)();\n        const params = { RoleArn, RoleSessionName, ExternalId };\n        if (mfa_serial) {\n            if (!options.mfaCodeProvider) {\n                throw new property_provider_1.CredentialsProviderError(`Profile ${profileName} requires multi-factor authentication,` + ` but no MFA code callback was provided.`, false);\n            }\n            params.SerialNumber = mfa_serial;\n            params.TokenCode = await options.mfaCodeProvider(mfa_serial);\n        }\n        return options.roleAssumer(await sourceCreds, params);\n    }\n    if (isStaticCredsProfile(data)) {\n        return resolveStaticCredentials(data);\n    }\n    if (isWebIdentityProfile(data)) {\n        return resolveWebIdentityCredentials(data, options);\n    }\n    if (credential_provider_sso_1.isSsoProfile(data)) {\n        const { sso_start_url, sso_account_id, sso_region, sso_role_name } = credential_provider_sso_1.validateSsoProfile(data);\n        return credential_provider_sso_1.fromSSO({\n            ssoStartUrl: sso_start_url,\n            ssoAccountId: sso_account_id,\n            ssoRegion: sso_region,\n            ssoRoleName: sso_role_name,\n        })();\n    }\n    throw new property_provider_1.CredentialsProviderError(`Profile ${profileName} could not be found or parsed in shared` + ` credentials file.`);\n};\nconst resolveCredentialSource = (credentialSource, profileName) => {\n    const sourceProvidersMap = {\n        EcsContainer: credential_provider_imds_1.fromContainerMetadata,\n        Ec2InstanceMetadata: credential_provider_imds_1.fromInstanceMetadata,\n        Environment: credential_provider_env_1.fromEnv,\n    };\n    if (credentialSource in sourceProvidersMap) {\n        return sourceProvidersMap[credentialSource]();\n    }\n    else {\n        throw new property_provider_1.CredentialsProviderError(`Unsupported credential source in profile ${profileName}. Got ${credentialSource}, ` +\n            `expected EcsContainer or Ec2InstanceMetadata or Environment.`);\n    }\n};\nconst resolveStaticCredentials = (profile) => Promise.resolve({\n    accessKeyId: profile.aws_access_key_id,\n    secretAccessKey: profile.aws_secret_access_key,\n    sessionToken: profile.aws_session_token,\n});\nconst resolveWebIdentityCredentials = async (profile, options) => credential_provider_web_identity_1.fromTokenFile({\n    webIdentityTokenFile: profile.web_identity_token_file,\n    roleArn: profile.role_arn,\n    roleSessionName: profile.role_session_name,\n    roleAssumerWithWebIdentity: options.roleAssumerWithWebIdentity,\n})();\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.defaultProvider = exports.ENV_IMDS_DISABLED = void 0;\nconst credential_provider_env_1 = require(\"@aws-sdk/credential-provider-env\");\nconst credential_provider_imds_1 = require(\"@aws-sdk/credential-provider-imds\");\nconst credential_provider_ini_1 = require(\"@aws-sdk/credential-provider-ini\");\nconst credential_provider_process_1 = require(\"@aws-sdk/credential-provider-process\");\nconst credential_provider_sso_1 = require(\"@aws-sdk/credential-provider-sso\");\nconst credential_provider_web_identity_1 = require(\"@aws-sdk/credential-provider-web-identity\");\nconst property_provider_1 = require(\"@aws-sdk/property-provider\");\nconst shared_ini_file_loader_1 = require(\"@aws-sdk/shared-ini-file-loader\");\nconst util_credentials_1 = require(\"@aws-sdk/util-credentials\");\nexports.ENV_IMDS_DISABLED = \"AWS_EC2_METADATA_DISABLED\";\nconst defaultProvider = (init = {}) => {\n    const options = { profile: process.env[util_credentials_1.ENV_PROFILE], ...init };\n    if (!options.loadedConfig)\n        options.loadedConfig = shared_ini_file_loader_1.loadSharedConfigFiles(init);\n    const providers = [\n        credential_provider_sso_1.fromSSO(options),\n        credential_provider_ini_1.fromIni(options),\n        credential_provider_process_1.fromProcess(options),\n        credential_provider_web_identity_1.fromTokenFile(options),\n        remoteProvider(options),\n        async () => {\n            throw new property_provider_1.CredentialsProviderError(\"Could not load credentials from any providers\", false);\n        },\n    ];\n    if (!options.profile)\n        providers.unshift(credential_provider_env_1.fromEnv());\n    const providerChain = property_provider_1.chain(...providers);\n    return property_provider_1.memoize(providerChain, (credentials) => credentials.expiration !== undefined && credentials.expiration.getTime() - Date.now() < 300000, (credentials) => credentials.expiration !== undefined);\n};\nexports.defaultProvider = defaultProvider;\nconst remoteProvider = (init) => {\n    if (process.env[credential_provider_imds_1.ENV_CMDS_RELATIVE_URI] || process.env[credential_provider_imds_1.ENV_CMDS_FULL_URI]) {\n        return credential_provider_imds_1.fromContainerMetadata(init);\n    }\n    if (process.env[exports.ENV_IMDS_DISABLED]) {\n        return () => Promise.reject(new property_provider_1.CredentialsProviderError(\"EC2 Instance Metadata Service access disabled\"));\n    }\n    return credential_provider_imds_1.fromInstanceMetadata(init);\n};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.fromProcess = exports.ENV_PROFILE = void 0;\nconst property_provider_1 = require(\"@aws-sdk/property-provider\");\nconst util_credentials_1 = require(\"@aws-sdk/util-credentials\");\nconst child_process_1 = require(\"child_process\");\nexports.ENV_PROFILE = \"AWS_PROFILE\";\nconst fromProcess = (init = {}) => async () => {\n    const profiles = await util_credentials_1.parseKnownFiles(init);\n    return resolveProcessCredentials(util_credentials_1.getMasterProfileName(init), profiles);\n};\nexports.fromProcess = fromProcess;\nconst resolveProcessCredentials = async (profileName, profiles) => {\n    const profile = profiles[profileName];\n    if (profiles[profileName]) {\n        const credentialProcess = profile[\"credential_process\"];\n        if (credentialProcess !== undefined) {\n            return await execPromise(credentialProcess)\n                .then((processResult) => {\n                let data;\n                try {\n                    data = JSON.parse(processResult);\n                }\n                catch (_a) {\n                    throw Error(`Profile ${profileName} credential_process returned invalid JSON.`);\n                }\n                const { Version: version, AccessKeyId: accessKeyId, SecretAccessKey: secretAccessKey, SessionToken: sessionToken, Expiration: expiration, } = data;\n                if (version !== 1) {\n                    throw Error(`Profile ${profileName} credential_process did not return Version 1.`);\n                }\n                if (accessKeyId === undefined || secretAccessKey === undefined) {\n                    throw Error(`Profile ${profileName} credential_process returned invalid credentials.`);\n                }\n                let expirationUnix;\n                if (expiration) {\n                    const currentTime = new Date();\n                    const expireTime = new Date(expiration);\n                    if (expireTime < currentTime) {\n                        throw Error(`Profile ${profileName} credential_process returned expired credentials.`);\n                    }\n                    expirationUnix = Math.floor(new Date(expiration).valueOf() / 1000);\n                }\n                return {\n                    accessKeyId,\n                    secretAccessKey,\n                    sessionToken,\n                    expirationUnix,\n                };\n            })\n                .catch((error) => {\n                throw new property_provider_1.CredentialsProviderError(error.message);\n            });\n        }\n        else {\n            throw new property_provider_1.CredentialsProviderError(`Profile ${profileName} did not contain credential_process.`);\n        }\n    }\n    else {\n        throw new property_provider_1.CredentialsProviderError(`Profile ${profileName} could not be found in shared credentials file.`);\n    }\n};\nconst execPromise = (command) => new Promise(function (resolve, reject) {\n    child_process_1.exec(command, (error, stdout) => {\n        if (error) {\n            reject(error);\n            return;\n        }\n        resolve(stdout.trim());\n    });\n});\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isSsoProfile = exports.validateSsoProfile = exports.fromSSO = exports.EXPIRE_WINDOW_MS = void 0;\nconst client_sso_1 = require(\"@aws-sdk/client-sso\");\nconst property_provider_1 = require(\"@aws-sdk/property-provider\");\nconst shared_ini_file_loader_1 = require(\"@aws-sdk/shared-ini-file-loader\");\nconst util_credentials_1 = require(\"@aws-sdk/util-credentials\");\nconst crypto_1 = require(\"crypto\");\nconst fs_1 = require(\"fs\");\nconst path_1 = require(\"path\");\nexports.EXPIRE_WINDOW_MS = 15 * 60 * 1000;\nconst SHOULD_FAIL_CREDENTIAL_CHAIN = false;\nconst fromSSO = (init = {}) => async () => {\n    const { ssoStartUrl, ssoAccountId, ssoRegion, ssoRoleName, ssoClient } = init;\n    if (!ssoStartUrl && !ssoAccountId && !ssoRegion && !ssoRoleName) {\n        const profiles = await util_credentials_1.parseKnownFiles(init);\n        const profileName = util_credentials_1.getMasterProfileName(init);\n        const profile = profiles[profileName];\n        if (!exports.isSsoProfile(profile)) {\n            throw new property_provider_1.CredentialsProviderError(`Profile ${profileName} is not configured with SSO credentials.`);\n        }\n        const { sso_start_url, sso_account_id, sso_region, sso_role_name } = exports.validateSsoProfile(profile);\n        return resolveSSOCredentials({\n            ssoStartUrl: sso_start_url,\n            ssoAccountId: sso_account_id,\n            ssoRegion: sso_region,\n            ssoRoleName: sso_role_name,\n            ssoClient: ssoClient,\n        });\n    }\n    else if (!ssoStartUrl || !ssoAccountId || !ssoRegion || !ssoRoleName) {\n        throw new property_provider_1.CredentialsProviderError('Incomplete configuration. The fromSSO() argument hash must include \"ssoStartUrl\",' +\n            ' \"ssoAccountId\", \"ssoRegion\", \"ssoRoleName\"');\n    }\n    else {\n        return resolveSSOCredentials({ ssoStartUrl, ssoAccountId, ssoRegion, ssoRoleName, ssoClient });\n    }\n};\nexports.fromSSO = fromSSO;\nconst resolveSSOCredentials = async ({ ssoStartUrl, ssoAccountId, ssoRegion, ssoRoleName, ssoClient, }) => {\n    const hasher = crypto_1.createHash(\"sha1\");\n    const cacheName = hasher.update(ssoStartUrl).digest(\"hex\");\n    const tokenFile = path_1.join(shared_ini_file_loader_1.getHomeDir(), \".aws\", \"sso\", \"cache\", `${cacheName}.json`);\n    let token;\n    try {\n        token = JSON.parse(fs_1.readFileSync(tokenFile, { encoding: \"utf-8\" }));\n        if (new Date(token.expiresAt).getTime() - Date.now() <= exports.EXPIRE_WINDOW_MS) {\n            throw new Error(\"SSO token is expired.\");\n        }\n    }\n    catch (e) {\n        throw new property_provider_1.CredentialsProviderError(`The SSO session associated with this profile has expired or is otherwise invalid. To refresh this SSO session ` +\n            `run aws sso login with the corresponding profile.`, SHOULD_FAIL_CREDENTIAL_CHAIN);\n    }\n    const { accessToken } = token;\n    const sso = ssoClient || new client_sso_1.SSOClient({ region: ssoRegion });\n    let ssoResp;\n    try {\n        ssoResp = await sso.send(new client_sso_1.GetRoleCredentialsCommand({\n            accountId: ssoAccountId,\n            roleName: ssoRoleName,\n            accessToken,\n        }));\n    }\n    catch (e) {\n        throw property_provider_1.CredentialsProviderError.from(e, SHOULD_FAIL_CREDENTIAL_CHAIN);\n    }\n    const { roleCredentials: { accessKeyId, secretAccessKey, sessionToken, expiration } = {} } = ssoResp;\n    if (!accessKeyId || !secretAccessKey || !sessionToken || !expiration) {\n        throw new property_provider_1.CredentialsProviderError(\"SSO returns an invalid temporary credential.\", SHOULD_FAIL_CREDENTIAL_CHAIN);\n    }\n    return { accessKeyId, secretAccessKey, sessionToken, expiration: new Date(expiration) };\n};\nconst validateSsoProfile = (profile) => {\n    const { sso_start_url, sso_account_id, sso_region, sso_role_name } = profile;\n    if (!sso_start_url || !sso_account_id || !sso_region || !sso_role_name) {\n        throw new property_provider_1.CredentialsProviderError(`Profile is configured with invalid SSO credentials. Required parameters \"sso_account_id\", \"sso_region\", ` +\n            `\"sso_role_name\", \"sso_start_url\". Got ${Object.keys(profile).join(\", \")}\\nReference: https://docs.aws.amazon.com/cli/latest/userguide/cli-configure-sso.html`, SHOULD_FAIL_CREDENTIAL_CHAIN);\n    }\n    return profile;\n};\nexports.validateSsoProfile = validateSsoProfile;\nconst isSsoProfile = (arg) => arg &&\n    (typeof arg.sso_start_url === \"string\" ||\n        typeof arg.sso_account_id === \"string\" ||\n        typeof arg.sso_region === \"string\" ||\n        typeof arg.sso_role_name === \"string\");\nexports.isSsoProfile = isSsoProfile;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.fromTokenFile = void 0;\nconst property_provider_1 = require(\"@aws-sdk/property-provider\");\nconst fs_1 = require(\"fs\");\nconst fromWebToken_1 = require(\"./fromWebToken\");\nconst ENV_TOKEN_FILE = \"AWS_WEB_IDENTITY_TOKEN_FILE\";\nconst ENV_ROLE_ARN = \"AWS_ROLE_ARN\";\nconst ENV_ROLE_SESSION_NAME = \"AWS_ROLE_SESSION_NAME\";\nconst fromTokenFile = (init = {}) => async () => {\n    return resolveTokenFile(init);\n};\nexports.fromTokenFile = fromTokenFile;\nconst resolveTokenFile = (init) => {\n    var _a, _b, _c;\n    const webIdentityTokenFile = (_a = init === null || init === void 0 ? void 0 : init.webIdentityTokenFile) !== null && _a !== void 0 ? _a : process.env[ENV_TOKEN_FILE];\n    const roleArn = (_b = init === null || init === void 0 ? void 0 : init.roleArn) !== null && _b !== void 0 ? _b : process.env[ENV_ROLE_ARN];\n    const roleSessionName = (_c = init === null || init === void 0 ? void 0 : init.roleSessionName) !== null && _c !== void 0 ? _c : process.env[ENV_ROLE_SESSION_NAME];\n    if (!webIdentityTokenFile || !roleArn) {\n        throw new property_provider_1.CredentialsProviderError(\"Web identity configuration not specified\");\n    }\n    return fromWebToken_1.fromWebToken({\n        ...init,\n        webIdentityToken: fs_1.readFileSync(webIdentityTokenFile, { encoding: \"ascii\" }),\n        roleArn,\n        roleSessionName,\n    })();\n};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.fromWebToken = void 0;\nconst property_provider_1 = require(\"@aws-sdk/property-provider\");\nconst fromWebToken = (init) => () => {\n    const { roleArn, roleSessionName, webIdentityToken, providerId, policyArns, policy, durationSeconds, roleAssumerWithWebIdentity, } = init;\n    if (!roleAssumerWithWebIdentity) {\n        throw new property_provider_1.CredentialsProviderError(`Role Arn '${roleArn}' needs to be assumed with web identity,` +\n            ` but no role assumption callback was provided.`, false);\n    }\n    return roleAssumerWithWebIdentity({\n        RoleArn: roleArn,\n        RoleSessionName: roleSessionName !== null && roleSessionName !== void 0 ? roleSessionName : `aws-sdk-js-session-${Date.now()}`,\n        WebIdentityToken: webIdentityToken,\n        ProviderId: providerId,\n        PolicyArns: policyArns,\n        Policy: policy,\n        DurationSeconds: durationSeconds,\n    });\n};\nexports.fromWebToken = fromWebToken;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = require(\"tslib\");\ntslib_1.__exportStar(require(\"./fromTokenFile\"), exports);\ntslib_1.__exportStar(require(\"./fromWebToken\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Hash = void 0;\nconst util_buffer_from_1 = require(\"@aws-sdk/util-buffer-from\");\nconst buffer_1 = require(\"buffer\");\nconst crypto_1 = require(\"crypto\");\nclass Hash {\n    constructor(algorithmIdentifier, secret) {\n        this.hash = secret ? crypto_1.createHmac(algorithmIdentifier, castSourceData(secret)) : crypto_1.createHash(algorithmIdentifier);\n    }\n    update(toHash, encoding) {\n        this.hash.update(castSourceData(toHash, encoding));\n    }\n    digest() {\n        return Promise.resolve(this.hash.digest());\n    }\n}\nexports.Hash = Hash;\nfunction castSourceData(toCast, encoding) {\n    if (buffer_1.Buffer.isBuffer(toCast)) {\n        return toCast;\n    }\n    if (typeof toCast === \"string\") {\n        return util_buffer_from_1.fromString(toCast, encoding);\n    }\n    if (ArrayBuffer.isView(toCast)) {\n        return util_buffer_from_1.fromArrayBuffer(toCast.buffer, toCast.byteOffset, toCast.byteLength);\n    }\n    return util_buffer_from_1.fromArrayBuffer(toCast);\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isArrayBuffer = void 0;\nconst isArrayBuffer = (arg) => (typeof ArrayBuffer === \"function\" && arg instanceof ArrayBuffer) ||\n    Object.prototype.toString.call(arg) === \"[object ArrayBuffer]\";\nexports.isArrayBuffer = isArrayBuffer;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getContentLengthPlugin = exports.contentLengthMiddlewareOptions = exports.contentLengthMiddleware = void 0;\nconst protocol_http_1 = require(\"@aws-sdk/protocol-http\");\nconst CONTENT_LENGTH_HEADER = \"content-length\";\nfunction contentLengthMiddleware(bodyLengthChecker) {\n    return (next) => async (args) => {\n        const request = args.request;\n        if (protocol_http_1.HttpRequest.isInstance(request)) {\n            const { body, headers } = request;\n            if (body &&\n                Object.keys(headers)\n                    .map((str) => str.toLowerCase())\n                    .indexOf(CONTENT_LENGTH_HEADER) === -1) {\n                const length = bodyLengthChecker(body);\n                if (length !== undefined) {\n                    request.headers = {\n                        ...request.headers,\n                        [CONTENT_LENGTH_HEADER]: String(length),\n                    };\n                }\n            }\n        }\n        return next({\n            ...args,\n            request,\n        });\n    };\n}\nexports.contentLengthMiddleware = contentLengthMiddleware;\nexports.contentLengthMiddlewareOptions = {\n    step: \"build\",\n    tags: [\"SET_CONTENT_LENGTH\", \"CONTENT_LENGTH\"],\n    name: \"contentLengthMiddleware\",\n    override: true,\n};\nconst getContentLengthPlugin = (options) => ({\n    applyToStack: (clientStack) => {\n        clientStack.add(contentLengthMiddleware(options.bodyLengthChecker), exports.contentLengthMiddlewareOptions);\n    },\n});\nexports.getContentLengthPlugin = getContentLengthPlugin;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getHostHeaderPlugin = exports.hostHeaderMiddlewareOptions = exports.hostHeaderMiddleware = exports.resolveHostHeaderConfig = void 0;\nconst protocol_http_1 = require(\"@aws-sdk/protocol-http\");\nfunction resolveHostHeaderConfig(input) {\n    return input;\n}\nexports.resolveHostHeaderConfig = resolveHostHeaderConfig;\nconst hostHeaderMiddleware = (options) => (next) => async (args) => {\n    if (!protocol_http_1.HttpRequest.isInstance(args.request))\n        return next(args);\n    const { request } = args;\n    const { handlerProtocol = \"\" } = options.requestHandler.metadata || {};\n    if (handlerProtocol.indexOf(\"h2\") >= 0 && !request.headers[\":authority\"]) {\n        delete request.headers[\"host\"];\n        request.headers[\":authority\"] = \"\";\n    }\n    else if (!request.headers[\"host\"]) {\n        request.headers[\"host\"] = request.hostname;\n    }\n    return next(args);\n};\nexports.hostHeaderMiddleware = hostHeaderMiddleware;\nexports.hostHeaderMiddlewareOptions = {\n    name: \"hostHeaderMiddleware\",\n    step: \"build\",\n    priority: \"low\",\n    tags: [\"HOST\"],\n    override: true,\n};\nconst getHostHeaderPlugin = (options) => ({\n    applyToStack: (clientStack) => {\n        clientStack.add(exports.hostHeaderMiddleware(options), exports.hostHeaderMiddlewareOptions);\n    },\n});\nexports.getHostHeaderPlugin = getHostHeaderPlugin;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = require(\"tslib\");\ntslib_1.__exportStar(require(\"./loggerMiddleware\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getLoggerPlugin = exports.loggerMiddlewareOptions = exports.loggerMiddleware = void 0;\nconst loggerMiddleware = () => (next, context) => async (args) => {\n    const { clientName, commandName, inputFilterSensitiveLog, logger, outputFilterSensitiveLog } = context;\n    const response = await next(args);\n    if (!logger) {\n        return response;\n    }\n    if (typeof logger.info === \"function\") {\n        const { $metadata, ...outputWithoutMetadata } = response.output;\n        logger.info({\n            clientName,\n            commandName,\n            input: inputFilterSensitiveLog(args.input),\n            output: outputFilterSensitiveLog(outputWithoutMetadata),\n            metadata: $metadata,\n        });\n    }\n    return response;\n};\nexports.loggerMiddleware = loggerMiddleware;\nexports.loggerMiddlewareOptions = {\n    name: \"loggerMiddleware\",\n    tags: [\"LOGGER\"],\n    step: \"initialize\",\n    override: true,\n};\nconst getLoggerPlugin = (options) => ({\n    applyToStack: (clientStack) => {\n        clientStack.add(exports.loggerMiddleware(), exports.loggerMiddlewareOptions);\n    },\n});\nexports.getLoggerPlugin = getLoggerPlugin;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AdaptiveRetryStrategy = void 0;\nconst config_1 = require(\"./config\");\nconst DefaultRateLimiter_1 = require(\"./DefaultRateLimiter\");\nconst StandardRetryStrategy_1 = require(\"./StandardRetryStrategy\");\nclass AdaptiveRetryStrategy extends StandardRetryStrategy_1.StandardRetryStrategy {\n    constructor(maxAttemptsProvider, options) {\n        const { rateLimiter, ...superOptions } = options !== null && options !== void 0 ? options : {};\n        super(maxAttemptsProvider, superOptions);\n        this.rateLimiter = rateLimiter !== null && rateLimiter !== void 0 ? rateLimiter : new DefaultRateLimiter_1.DefaultRateLimiter();\n        this.mode = config_1.RETRY_MODES.ADAPTIVE;\n    }\n    async retry(next, args) {\n        return super.retry(next, args, {\n            beforeRequest: async () => {\n                return this.rateLimiter.getSendToken();\n            },\n            afterRequest: (response) => {\n                this.rateLimiter.updateClientSendingRate(response);\n            },\n        });\n    }\n}\nexports.AdaptiveRetryStrategy = AdaptiveRetryStrategy;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DefaultRateLimiter = void 0;\nconst service_error_classification_1 = require(\"@aws-sdk/service-error-classification\");\nclass DefaultRateLimiter {\n    constructor(options) {\n        var _a, _b, _c, _d, _e;\n        this.currentCapacity = 0;\n        this.enabled = false;\n        this.lastMaxRate = 0;\n        this.measuredTxRate = 0;\n        this.requestCount = 0;\n        this.lastTimestamp = 0;\n        this.timeWindow = 0;\n        this.beta = (_a = options === null || options === void 0 ? void 0 : options.beta) !== null && _a !== void 0 ? _a : 0.7;\n        this.minCapacity = (_b = options === null || options === void 0 ? void 0 : options.minCapacity) !== null && _b !== void 0 ? _b : 1;\n        this.minFillRate = (_c = options === null || options === void 0 ? void 0 : options.minFillRate) !== null && _c !== void 0 ? _c : 0.5;\n        this.scaleConstant = (_d = options === null || options === void 0 ? void 0 : options.scaleConstant) !== null && _d !== void 0 ? _d : 0.4;\n        this.smooth = (_e = options === null || options === void 0 ? void 0 : options.smooth) !== null && _e !== void 0 ? _e : 0.8;\n        const currentTimeInSeconds = this.getCurrentTimeInSeconds();\n        this.lastThrottleTime = currentTimeInSeconds;\n        this.lastTxRateBucket = Math.floor(this.getCurrentTimeInSeconds());\n        this.fillRate = this.minFillRate;\n        this.maxCapacity = this.minCapacity;\n    }\n    getCurrentTimeInSeconds() {\n        return Date.now() / 1000;\n    }\n    async getSendToken() {\n        return this.acquireTokenBucket(1);\n    }\n    async acquireTokenBucket(amount) {\n        if (!this.enabled) {\n            return;\n        }\n        this.refillTokenBucket();\n        if (amount > this.currentCapacity) {\n            const delay = ((amount - this.currentCapacity) / this.fillRate) * 1000;\n            await new Promise((resolve) => setTimeout(resolve, delay));\n        }\n        this.currentCapacity = this.currentCapacity - amount;\n    }\n    refillTokenBucket() {\n        const timestamp = this.getCurrentTimeInSeconds();\n        if (!this.lastTimestamp) {\n            this.lastTimestamp = timestamp;\n            return;\n        }\n        const fillAmount = (timestamp - this.lastTimestamp) * this.fillRate;\n        this.currentCapacity = Math.min(this.maxCapacity, this.currentCapacity + fillAmount);\n        this.lastTimestamp = timestamp;\n    }\n    updateClientSendingRate(response) {\n        let calculatedRate;\n        this.updateMeasuredRate();\n        if (service_error_classification_1.isThrottlingError(response)) {\n            const rateToUse = !this.enabled ? this.measuredTxRate : Math.min(this.measuredTxRate, this.fillRate);\n            this.lastMaxRate = rateToUse;\n            this.calculateTimeWindow();\n            this.lastThrottleTime = this.getCurrentTimeInSeconds();\n            calculatedRate = this.cubicThrottle(rateToUse);\n            this.enableTokenBucket();\n        }\n        else {\n            this.calculateTimeWindow();\n            calculatedRate = this.cubicSuccess(this.getCurrentTimeInSeconds());\n        }\n        const newRate = Math.min(calculatedRate, 2 * this.measuredTxRate);\n        this.updateTokenBucketRate(newRate);\n    }\n    calculateTimeWindow() {\n        this.timeWindow = this.getPrecise(Math.pow((this.lastMaxRate * (1 - this.beta)) / this.scaleConstant, 1 / 3));\n    }\n    cubicThrottle(rateToUse) {\n        return this.getPrecise(rateToUse * this.beta);\n    }\n    cubicSuccess(timestamp) {\n        return this.getPrecise(this.scaleConstant * Math.pow(timestamp - this.lastThrottleTime - this.timeWindow, 3) + this.lastMaxRate);\n    }\n    enableTokenBucket() {\n        this.enabled = true;\n    }\n    updateTokenBucketRate(newRate) {\n        this.refillTokenBucket();\n        this.fillRate = Math.max(newRate, this.minFillRate);\n        this.maxCapacity = Math.max(newRate, this.minCapacity);\n        this.currentCapacity = Math.min(this.currentCapacity, this.maxCapacity);\n    }\n    updateMeasuredRate() {\n        const t = this.getCurrentTimeInSeconds();\n        const timeBucket = Math.floor(t * 2) / 2;\n        this.requestCount++;\n        if (timeBucket > this.lastTxRateBucket) {\n            const currentRate = this.requestCount / (timeBucket - this.lastTxRateBucket);\n            this.measuredTxRate = this.getPrecise(currentRate * this.smooth + this.measuredTxRate * (1 - this.smooth));\n            this.requestCount = 0;\n            this.lastTxRateBucket = timeBucket;\n        }\n    }\n    getPrecise(num) {\n        return parseFloat(num.toFixed(8));\n    }\n}\nexports.DefaultRateLimiter = DefaultRateLimiter;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.StandardRetryStrategy = void 0;\nconst protocol_http_1 = require(\"@aws-sdk/protocol-http\");\nconst service_error_classification_1 = require(\"@aws-sdk/service-error-classification\");\nconst uuid_1 = require(\"uuid\");\nconst config_1 = require(\"./config\");\nconst constants_1 = require(\"./constants\");\nconst defaultRetryQuota_1 = require(\"./defaultRetryQuota\");\nconst delayDecider_1 = require(\"./delayDecider\");\nconst retryDecider_1 = require(\"./retryDecider\");\nclass StandardRetryStrategy {\n    constructor(maxAttemptsProvider, options) {\n        var _a, _b, _c;\n        this.maxAttemptsProvider = maxAttemptsProvider;\n        this.mode = config_1.RETRY_MODES.STANDARD;\n        this.retryDecider = (_a = options === null || options === void 0 ? void 0 : options.retryDecider) !== null && _a !== void 0 ? _a : retryDecider_1.defaultRetryDecider;\n        this.delayDecider = (_b = options === null || options === void 0 ? void 0 : options.delayDecider) !== null && _b !== void 0 ? _b : delayDecider_1.defaultDelayDecider;\n        this.retryQuota = (_c = options === null || options === void 0 ? void 0 : options.retryQuota) !== null && _c !== void 0 ? _c : defaultRetryQuota_1.getDefaultRetryQuota(constants_1.INITIAL_RETRY_TOKENS);\n    }\n    shouldRetry(error, attempts, maxAttempts) {\n        return attempts < maxAttempts && this.retryDecider(error) && this.retryQuota.hasRetryTokens(error);\n    }\n    async getMaxAttempts() {\n        let maxAttempts;\n        try {\n            maxAttempts = await this.maxAttemptsProvider();\n        }\n        catch (error) {\n            maxAttempts = config_1.DEFAULT_MAX_ATTEMPTS;\n        }\n        return maxAttempts;\n    }\n    async retry(next, args, options) {\n        let retryTokenAmount;\n        let attempts = 0;\n        let totalDelay = 0;\n        const maxAttempts = await this.getMaxAttempts();\n        const { request } = args;\n        if (protocol_http_1.HttpRequest.isInstance(request)) {\n            request.headers[constants_1.INVOCATION_ID_HEADER] = uuid_1.v4();\n        }\n        while (true) {\n            try {\n                if (protocol_http_1.HttpRequest.isInstance(request)) {\n                    request.headers[constants_1.REQUEST_HEADER] = `attempt=${attempts + 1}; max=${maxAttempts}`;\n                }\n                if (options === null || options === void 0 ? void 0 : options.beforeRequest) {\n                    await options.beforeRequest();\n                }\n                const { response, output } = await next(args);\n                if (options === null || options === void 0 ? void 0 : options.afterRequest) {\n                    options.afterRequest(response);\n                }\n                this.retryQuota.releaseRetryTokens(retryTokenAmount);\n                output.$metadata.attempts = attempts + 1;\n                output.$metadata.totalRetryDelay = totalDelay;\n                return { response, output };\n            }\n            catch (e) {\n                const err = asSdkError(e);\n                attempts++;\n                if (this.shouldRetry(err, attempts, maxAttempts)) {\n                    retryTokenAmount = this.retryQuota.retrieveRetryTokens(err);\n                    const delay = this.delayDecider(service_error_classification_1.isThrottlingError(err) ? constants_1.THROTTLING_RETRY_DELAY_BASE : constants_1.DEFAULT_RETRY_DELAY_BASE, attempts);\n                    totalDelay += delay;\n                    await new Promise((resolve) => setTimeout(resolve, delay));\n                    continue;\n                }\n                if (!err.$metadata) {\n                    err.$metadata = {};\n                }\n                err.$metadata.attempts = attempts;\n                err.$metadata.totalRetryDelay = totalDelay;\n                throw err;\n            }\n        }\n    }\n}\nexports.StandardRetryStrategy = StandardRetryStrategy;\nconst asSdkError = (error) => {\n    if (error instanceof Error)\n        return error;\n    if (error instanceof Object)\n        return Object.assign(new Error(), error);\n    if (typeof error === \"string\")\n        return new Error(error);\n    return new Error(`AWS SDK error wrapper for ${error}`);\n};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DEFAULT_RETRY_MODE = exports.DEFAULT_MAX_ATTEMPTS = exports.RETRY_MODES = void 0;\nvar RETRY_MODES;\n(function (RETRY_MODES) {\n    RETRY_MODES[\"STANDARD\"] = \"standard\";\n    RETRY_MODES[\"ADAPTIVE\"] = \"adaptive\";\n})(RETRY_MODES = exports.RETRY_MODES || (exports.RETRY_MODES = {}));\nexports.DEFAULT_MAX_ATTEMPTS = 3;\nexports.DEFAULT_RETRY_MODE = RETRY_MODES.STANDARD;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.NODE_RETRY_MODE_CONFIG_OPTIONS = exports.CONFIG_RETRY_MODE = exports.ENV_RETRY_MODE = exports.resolveRetryConfig = exports.NODE_MAX_ATTEMPT_CONFIG_OPTIONS = exports.CONFIG_MAX_ATTEMPTS = exports.ENV_MAX_ATTEMPTS = void 0;\nconst AdaptiveRetryStrategy_1 = require(\"./AdaptiveRetryStrategy\");\nconst config_1 = require(\"./config\");\nconst StandardRetryStrategy_1 = require(\"./StandardRetryStrategy\");\nexports.ENV_MAX_ATTEMPTS = \"AWS_MAX_ATTEMPTS\";\nexports.CONFIG_MAX_ATTEMPTS = \"max_attempts\";\nexports.NODE_MAX_ATTEMPT_CONFIG_OPTIONS = {\n    environmentVariableSelector: (env) => {\n        const value = env[exports.ENV_MAX_ATTEMPTS];\n        if (!value)\n            return undefined;\n        const maxAttempt = parseInt(value);\n        if (Number.isNaN(maxAttempt)) {\n            throw new Error(`Environment variable ${exports.ENV_MAX_ATTEMPTS} mast be a number, got \"${value}\"`);\n        }\n        return maxAttempt;\n    },\n    configFileSelector: (profile) => {\n        const value = profile[exports.CONFIG_MAX_ATTEMPTS];\n        if (!value)\n            return undefined;\n        const maxAttempt = parseInt(value);\n        if (Number.isNaN(maxAttempt)) {\n            throw new Error(`Shared config file entry ${exports.CONFIG_MAX_ATTEMPTS} mast be a number, got \"${value}\"`);\n        }\n        return maxAttempt;\n    },\n    default: config_1.DEFAULT_MAX_ATTEMPTS,\n};\nconst resolveRetryConfig = (input) => {\n    const maxAttempts = normalizeMaxAttempts(input.maxAttempts);\n    return {\n        ...input,\n        maxAttempts,\n        retryStrategy: async () => {\n            if (input.retryStrategy) {\n                return input.retryStrategy;\n            }\n            const retryMode = await getRetryMode(input.retryMode);\n            if (retryMode === config_1.RETRY_MODES.ADAPTIVE) {\n                return new AdaptiveRetryStrategy_1.AdaptiveRetryStrategy(maxAttempts);\n            }\n            return new StandardRetryStrategy_1.StandardRetryStrategy(maxAttempts);\n        },\n    };\n};\nexports.resolveRetryConfig = resolveRetryConfig;\nconst getRetryMode = async (retryMode) => {\n    if (typeof retryMode === \"string\") {\n        return retryMode;\n    }\n    return await retryMode();\n};\nconst normalizeMaxAttempts = (maxAttempts = config_1.DEFAULT_MAX_ATTEMPTS) => {\n    if (typeof maxAttempts === \"number\") {\n        const promisified = Promise.resolve(maxAttempts);\n        return () => promisified;\n    }\n    return maxAttempts;\n};\nexports.ENV_RETRY_MODE = \"AWS_RETRY_MODE\";\nexports.CONFIG_RETRY_MODE = \"retry_mode\";\nexports.NODE_RETRY_MODE_CONFIG_OPTIONS = {\n    environmentVariableSelector: (env) => env[exports.ENV_RETRY_MODE],\n    configFileSelector: (profile) => profile[exports.CONFIG_RETRY_MODE],\n    default: config_1.DEFAULT_RETRY_MODE,\n};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.REQUEST_HEADER = exports.INVOCATION_ID_HEADER = exports.NO_RETRY_INCREMENT = exports.TIMEOUT_RETRY_COST = exports.RETRY_COST = exports.INITIAL_RETRY_TOKENS = exports.THROTTLING_RETRY_DELAY_BASE = exports.MAXIMUM_RETRY_DELAY = exports.DEFAULT_RETRY_DELAY_BASE = void 0;\nexports.DEFAULT_RETRY_DELAY_BASE = 100;\nexports.MAXIMUM_RETRY_DELAY = 20 * 1000;\nexports.THROTTLING_RETRY_DELAY_BASE = 500;\nexports.INITIAL_RETRY_TOKENS = 500;\nexports.RETRY_COST = 5;\nexports.TIMEOUT_RETRY_COST = 10;\nexports.NO_RETRY_INCREMENT = 1;\nexports.INVOCATION_ID_HEADER = \"amz-sdk-invocation-id\";\nexports.REQUEST_HEADER = \"amz-sdk-request\";\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getDefaultRetryQuota = void 0;\nconst constants_1 = require(\"./constants\");\nconst getDefaultRetryQuota = (initialRetryTokens, options) => {\n    var _a, _b, _c;\n    const MAX_CAPACITY = initialRetryTokens;\n    const noRetryIncrement = (_a = options === null || options === void 0 ? void 0 : options.noRetryIncrement) !== null && _a !== void 0 ? _a : constants_1.NO_RETRY_INCREMENT;\n    const retryCost = (_b = options === null || options === void 0 ? void 0 : options.retryCost) !== null && _b !== void 0 ? _b : constants_1.RETRY_COST;\n    const timeoutRetryCost = (_c = options === null || options === void 0 ? void 0 : options.timeoutRetryCost) !== null && _c !== void 0 ? _c : constants_1.TIMEOUT_RETRY_COST;\n    let availableCapacity = initialRetryTokens;\n    const getCapacityAmount = (error) => (error.name === \"TimeoutError\" ? timeoutRetryCost : retryCost);\n    const hasRetryTokens = (error) => getCapacityAmount(error) <= availableCapacity;\n    const retrieveRetryTokens = (error) => {\n        if (!hasRetryTokens(error)) {\n            throw new Error(\"No retry token available\");\n        }\n        const capacityAmount = getCapacityAmount(error);\n        availableCapacity -= capacityAmount;\n        return capacityAmount;\n    };\n    const releaseRetryTokens = (capacityReleaseAmount) => {\n        availableCapacity += capacityReleaseAmount !== null && capacityReleaseAmount !== void 0 ? capacityReleaseAmount : noRetryIncrement;\n        availableCapacity = Math.min(availableCapacity, MAX_CAPACITY);\n    };\n    return Object.freeze({\n        hasRetryTokens,\n        retrieveRetryTokens,\n        releaseRetryTokens,\n    });\n};\nexports.getDefaultRetryQuota = getDefaultRetryQuota;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.defaultDelayDecider = void 0;\nconst constants_1 = require(\"./constants\");\nconst defaultDelayDecider = (delayBase, attempts) => Math.floor(Math.min(constants_1.MAXIMUM_RETRY_DELAY, Math.random() * 2 ** attempts * delayBase));\nexports.defaultDelayDecider = defaultDelayDecider;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = require(\"tslib\");\ntslib_1.__exportStar(require(\"./AdaptiveRetryStrategy\"), exports);\ntslib_1.__exportStar(require(\"./DefaultRateLimiter\"), exports);\ntslib_1.__exportStar(require(\"./StandardRetryStrategy\"), exports);\ntslib_1.__exportStar(require(\"./config\"), exports);\ntslib_1.__exportStar(require(\"./configurations\"), exports);\ntslib_1.__exportStar(require(\"./delayDecider\"), exports);\ntslib_1.__exportStar(require(\"./omitRetryHeadersMiddleware\"), exports);\ntslib_1.__exportStar(require(\"./retryDecider\"), exports);\ntslib_1.__exportStar(require(\"./retryMiddleware\"), exports);\ntslib_1.__exportStar(require(\"./types\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getOmitRetryHeadersPlugin = exports.omitRetryHeadersMiddlewareOptions = exports.omitRetryHeadersMiddleware = void 0;\nconst protocol_http_1 = require(\"@aws-sdk/protocol-http\");\nconst constants_1 = require(\"./constants\");\nconst omitRetryHeadersMiddleware = () => (next) => async (args) => {\n    const { request } = args;\n    if (protocol_http_1.HttpRequest.isInstance(request)) {\n        delete request.headers[constants_1.INVOCATION_ID_HEADER];\n        delete request.headers[constants_1.REQUEST_HEADER];\n    }\n    return next(args);\n};\nexports.omitRetryHeadersMiddleware = omitRetryHeadersMiddleware;\nexports.omitRetryHeadersMiddlewareOptions = {\n    name: \"omitRetryHeadersMiddleware\",\n    tags: [\"RETRY\", \"HEADERS\", \"OMIT_RETRY_HEADERS\"],\n    relation: \"before\",\n    toMiddleware: \"awsAuthMiddleware\",\n    override: true,\n};\nconst getOmitRetryHeadersPlugin = (options) => ({\n    applyToStack: (clientStack) => {\n        clientStack.addRelativeTo(exports.omitRetryHeadersMiddleware(), exports.omitRetryHeadersMiddlewareOptions);\n    },\n});\nexports.getOmitRetryHeadersPlugin = getOmitRetryHeadersPlugin;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.defaultRetryDecider = void 0;\nconst service_error_classification_1 = require(\"@aws-sdk/service-error-classification\");\nconst defaultRetryDecider = (error) => {\n    if (!error) {\n        return false;\n    }\n    return service_error_classification_1.isRetryableByTrait(error) || service_error_classification_1.isClockSkewError(error) || service_error_classification_1.isThrottlingError(error) || service_error_classification_1.isTransientError(error);\n};\nexports.defaultRetryDecider = defaultRetryDecider;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getRetryPlugin = exports.retryMiddlewareOptions = exports.retryMiddleware = void 0;\nconst retryMiddleware = (options) => (next, context) => async (args) => {\n    const retryStrategy = await options.retryStrategy();\n    if (retryStrategy === null || retryStrategy === void 0 ? void 0 : retryStrategy.mode)\n        context.userAgent = [...(context.userAgent || []), [\"cfg/retry-mode\", retryStrategy.mode]];\n    return retryStrategy.retry(next, args);\n};\nexports.retryMiddleware = retryMiddleware;\nexports.retryMiddlewareOptions = {\n    name: \"retryMiddleware\",\n    tags: [\"RETRY\"],\n    step: \"finalizeRequest\",\n    priority: \"high\",\n    override: true,\n};\nconst getRetryPlugin = (options) => ({\n    applyToStack: (clientStack) => {\n        clientStack.add(exports.retryMiddleware(options), exports.retryMiddlewareOptions);\n    },\n});\nexports.getRetryPlugin = getRetryPlugin;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nObject.defineProperty(exports, \"v1\", {\n  enumerable: true,\n  get: function () {\n    return _v.default;\n  }\n});\nObject.defineProperty(exports, \"v3\", {\n  enumerable: true,\n  get: function () {\n    return _v2.default;\n  }\n});\nObject.defineProperty(exports, \"v4\", {\n  enumerable: true,\n  get: function () {\n    return _v3.default;\n  }\n});\nObject.defineProperty(exports, \"v5\", {\n  enumerable: true,\n  get: function () {\n    return _v4.default;\n  }\n});\nObject.defineProperty(exports, \"NIL\", {\n  enumerable: true,\n  get: function () {\n    return _nil.default;\n  }\n});\nObject.defineProperty(exports, \"version\", {\n  enumerable: true,\n  get: function () {\n    return _version.default;\n  }\n});\nObject.defineProperty(exports, \"validate\", {\n  enumerable: true,\n  get: function () {\n    return _validate.default;\n  }\n});\nObject.defineProperty(exports, \"stringify\", {\n  enumerable: true,\n  get: function () {\n    return _stringify.default;\n  }\n});\nObject.defineProperty(exports, \"parse\", {\n  enumerable: true,\n  get: function () {\n    return _parse.default;\n  }\n});\n\nvar _v = _interopRequireDefault(require(\"./v1.js\"));\n\nvar _v2 = _interopRequireDefault(require(\"./v3.js\"));\n\nvar _v3 = _interopRequireDefault(require(\"./v4.js\"));\n\nvar _v4 = _interopRequireDefault(require(\"./v5.js\"));\n\nvar _nil = _interopRequireDefault(require(\"./nil.js\"));\n\nvar _version = _interopRequireDefault(require(\"./version.js\"));\n\nvar _validate = _interopRequireDefault(require(\"./validate.js\"));\n\nvar _stringify = _interopRequireDefault(require(\"./stringify.js\"));\n\nvar _parse = _interopRequireDefault(require(\"./parse.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _crypto = _interopRequireDefault(require(\"crypto\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction md5(bytes) {\n  if (Array.isArray(bytes)) {\n    bytes = Buffer.from(bytes);\n  } else if (typeof bytes === 'string') {\n    bytes = Buffer.from(bytes, 'utf8');\n  }\n\n  return _crypto.default.createHash('md5').update(bytes).digest();\n}\n\nvar _default = md5;\nexports.default = _default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _default = '00000000-0000-0000-0000-000000000000';\nexports.default = _default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _validate = _interopRequireDefault(require(\"./validate.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction parse(uuid) {\n  if (!(0, _validate.default)(uuid)) {\n    throw TypeError('Invalid UUID');\n  }\n\n  let v;\n  const arr = new Uint8Array(16); // Parse ########-....-....-....-............\n\n  arr[0] = (v = parseInt(uuid.slice(0, 8), 16)) >>> 24;\n  arr[1] = v >>> 16 & 0xff;\n  arr[2] = v >>> 8 & 0xff;\n  arr[3] = v & 0xff; // Parse ........-####-....-....-............\n\n  arr[4] = (v = parseInt(uuid.slice(9, 13), 16)) >>> 8;\n  arr[5] = v & 0xff; // Parse ........-....-####-....-............\n\n  arr[6] = (v = parseInt(uuid.slice(14, 18), 16)) >>> 8;\n  arr[7] = v & 0xff; // Parse ........-....-....-####-............\n\n  arr[8] = (v = parseInt(uuid.slice(19, 23), 16)) >>> 8;\n  arr[9] = v & 0xff; // Parse ........-....-....-....-############\n  // (Use \"/\" to avoid 32-bit truncation when bit-shifting high-order bytes)\n\n  arr[10] = (v = parseInt(uuid.slice(24, 36), 16)) / 0x10000000000 & 0xff;\n  arr[11] = v / 0x100000000 & 0xff;\n  arr[12] = v >>> 24 & 0xff;\n  arr[13] = v >>> 16 & 0xff;\n  arr[14] = v >>> 8 & 0xff;\n  arr[15] = v & 0xff;\n  return arr;\n}\n\nvar _default = parse;\nexports.default = _default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _default = /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;\nexports.default = _default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = rng;\n\nvar _crypto = _interopRequireDefault(require(\"crypto\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nconst rnds8Pool = new Uint8Array(256); // # of random values to pre-allocate\n\nlet poolPtr = rnds8Pool.length;\n\nfunction rng() {\n  if (poolPtr > rnds8Pool.length - 16) {\n    _crypto.default.randomFillSync(rnds8Pool);\n\n    poolPtr = 0;\n  }\n\n  return rnds8Pool.slice(poolPtr, poolPtr += 16);\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _crypto = _interopRequireDefault(require(\"crypto\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction sha1(bytes) {\n  if (Array.isArray(bytes)) {\n    bytes = Buffer.from(bytes);\n  } else if (typeof bytes === 'string') {\n    bytes = Buffer.from(bytes, 'utf8');\n  }\n\n  return _crypto.default.createHash('sha1').update(bytes).digest();\n}\n\nvar _default = sha1;\nexports.default = _default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _validate = _interopRequireDefault(require(\"./validate.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\nconst byteToHex = [];\n\nfor (let i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).substr(1));\n}\n\nfunction stringify(arr, offset = 0) {\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  const uuid = (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase(); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!(0, _validate.default)(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nvar _default = stringify;\nexports.default = _default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _rng = _interopRequireDefault(require(\"./rng.js\"));\n\nvar _stringify = _interopRequireDefault(require(\"./stringify.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n// **`v1()` - Generate time-based UUID**\n//\n// Inspired by https://github.com/LiosK/UUID.js\n// and http://docs.python.org/library/uuid.html\nlet _nodeId;\n\nlet _clockseq; // Previous uuid creation time\n\n\nlet _lastMSecs = 0;\nlet _lastNSecs = 0; // See https://github.com/uuidjs/uuid for API details\n\nfunction v1(options, buf, offset) {\n  let i = buf && offset || 0;\n  const b = buf || new Array(16);\n  options = options || {};\n  let node = options.node || _nodeId;\n  let clockseq = options.clockseq !== undefined ? options.clockseq : _clockseq; // node and clockseq need to be initialized to random values if they're not\n  // specified.  We do this lazily to minimize issues related to insufficient\n  // system entropy.  See #189\n\n  if (node == null || clockseq == null) {\n    const seedBytes = options.random || (options.rng || _rng.default)();\n\n    if (node == null) {\n      // Per 4.5, create and 48-bit node id, (47 random bits + multicast bit = 1)\n      node = _nodeId = [seedBytes[0] | 0x01, seedBytes[1], seedBytes[2], seedBytes[3], seedBytes[4], seedBytes[5]];\n    }\n\n    if (clockseq == null) {\n      // Per 4.2.2, randomize (14 bit) clockseq\n      clockseq = _clockseq = (seedBytes[6] << 8 | seedBytes[7]) & 0x3fff;\n    }\n  } // UUID timestamps are 100 nano-second units since the Gregorian epoch,\n  // (1582-10-15 00:00).  JSNumbers aren't precise enough for this, so\n  // time is handled internally as 'msecs' (integer milliseconds) and 'nsecs'\n  // (100-nanoseconds offset from msecs) since unix epoch, 1970-01-01 00:00.\n\n\n  let msecs = options.msecs !== undefined ? options.msecs : Date.now(); // Per 4.2.1.2, use count of uuid's generated during the current clock\n  // cycle to simulate higher resolution clock\n\n  let nsecs = options.nsecs !== undefined ? options.nsecs : _lastNSecs + 1; // Time since last uuid creation (in msecs)\n\n  const dt = msecs - _lastMSecs + (nsecs - _lastNSecs) / 10000; // Per 4.2.1.2, Bump clockseq on clock regression\n\n  if (dt < 0 && options.clockseq === undefined) {\n    clockseq = clockseq + 1 & 0x3fff;\n  } // Reset nsecs if clock regresses (new clockseq) or we've moved onto a new\n  // time interval\n\n\n  if ((dt < 0 || msecs > _lastMSecs) && options.nsecs === undefined) {\n    nsecs = 0;\n  } // Per 4.2.1.2 Throw error if too many uuids are requested\n\n\n  if (nsecs >= 10000) {\n    throw new Error(\"uuid.v1(): Can't create more than 10M uuids/sec\");\n  }\n\n  _lastMSecs = msecs;\n  _lastNSecs = nsecs;\n  _clockseq = clockseq; // Per 4.1.4 - Convert from unix epoch to Gregorian epoch\n\n  msecs += 12219292800000; // `time_low`\n\n  const tl = ((msecs & 0xfffffff) * 10000 + nsecs) % 0x100000000;\n  b[i++] = tl >>> 24 & 0xff;\n  b[i++] = tl >>> 16 & 0xff;\n  b[i++] = tl >>> 8 & 0xff;\n  b[i++] = tl & 0xff; // `time_mid`\n\n  const tmh = msecs / 0x100000000 * 10000 & 0xfffffff;\n  b[i++] = tmh >>> 8 & 0xff;\n  b[i++] = tmh & 0xff; // `time_high_and_version`\n\n  b[i++] = tmh >>> 24 & 0xf | 0x10; // include version\n\n  b[i++] = tmh >>> 16 & 0xff; // `clock_seq_hi_and_reserved` (Per 4.2.2 - include variant)\n\n  b[i++] = clockseq >>> 8 | 0x80; // `clock_seq_low`\n\n  b[i++] = clockseq & 0xff; // `node`\n\n  for (let n = 0; n < 6; ++n) {\n    b[i + n] = node[n];\n  }\n\n  return buf || (0, _stringify.default)(b);\n}\n\nvar _default = v1;\nexports.default = _default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _v = _interopRequireDefault(require(\"./v35.js\"));\n\nvar _md = _interopRequireDefault(require(\"./md5.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nconst v3 = (0, _v.default)('v3', 0x30, _md.default);\nvar _default = v3;\nexports.default = _default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = _default;\nexports.URL = exports.DNS = void 0;\n\nvar _stringify = _interopRequireDefault(require(\"./stringify.js\"));\n\nvar _parse = _interopRequireDefault(require(\"./parse.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction stringToBytes(str) {\n  str = unescape(encodeURIComponent(str)); // UTF8 escape\n\n  const bytes = [];\n\n  for (let i = 0; i < str.length; ++i) {\n    bytes.push(str.charCodeAt(i));\n  }\n\n  return bytes;\n}\n\nconst DNS = '6ba7b810-9dad-11d1-80b4-00c04fd430c8';\nexports.DNS = DNS;\nconst URL = '6ba7b811-9dad-11d1-80b4-00c04fd430c8';\nexports.URL = URL;\n\nfunction _default(name, version, hashfunc) {\n  function generateUUID(value, namespace, buf, offset) {\n    if (typeof value === 'string') {\n      value = stringToBytes(value);\n    }\n\n    if (typeof namespace === 'string') {\n      namespace = (0, _parse.default)(namespace);\n    }\n\n    if (namespace.length !== 16) {\n      throw TypeError('Namespace must be array-like (16 iterable integer values, 0-255)');\n    } // Compute hash of namespace and value, Per 4.3\n    // Future: Use spread syntax when supported on all platforms, e.g. `bytes =\n    // hashfunc([...namespace, ... value])`\n\n\n    let bytes = new Uint8Array(16 + value.length);\n    bytes.set(namespace);\n    bytes.set(value, namespace.length);\n    bytes = hashfunc(bytes);\n    bytes[6] = bytes[6] & 0x0f | version;\n    bytes[8] = bytes[8] & 0x3f | 0x80;\n\n    if (buf) {\n      offset = offset || 0;\n\n      for (let i = 0; i < 16; ++i) {\n        buf[offset + i] = bytes[i];\n      }\n\n      return buf;\n    }\n\n    return (0, _stringify.default)(bytes);\n  } // Function#name is not settable on some platforms (#270)\n\n\n  try {\n    generateUUID.name = name; // eslint-disable-next-line no-empty\n  } catch (err) {} // For CommonJS default export support\n\n\n  generateUUID.DNS = DNS;\n  generateUUID.URL = URL;\n  return generateUUID;\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _rng = _interopRequireDefault(require(\"./rng.js\"));\n\nvar _stringify = _interopRequireDefault(require(\"./stringify.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction v4(options, buf, offset) {\n  options = options || {};\n\n  const rnds = options.random || (options.rng || _rng.default)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (let i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return (0, _stringify.default)(rnds);\n}\n\nvar _default = v4;\nexports.default = _default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _v = _interopRequireDefault(require(\"./v35.js\"));\n\nvar _sha = _interopRequireDefault(require(\"./sha1.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nconst v5 = (0, _v.default)('v5', 0x50, _sha.default);\nvar _default = v5;\nexports.default = _default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _regex = _interopRequireDefault(require(\"./regex.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction validate(uuid) {\n  return typeof uuid === 'string' && _regex.default.test(uuid);\n}\n\nvar _default = validate;\nexports.default = _default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _validate = _interopRequireDefault(require(\"./validate.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction version(uuid) {\n  if (!(0, _validate.default)(uuid)) {\n    throw TypeError('Invalid UUID');\n  }\n\n  return parseInt(uuid.substr(14, 1), 16);\n}\n\nvar _default = version;\nexports.default = _default;","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.resolveStsAuthConfig = void 0;\nconst middleware_signing_1 = require(\"@aws-sdk/middleware-signing\");\nconst resolveStsAuthConfig = (input, { stsClientCtor }) => middleware_signing_1.resolveAwsAuthConfig({\n    ...input,\n    stsClientCtor,\n});\nexports.resolveStsAuthConfig = resolveStsAuthConfig;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.deserializerMiddleware = void 0;\nconst deserializerMiddleware = (options, deserializer) => (next, context) => async (args) => {\n    const { response } = await next(args);\n    try {\n        const parsed = await deserializer(response, options);\n        return {\n            response,\n            output: parsed,\n        };\n    }\n    catch (error) {\n        throw Object.assign(error, { $response: response });\n    }\n};\nexports.deserializerMiddleware = deserializerMiddleware;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = require(\"tslib\");\ntslib_1.__exportStar(require(\"./deserializerMiddleware\"), exports);\ntslib_1.__exportStar(require(\"./serdePlugin\"), exports);\ntslib_1.__exportStar(require(\"./serializerMiddleware\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getSerdePlugin = exports.serializerMiddlewareOption = exports.deserializerMiddlewareOption = void 0;\nconst deserializerMiddleware_1 = require(\"./deserializerMiddleware\");\nconst serializerMiddleware_1 = require(\"./serializerMiddleware\");\nexports.deserializerMiddlewareOption = {\n    name: \"deserializerMiddleware\",\n    step: \"deserialize\",\n    tags: [\"DESERIALIZER\"],\n    override: true,\n};\nexports.serializerMiddlewareOption = {\n    name: \"serializerMiddleware\",\n    step: \"serialize\",\n    tags: [\"SERIALIZER\"],\n    override: true,\n};\nfunction getSerdePlugin(config, serializer, deserializer) {\n    return {\n        applyToStack: (commandStack) => {\n            commandStack.add(deserializerMiddleware_1.deserializerMiddleware(config, deserializer), exports.deserializerMiddlewareOption);\n            commandStack.add(serializerMiddleware_1.serializerMiddleware(config, serializer), exports.serializerMiddlewareOption);\n        },\n    };\n}\nexports.getSerdePlugin = getSerdePlugin;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.serializerMiddleware = void 0;\nconst serializerMiddleware = (options, serializer) => (next, context) => async (args) => {\n    const request = await serializer(args.input, options);\n    return next({\n        ...args,\n        request,\n    });\n};\nexports.serializerMiddleware = serializerMiddleware;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.resolveSigV4AuthConfig = exports.resolveAwsAuthConfig = void 0;\nconst property_provider_1 = require(\"@aws-sdk/property-provider\");\nconst signature_v4_1 = require(\"@aws-sdk/signature-v4\");\nconst CREDENTIAL_EXPIRE_WINDOW = 300000;\nconst resolveAwsAuthConfig = (input) => {\n    const normalizedCreds = input.credentials\n        ? normalizeCredentialProvider(input.credentials)\n        : input.credentialDefaultProvider(input);\n    const { signingEscapePath = true, systemClockOffset = input.systemClockOffset || 0, sha256 } = input;\n    let signer;\n    if (input.signer) {\n        signer = normalizeProvider(input.signer);\n    }\n    else {\n        signer = () => normalizeProvider(input.region)()\n            .then(async (region) => [\n            (await input.regionInfoProvider(region, {\n                useFipsEndpoint: await input.useFipsEndpoint(),\n                useDualstackEndpoint: await input.useDualstackEndpoint(),\n            })) || {},\n            region,\n        ])\n            .then(([regionInfo, region]) => {\n            const { signingRegion, signingService } = regionInfo;\n            input.signingRegion = input.signingRegion || signingRegion || region;\n            input.signingName = input.signingName || signingService || input.serviceId;\n            const params = {\n                ...input,\n                credentials: normalizedCreds,\n                region: input.signingRegion,\n                service: input.signingName,\n                sha256,\n                uriEscapePath: signingEscapePath,\n            };\n            const signerConstructor = input.signerConstructor || signature_v4_1.SignatureV4;\n            return new signerConstructor(params);\n        });\n    }\n    return {\n        ...input,\n        systemClockOffset,\n        signingEscapePath,\n        credentials: normalizedCreds,\n        signer,\n    };\n};\nexports.resolveAwsAuthConfig = resolveAwsAuthConfig;\nconst resolveSigV4AuthConfig = (input) => {\n    const normalizedCreds = input.credentials\n        ? normalizeCredentialProvider(input.credentials)\n        : input.credentialDefaultProvider(input);\n    const { signingEscapePath = true, systemClockOffset = input.systemClockOffset || 0, sha256 } = input;\n    let signer;\n    if (input.signer) {\n        signer = normalizeProvider(input.signer);\n    }\n    else {\n        signer = normalizeProvider(new signature_v4_1.SignatureV4({\n            credentials: normalizedCreds,\n            region: input.region,\n            service: input.signingName,\n            sha256,\n            uriEscapePath: signingEscapePath,\n        }));\n    }\n    return {\n        ...input,\n        systemClockOffset,\n        signingEscapePath,\n        credentials: normalizedCreds,\n        signer,\n    };\n};\nexports.resolveSigV4AuthConfig = resolveSigV4AuthConfig;\nconst normalizeProvider = (input) => {\n    if (typeof input === \"object\") {\n        const promisified = Promise.resolve(input);\n        return () => promisified;\n    }\n    return input;\n};\nconst normalizeCredentialProvider = (credentials) => {\n    if (typeof credentials === \"function\") {\n        return property_provider_1.memoize(credentials, (credentials) => credentials.expiration !== undefined &&\n            credentials.expiration.getTime() - Date.now() < CREDENTIAL_EXPIRE_WINDOW, (credentials) => credentials.expiration !== undefined);\n    }\n    return normalizeProvider(credentials);\n};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = require(\"tslib\");\ntslib_1.__exportStar(require(\"./configurations\"), exports);\ntslib_1.__exportStar(require(\"./middleware\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getSigV4AuthPlugin = exports.getAwsAuthPlugin = exports.awsAuthMiddlewareOptions = exports.awsAuthMiddleware = void 0;\nconst protocol_http_1 = require(\"@aws-sdk/protocol-http\");\nconst getSkewCorrectedDate_1 = require(\"./utils/getSkewCorrectedDate\");\nconst getUpdatedSystemClockOffset_1 = require(\"./utils/getUpdatedSystemClockOffset\");\nconst awsAuthMiddleware = (options) => (next, context) => async function (args) {\n    if (!protocol_http_1.HttpRequest.isInstance(args.request))\n        return next(args);\n    const signer = await options.signer();\n    const output = await next({\n        ...args,\n        request: await signer.sign(args.request, {\n            signingDate: getSkewCorrectedDate_1.getSkewCorrectedDate(options.systemClockOffset),\n            signingRegion: context[\"signing_region\"],\n            signingService: context[\"signing_service\"],\n        }),\n    }).catch((error) => {\n        var _a;\n        const serverTime = (_a = error.ServerTime) !== null && _a !== void 0 ? _a : getDateHeader(error.$response);\n        if (serverTime) {\n            options.systemClockOffset = getUpdatedSystemClockOffset_1.getUpdatedSystemClockOffset(serverTime, options.systemClockOffset);\n        }\n        throw error;\n    });\n    const dateHeader = getDateHeader(output.response);\n    if (dateHeader) {\n        options.systemClockOffset = getUpdatedSystemClockOffset_1.getUpdatedSystemClockOffset(dateHeader, options.systemClockOffset);\n    }\n    return output;\n};\nexports.awsAuthMiddleware = awsAuthMiddleware;\nconst getDateHeader = (response) => { var _a, _b, _c; return protocol_http_1.HttpResponse.isInstance(response) ? (_b = (_a = response.headers) === null || _a === void 0 ? void 0 : _a.date) !== null && _b !== void 0 ? _b : (_c = response.headers) === null || _c === void 0 ? void 0 : _c.Date : undefined; };\nexports.awsAuthMiddlewareOptions = {\n    name: \"awsAuthMiddleware\",\n    tags: [\"SIGNATURE\", \"AWSAUTH\"],\n    relation: \"after\",\n    toMiddleware: \"retryMiddleware\",\n    override: true,\n};\nconst getAwsAuthPlugin = (options) => ({\n    applyToStack: (clientStack) => {\n        clientStack.addRelativeTo(exports.awsAuthMiddleware(options), exports.awsAuthMiddlewareOptions);\n    },\n});\nexports.getAwsAuthPlugin = getAwsAuthPlugin;\nexports.getSigV4AuthPlugin = exports.getAwsAuthPlugin;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getSkewCorrectedDate = void 0;\nconst getSkewCorrectedDate = (systemClockOffset) => new Date(Date.now() + systemClockOffset);\nexports.getSkewCorrectedDate = getSkewCorrectedDate;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getUpdatedSystemClockOffset = void 0;\nconst isClockSkewed_1 = require(\"./isClockSkewed\");\nconst getUpdatedSystemClockOffset = (clockTime, currentSystemClockOffset) => {\n    const clockTimeInMs = Date.parse(clockTime);\n    if (isClockSkewed_1.isClockSkewed(clockTimeInMs, currentSystemClockOffset)) {\n        return clockTimeInMs - Date.now();\n    }\n    return currentSystemClockOffset;\n};\nexports.getUpdatedSystemClockOffset = getUpdatedSystemClockOffset;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isClockSkewed = void 0;\nconst getSkewCorrectedDate_1 = require(\"./getSkewCorrectedDate\");\nconst isClockSkewed = (clockTime, systemClockOffset) => Math.abs(getSkewCorrectedDate_1.getSkewCorrectedDate(systemClockOffset).getTime() - clockTime) >= 300000;\nexports.isClockSkewed = isClockSkewed;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.constructStack = void 0;\nconst constructStack = () => {\n    let absoluteEntries = [];\n    let relativeEntries = [];\n    const entriesNameSet = new Set();\n    const sort = (entries) => entries.sort((a, b) => stepWeights[b.step] - stepWeights[a.step] ||\n        priorityWeights[b.priority || \"normal\"] - priorityWeights[a.priority || \"normal\"]);\n    const removeByName = (toRemove) => {\n        let isRemoved = false;\n        const filterCb = (entry) => {\n            if (entry.name && entry.name === toRemove) {\n                isRemoved = true;\n                entriesNameSet.delete(toRemove);\n                return false;\n            }\n            return true;\n        };\n        absoluteEntries = absoluteEntries.filter(filterCb);\n        relativeEntries = relativeEntries.filter(filterCb);\n        return isRemoved;\n    };\n    const removeByReference = (toRemove) => {\n        let isRemoved = false;\n        const filterCb = (entry) => {\n            if (entry.middleware === toRemove) {\n                isRemoved = true;\n                if (entry.name)\n                    entriesNameSet.delete(entry.name);\n                return false;\n            }\n            return true;\n        };\n        absoluteEntries = absoluteEntries.filter(filterCb);\n        relativeEntries = relativeEntries.filter(filterCb);\n        return isRemoved;\n    };\n    const cloneTo = (toStack) => {\n        absoluteEntries.forEach((entry) => {\n            toStack.add(entry.middleware, { ...entry });\n        });\n        relativeEntries.forEach((entry) => {\n            toStack.addRelativeTo(entry.middleware, { ...entry });\n        });\n        return toStack;\n    };\n    const expandRelativeMiddlewareList = (from) => {\n        const expandedMiddlewareList = [];\n        from.before.forEach((entry) => {\n            if (entry.before.length === 0 && entry.after.length === 0) {\n                expandedMiddlewareList.push(entry);\n            }\n            else {\n                expandedMiddlewareList.push(...expandRelativeMiddlewareList(entry));\n            }\n        });\n        expandedMiddlewareList.push(from);\n        from.after.reverse().forEach((entry) => {\n            if (entry.before.length === 0 && entry.after.length === 0) {\n                expandedMiddlewareList.push(entry);\n            }\n            else {\n                expandedMiddlewareList.push(...expandRelativeMiddlewareList(entry));\n            }\n        });\n        return expandedMiddlewareList;\n    };\n    const getMiddlewareList = () => {\n        const normalizedAbsoluteEntries = [];\n        const normalizedRelativeEntries = [];\n        const normalizedEntriesNameMap = {};\n        absoluteEntries.forEach((entry) => {\n            const normalizedEntry = {\n                ...entry,\n                before: [],\n                after: [],\n            };\n            if (normalizedEntry.name)\n                normalizedEntriesNameMap[normalizedEntry.name] = normalizedEntry;\n            normalizedAbsoluteEntries.push(normalizedEntry);\n        });\n        relativeEntries.forEach((entry) => {\n            const normalizedEntry = {\n                ...entry,\n                before: [],\n                after: [],\n            };\n            if (normalizedEntry.name)\n                normalizedEntriesNameMap[normalizedEntry.name] = normalizedEntry;\n            normalizedRelativeEntries.push(normalizedEntry);\n        });\n        normalizedRelativeEntries.forEach((entry) => {\n            if (entry.toMiddleware) {\n                const toMiddleware = normalizedEntriesNameMap[entry.toMiddleware];\n                if (toMiddleware === undefined) {\n                    throw new Error(`${entry.toMiddleware} is not found when adding ${entry.name || \"anonymous\"} middleware ${entry.relation} ${entry.toMiddleware}`);\n                }\n                if (entry.relation === \"after\") {\n                    toMiddleware.after.push(entry);\n                }\n                if (entry.relation === \"before\") {\n                    toMiddleware.before.push(entry);\n                }\n            }\n        });\n        const mainChain = sort(normalizedAbsoluteEntries)\n            .map(expandRelativeMiddlewareList)\n            .reduce((wholeList, expendedMiddlewareList) => {\n            wholeList.push(...expendedMiddlewareList);\n            return wholeList;\n        }, []);\n        return mainChain.map((entry) => entry.middleware);\n    };\n    const stack = {\n        add: (middleware, options = {}) => {\n            const { name, override } = options;\n            const entry = {\n                step: \"initialize\",\n                priority: \"normal\",\n                middleware,\n                ...options,\n            };\n            if (name) {\n                if (entriesNameSet.has(name)) {\n                    if (!override)\n                        throw new Error(`Duplicate middleware name '${name}'`);\n                    const toOverrideIndex = absoluteEntries.findIndex((entry) => entry.name === name);\n                    const toOverride = absoluteEntries[toOverrideIndex];\n                    if (toOverride.step !== entry.step || toOverride.priority !== entry.priority) {\n                        throw new Error(`\"${name}\" middleware with ${toOverride.priority} priority in ${toOverride.step} step cannot be ` +\n                            `overridden by same-name middleware with ${entry.priority} priority in ${entry.step} step.`);\n                    }\n                    absoluteEntries.splice(toOverrideIndex, 1);\n                }\n                entriesNameSet.add(name);\n            }\n            absoluteEntries.push(entry);\n        },\n        addRelativeTo: (middleware, options) => {\n            const { name, override } = options;\n            const entry = {\n                middleware,\n                ...options,\n            };\n            if (name) {\n                if (entriesNameSet.has(name)) {\n                    if (!override)\n                        throw new Error(`Duplicate middleware name '${name}'`);\n                    const toOverrideIndex = relativeEntries.findIndex((entry) => entry.name === name);\n                    const toOverride = relativeEntries[toOverrideIndex];\n                    if (toOverride.toMiddleware !== entry.toMiddleware || toOverride.relation !== entry.relation) {\n                        throw new Error(`\"${name}\" middleware ${toOverride.relation} \"${toOverride.toMiddleware}\" middleware cannot be overridden ` +\n                            `by same-name middleware ${entry.relation} \"${entry.toMiddleware}\" middleware.`);\n                    }\n                    relativeEntries.splice(toOverrideIndex, 1);\n                }\n                entriesNameSet.add(name);\n            }\n            relativeEntries.push(entry);\n        },\n        clone: () => cloneTo(exports.constructStack()),\n        use: (plugin) => {\n            plugin.applyToStack(stack);\n        },\n        remove: (toRemove) => {\n            if (typeof toRemove === \"string\")\n                return removeByName(toRemove);\n            else\n                return removeByReference(toRemove);\n        },\n        removeByTag: (toRemove) => {\n            let isRemoved = false;\n            const filterCb = (entry) => {\n                const { tags, name } = entry;\n                if (tags && tags.includes(toRemove)) {\n                    if (name)\n                        entriesNameSet.delete(name);\n                    isRemoved = true;\n                    return false;\n                }\n                return true;\n            };\n            absoluteEntries = absoluteEntries.filter(filterCb);\n            relativeEntries = relativeEntries.filter(filterCb);\n            return isRemoved;\n        },\n        concat: (from) => {\n            const cloned = cloneTo(exports.constructStack());\n            cloned.use(from);\n            return cloned;\n        },\n        applyToStack: cloneTo,\n        resolve: (handler, context) => {\n            for (const middleware of getMiddlewareList().reverse()) {\n                handler = middleware(handler, context);\n            }\n            return handler;\n        },\n    };\n    return stack;\n};\nexports.constructStack = constructStack;\nconst stepWeights = {\n    initialize: 5,\n    serialize: 4,\n    build: 3,\n    finalizeRequest: 2,\n    deserialize: 1,\n};\nconst priorityWeights = {\n    high: 3,\n    normal: 2,\n    low: 1,\n};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = require(\"tslib\");\ntslib_1.__exportStar(require(\"./MiddlewareStack\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.resolveUserAgentConfig = void 0;\nfunction resolveUserAgentConfig(input) {\n    return {\n        ...input,\n        customUserAgent: typeof input.customUserAgent === \"string\" ? [[input.customUserAgent]] : input.customUserAgent,\n    };\n}\nexports.resolveUserAgentConfig = resolveUserAgentConfig;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.UA_ESCAPE_REGEX = exports.SPACE = exports.X_AMZ_USER_AGENT = exports.USER_AGENT = void 0;\nexports.USER_AGENT = \"user-agent\";\nexports.X_AMZ_USER_AGENT = \"x-amz-user-agent\";\nexports.SPACE = \" \";\nexports.UA_ESCAPE_REGEX = /[^\\!\\#\\$\\%\\&\\'\\*\\+\\-\\.\\^\\_\\`\\|\\~\\d\\w]/g;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = require(\"tslib\");\ntslib_1.__exportStar(require(\"./configurations\"), exports);\ntslib_1.__exportStar(require(\"./user-agent-middleware\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getUserAgentPlugin = exports.getUserAgentMiddlewareOptions = exports.userAgentMiddleware = void 0;\nconst protocol_http_1 = require(\"@aws-sdk/protocol-http\");\nconst constants_1 = require(\"./constants\");\nconst userAgentMiddleware = (options) => (next, context) => async (args) => {\n    var _a, _b;\n    const { request } = args;\n    if (!protocol_http_1.HttpRequest.isInstance(request))\n        return next(args);\n    const { headers } = request;\n    const userAgent = ((_a = context === null || context === void 0 ? void 0 : context.userAgent) === null || _a === void 0 ? void 0 : _a.map(escapeUserAgent)) || [];\n    const defaultUserAgent = (await options.defaultUserAgentProvider()).map(escapeUserAgent);\n    const customUserAgent = ((_b = options === null || options === void 0 ? void 0 : options.customUserAgent) === null || _b === void 0 ? void 0 : _b.map(escapeUserAgent)) || [];\n    const sdkUserAgentValue = [...defaultUserAgent, ...userAgent, ...customUserAgent].join(constants_1.SPACE);\n    const normalUAValue = [\n        ...defaultUserAgent.filter((section) => section.startsWith(\"aws-sdk-\")),\n        ...customUserAgent,\n    ].join(constants_1.SPACE);\n    if (options.runtime !== \"browser\") {\n        if (normalUAValue) {\n            headers[constants_1.X_AMZ_USER_AGENT] = headers[constants_1.X_AMZ_USER_AGENT]\n                ? `${headers[constants_1.USER_AGENT]} ${normalUAValue}`\n                : normalUAValue;\n        }\n        headers[constants_1.USER_AGENT] = sdkUserAgentValue;\n    }\n    else {\n        headers[constants_1.X_AMZ_USER_AGENT] = sdkUserAgentValue;\n    }\n    return next({\n        ...args,\n        request,\n    });\n};\nexports.userAgentMiddleware = userAgentMiddleware;\nconst escapeUserAgent = ([name, version]) => {\n    const prefixSeparatorIndex = name.indexOf(\"/\");\n    const prefix = name.substring(0, prefixSeparatorIndex);\n    let uaName = name.substring(prefixSeparatorIndex + 1);\n    if (prefix === \"api\") {\n        uaName = uaName.toLowerCase();\n    }\n    return [prefix, uaName, version]\n        .filter((item) => item && item.length > 0)\n        .map((item) => item === null || item === void 0 ? void 0 : item.replace(constants_1.UA_ESCAPE_REGEX, \"_\"))\n        .join(\"/\");\n};\nexports.getUserAgentMiddlewareOptions = {\n    name: \"getUserAgentMiddleware\",\n    step: \"build\",\n    priority: \"low\",\n    tags: [\"SET_USER_AGENT\", \"USER_AGENT\"],\n    override: true,\n};\nconst getUserAgentPlugin = (config) => ({\n    applyToStack: (clientStack) => {\n        clientStack.add(exports.userAgentMiddleware(config), exports.getUserAgentMiddlewareOptions);\n    },\n});\nexports.getUserAgentPlugin = getUserAgentPlugin;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.loadConfig = void 0;\nconst property_provider_1 = require(\"@aws-sdk/property-provider\");\nconst fromEnv_1 = require(\"./fromEnv\");\nconst fromSharedConfigFiles_1 = require(\"./fromSharedConfigFiles\");\nconst fromStatic_1 = require(\"./fromStatic\");\nconst loadConfig = ({ environmentVariableSelector, configFileSelector, default: defaultValue }, configuration = {}) => property_provider_1.memoize(property_provider_1.chain(fromEnv_1.fromEnv(environmentVariableSelector), fromSharedConfigFiles_1.fromSharedConfigFiles(configFileSelector, configuration), fromStatic_1.fromStatic(defaultValue)));\nexports.loadConfig = loadConfig;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.fromEnv = void 0;\nconst property_provider_1 = require(\"@aws-sdk/property-provider\");\nconst fromEnv = (envVarSelector) => async () => {\n    try {\n        const config = envVarSelector(process.env);\n        if (config === undefined) {\n            throw new Error();\n        }\n        return config;\n    }\n    catch (e) {\n        throw new property_provider_1.CredentialsProviderError(e.message || `Cannot load config from environment variables with getter: ${envVarSelector}`);\n    }\n};\nexports.fromEnv = fromEnv;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.fromSharedConfigFiles = exports.ENV_PROFILE = void 0;\nconst property_provider_1 = require(\"@aws-sdk/property-provider\");\nconst shared_ini_file_loader_1 = require(\"@aws-sdk/shared-ini-file-loader\");\nconst DEFAULT_PROFILE = \"default\";\nexports.ENV_PROFILE = \"AWS_PROFILE\";\nconst fromSharedConfigFiles = (configSelector, { preferredFile = \"config\", ...init } = {}) => async () => {\n    const { loadedConfig = shared_ini_file_loader_1.loadSharedConfigFiles(init), profile = process.env[exports.ENV_PROFILE] || DEFAULT_PROFILE } = init;\n    const { configFile, credentialsFile } = await loadedConfig;\n    const profileFromCredentials = credentialsFile[profile] || {};\n    const profileFromConfig = configFile[profile] || {};\n    const mergedProfile = preferredFile === \"config\"\n        ? { ...profileFromCredentials, ...profileFromConfig }\n        : { ...profileFromConfig, ...profileFromCredentials };\n    try {\n        const configValue = configSelector(mergedProfile);\n        if (configValue === undefined) {\n            throw new Error();\n        }\n        return configValue;\n    }\n    catch (e) {\n        throw new property_provider_1.CredentialsProviderError(e.message ||\n            `Cannot load config for profile ${profile} in SDK configuration files with getter: ${configSelector}`);\n    }\n};\nexports.fromSharedConfigFiles = fromSharedConfigFiles;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.fromStatic = void 0;\nconst property_provider_1 = require(\"@aws-sdk/property-provider\");\nconst isFunction = (func) => typeof func === \"function\";\nconst fromStatic = (defaultValue) => isFunction(defaultValue) ? async () => await defaultValue() : property_provider_1.fromStatic(defaultValue);\nexports.fromStatic = fromStatic;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = require(\"tslib\");\ntslib_1.__exportStar(require(\"./configLoader\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.NODEJS_TIMEOUT_ERROR_CODES = void 0;\nexports.NODEJS_TIMEOUT_ERROR_CODES = [\"ECONNRESET\", \"EPIPE\", \"ETIMEDOUT\"];\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getTransformedHeaders = void 0;\nconst getTransformedHeaders = (headers) => {\n    const transformedHeaders = {};\n    for (const name of Object.keys(headers)) {\n        const headerValues = headers[name];\n        transformedHeaders[name] = Array.isArray(headerValues) ? headerValues.join(\",\") : headerValues;\n    }\n    return transformedHeaders;\n};\nexports.getTransformedHeaders = getTransformedHeaders;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = require(\"tslib\");\ntslib_1.__exportStar(require(\"./node-http-handler\"), exports);\ntslib_1.__exportStar(require(\"./node-http2-handler\"), exports);\ntslib_1.__exportStar(require(\"./stream-collector\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.NodeHttpHandler = void 0;\nconst protocol_http_1 = require(\"@aws-sdk/protocol-http\");\nconst querystring_builder_1 = require(\"@aws-sdk/querystring-builder\");\nconst http_1 = require(\"http\");\nconst https_1 = require(\"https\");\nconst constants_1 = require(\"./constants\");\nconst get_transformed_headers_1 = require(\"./get-transformed-headers\");\nconst set_connection_timeout_1 = require(\"./set-connection-timeout\");\nconst set_socket_timeout_1 = require(\"./set-socket-timeout\");\nconst write_request_body_1 = require(\"./write-request-body\");\nclass NodeHttpHandler {\n    constructor(options) {\n        this.metadata = { handlerProtocol: \"http/1.1\" };\n        if (typeof options === \"function\") {\n            this.configProvider = async () => {\n                return this.resolveDefaultConfig(await options());\n            };\n        }\n        else {\n            this.config = this.resolveDefaultConfig(options);\n        }\n    }\n    resolveDefaultConfig(options) {\n        const { connectionTimeout, socketTimeout, httpAgent, httpsAgent } = options || {};\n        const keepAlive = true;\n        const maxSockets = 50;\n        return {\n            connectionTimeout,\n            socketTimeout,\n            httpAgent: httpAgent || new http_1.Agent({ keepAlive, maxSockets }),\n            httpsAgent: httpsAgent || new https_1.Agent({ keepAlive, maxSockets }),\n        };\n    }\n    destroy() {\n        var _a, _b, _c, _d;\n        (_b = (_a = this.config) === null || _a === void 0 ? void 0 : _a.httpAgent) === null || _b === void 0 ? void 0 : _b.destroy();\n        (_d = (_c = this.config) === null || _c === void 0 ? void 0 : _c.httpsAgent) === null || _d === void 0 ? void 0 : _d.destroy();\n    }\n    async handle(request, { abortSignal } = {}) {\n        if (!this.config && this.configProvider) {\n            this.config = await this.configProvider();\n        }\n        return new Promise((resolve, reject) => {\n            if (!this.config) {\n                throw new Error(\"Node HTTP request handler config is not resolved\");\n            }\n            if (abortSignal === null || abortSignal === void 0 ? void 0 : abortSignal.aborted) {\n                const abortError = new Error(\"Request aborted\");\n                abortError.name = \"AbortError\";\n                reject(abortError);\n                return;\n            }\n            const isSSL = request.protocol === \"https:\";\n            const queryString = querystring_builder_1.buildQueryString(request.query || {});\n            const nodeHttpsOptions = {\n                headers: request.headers,\n                host: request.hostname,\n                method: request.method,\n                path: queryString ? `${request.path}?${queryString}` : request.path,\n                port: request.port,\n                agent: isSSL ? this.config.httpsAgent : this.config.httpAgent,\n            };\n            const requestFunc = isSSL ? https_1.request : http_1.request;\n            const req = requestFunc(nodeHttpsOptions, (res) => {\n                const httpResponse = new protocol_http_1.HttpResponse({\n                    statusCode: res.statusCode || -1,\n                    headers: get_transformed_headers_1.getTransformedHeaders(res.headers),\n                    body: res,\n                });\n                resolve({ response: httpResponse });\n            });\n            req.on(\"error\", (err) => {\n                if (constants_1.NODEJS_TIMEOUT_ERROR_CODES.includes(err.code)) {\n                    reject(Object.assign(err, { name: \"TimeoutError\" }));\n                }\n                else {\n                    reject(err);\n                }\n            });\n            set_connection_timeout_1.setConnectionTimeout(req, reject, this.config.connectionTimeout);\n            set_socket_timeout_1.setSocketTimeout(req, reject, this.config.socketTimeout);\n            if (abortSignal) {\n                abortSignal.onabort = () => {\n                    req.abort();\n                    const abortError = new Error(\"Request aborted\");\n                    abortError.name = \"AbortError\";\n                    reject(abortError);\n                };\n            }\n            write_request_body_1.writeRequestBody(req, request);\n        });\n    }\n}\nexports.NodeHttpHandler = NodeHttpHandler;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.NodeHttp2Handler = void 0;\nconst protocol_http_1 = require(\"@aws-sdk/protocol-http\");\nconst querystring_builder_1 = require(\"@aws-sdk/querystring-builder\");\nconst http2_1 = require(\"http2\");\nconst get_transformed_headers_1 = require(\"./get-transformed-headers\");\nconst write_request_body_1 = require(\"./write-request-body\");\nclass NodeHttp2Handler {\n    constructor({ requestTimeout, sessionTimeout, disableConcurrentStreams } = {}) {\n        this.metadata = { handlerProtocol: \"h2\" };\n        this.requestTimeout = requestTimeout;\n        this.sessionTimeout = sessionTimeout;\n        this.disableConcurrentStreams = disableConcurrentStreams;\n        this.sessionCache = new Map();\n    }\n    destroy() {\n        for (const sessions of this.sessionCache.values()) {\n            sessions.forEach((session) => this.destroySession(session));\n        }\n        this.sessionCache.clear();\n    }\n    handle(request, { abortSignal } = {}) {\n        return new Promise((resolve, rejectOriginal) => {\n            let fulfilled = false;\n            if (abortSignal === null || abortSignal === void 0 ? void 0 : abortSignal.aborted) {\n                fulfilled = true;\n                const abortError = new Error(\"Request aborted\");\n                abortError.name = \"AbortError\";\n                rejectOriginal(abortError);\n                return;\n            }\n            const { hostname, method, port, protocol, path, query } = request;\n            const authority = `${protocol}//${hostname}${port ? `:${port}` : \"\"}`;\n            const session = this.getSession(authority, this.disableConcurrentStreams || false);\n            const reject = (err) => {\n                if (this.disableConcurrentStreams) {\n                    this.destroySession(session);\n                }\n                fulfilled = true;\n                rejectOriginal(err);\n            };\n            const queryString = querystring_builder_1.buildQueryString(query || {});\n            const req = session.request({\n                ...request.headers,\n                [http2_1.constants.HTTP2_HEADER_PATH]: queryString ? `${path}?${queryString}` : path,\n                [http2_1.constants.HTTP2_HEADER_METHOD]: method,\n            });\n            req.on(\"response\", (headers) => {\n                const httpResponse = new protocol_http_1.HttpResponse({\n                    statusCode: headers[\":status\"] || -1,\n                    headers: get_transformed_headers_1.getTransformedHeaders(headers),\n                    body: req,\n                });\n                fulfilled = true;\n                resolve({ response: httpResponse });\n                if (this.disableConcurrentStreams) {\n                    session.close();\n                    this.deleteSessionFromCache(authority, session);\n                }\n            });\n            const requestTimeout = this.requestTimeout;\n            if (requestTimeout) {\n                req.setTimeout(requestTimeout, () => {\n                    req.close();\n                    const timeoutError = new Error(`Stream timed out because of no activity for ${requestTimeout} ms`);\n                    timeoutError.name = \"TimeoutError\";\n                    reject(timeoutError);\n                });\n            }\n            if (abortSignal) {\n                abortSignal.onabort = () => {\n                    req.close();\n                    const abortError = new Error(\"Request aborted\");\n                    abortError.name = \"AbortError\";\n                    reject(abortError);\n                };\n            }\n            req.on(\"frameError\", (type, code, id) => {\n                reject(new Error(`Frame type id ${type} in stream id ${id} has failed with code ${code}.`));\n            });\n            req.on(\"error\", reject);\n            req.on(\"aborted\", () => {\n                reject(new Error(`HTTP/2 stream is abnormally aborted in mid-communication with result code ${req.rstCode}.`));\n            });\n            req.on(\"close\", () => {\n                if (this.disableConcurrentStreams) {\n                    session.destroy();\n                }\n                if (!fulfilled) {\n                    reject(new Error(\"Unexpected error: http2 request did not get a response\"));\n                }\n            });\n            write_request_body_1.writeRequestBody(req, request);\n        });\n    }\n    getSession(authority, disableConcurrentStreams) {\n        const sessionCache = this.sessionCache;\n        const existingSessions = sessionCache.get(authority) || [];\n        if (existingSessions.length > 0 && !disableConcurrentStreams)\n            return existingSessions[0];\n        const newSession = http2_1.connect(authority);\n        const destroySessionCb = () => {\n            this.destroySession(newSession);\n            this.deleteSessionFromCache(authority, newSession);\n        };\n        newSession.on(\"goaway\", destroySessionCb);\n        newSession.on(\"error\", destroySessionCb);\n        newSession.on(\"frameError\", destroySessionCb);\n        const sessionTimeout = this.sessionTimeout;\n        if (sessionTimeout) {\n            newSession.setTimeout(sessionTimeout, destroySessionCb);\n        }\n        existingSessions.push(newSession);\n        sessionCache.set(authority, existingSessions);\n        return newSession;\n    }\n    destroySession(session) {\n        if (!session.destroyed) {\n            session.destroy();\n        }\n    }\n    deleteSessionFromCache(authority, session) {\n        const existingSessions = this.sessionCache.get(authority) || [];\n        if (!existingSessions.includes(session)) {\n            return;\n        }\n        this.sessionCache.set(authority, existingSessions.filter((s) => s !== session));\n    }\n}\nexports.NodeHttp2Handler = NodeHttp2Handler;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.setConnectionTimeout = void 0;\nconst setConnectionTimeout = (request, reject, timeoutInMs = 0) => {\n    if (!timeoutInMs) {\n        return;\n    }\n    request.on(\"socket\", (socket) => {\n        if (socket.connecting) {\n            const timeoutId = setTimeout(() => {\n                request.destroy();\n                reject(Object.assign(new Error(`Socket timed out without establishing a connection within ${timeoutInMs} ms`), {\n                    name: \"TimeoutError\",\n                }));\n            }, timeoutInMs);\n            socket.on(\"connect\", () => {\n                clearTimeout(timeoutId);\n            });\n        }\n    });\n};\nexports.setConnectionTimeout = setConnectionTimeout;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.setSocketTimeout = void 0;\nconst setSocketTimeout = (request, reject, timeoutInMs = 0) => {\n    request.setTimeout(timeoutInMs, () => {\n        request.destroy();\n        reject(Object.assign(new Error(`Connection timed out after ${timeoutInMs} ms`), { name: \"TimeoutError\" }));\n    });\n};\nexports.setSocketTimeout = setSocketTimeout;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Collector = void 0;\nconst stream_1 = require(\"stream\");\nclass Collector extends stream_1.Writable {\n    constructor() {\n        super(...arguments);\n        this.bufferedBytes = [];\n    }\n    _write(chunk, encoding, callback) {\n        this.bufferedBytes.push(chunk);\n        callback();\n    }\n}\nexports.Collector = Collector;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.streamCollector = void 0;\nconst collector_1 = require(\"./collector\");\nconst streamCollector = (stream) => new Promise((resolve, reject) => {\n    const collector = new collector_1.Collector();\n    stream.pipe(collector);\n    stream.on(\"error\", (err) => {\n        collector.end();\n        reject(err);\n    });\n    collector.on(\"error\", reject);\n    collector.on(\"finish\", function () {\n        const bytes = new Uint8Array(Buffer.concat(this.bufferedBytes));\n        resolve(bytes);\n    });\n});\nexports.streamCollector = streamCollector;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.writeRequestBody = void 0;\nconst stream_1 = require(\"stream\");\nfunction writeRequestBody(httpRequest, request) {\n    const expect = request.headers[\"Expect\"] || request.headers[\"expect\"];\n    if (expect === \"100-continue\") {\n        httpRequest.on(\"continue\", () => {\n            writeBody(httpRequest, request.body);\n        });\n    }\n    else {\n        writeBody(httpRequest, request.body);\n    }\n}\nexports.writeRequestBody = writeRequestBody;\nfunction writeBody(httpRequest, body) {\n    if (body instanceof stream_1.Readable) {\n        body.pipe(httpRequest);\n    }\n    else if (body) {\n        httpRequest.end(Buffer.from(body));\n    }\n    else {\n        httpRequest.end();\n    }\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CredentialsProviderError = exports.ProviderError = void 0;\nclass ProviderError extends Error {\n    constructor(message, tryNextLink = true) {\n        super(message);\n        this.tryNextLink = tryNextLink;\n    }\n    static from(error, tryNextLink = true) {\n        Object.defineProperty(error, \"tryNextLink\", {\n            value: tryNextLink,\n            configurable: false,\n            enumerable: false,\n            writable: false,\n        });\n        return error;\n    }\n}\nexports.ProviderError = ProviderError;\nclass CredentialsProviderError extends Error {\n    constructor(message, tryNextLink = true) {\n        super(message);\n        this.tryNextLink = tryNextLink;\n        this.name = \"CredentialsProviderError\";\n    }\n    static from(error, tryNextLink = true) {\n        Object.defineProperty(error, \"tryNextLink\", {\n            value: tryNextLink,\n            configurable: false,\n            enumerable: false,\n            writable: false,\n        });\n        return error;\n    }\n}\nexports.CredentialsProviderError = CredentialsProviderError;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.chain = void 0;\nconst ProviderError_1 = require(\"./ProviderError\");\nfunction chain(...providers) {\n    return () => {\n        let promise = Promise.reject(new ProviderError_1.ProviderError(\"No providers in chain\"));\n        for (const provider of providers) {\n            promise = promise.catch((err) => {\n                if (err === null || err === void 0 ? void 0 : err.tryNextLink) {\n                    return provider();\n                }\n                throw err;\n            });\n        }\n        return promise;\n    };\n}\nexports.chain = chain;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.fromStatic = void 0;\nconst fromStatic = (staticValue) => () => Promise.resolve(staticValue);\nexports.fromStatic = fromStatic;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = require(\"tslib\");\ntslib_1.__exportStar(require(\"./ProviderError\"), exports);\ntslib_1.__exportStar(require(\"./chain\"), exports);\ntslib_1.__exportStar(require(\"./fromStatic\"), exports);\ntslib_1.__exportStar(require(\"./memoize\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.memoize = void 0;\nconst memoize = (provider, isExpired, requiresRefresh) => {\n    let resolved;\n    let pending;\n    let hasResult;\n    const coalesceProvider = async () => {\n        if (!pending) {\n            pending = provider();\n        }\n        try {\n            resolved = await pending;\n            hasResult = true;\n        }\n        finally {\n            pending = undefined;\n        }\n        return resolved;\n    };\n    if (isExpired === undefined) {\n        return async () => {\n            if (!hasResult) {\n                resolved = await coalesceProvider();\n            }\n            return resolved;\n        };\n    }\n    let isConstant = false;\n    return async () => {\n        if (!hasResult) {\n            resolved = await coalesceProvider();\n        }\n        if (isConstant) {\n            return resolved;\n        }\n        if (requiresRefresh && !requiresRefresh(resolved)) {\n            isConstant = true;\n            return resolved;\n        }\n        if (isExpired(resolved)) {\n            await coalesceProvider();\n            return resolved;\n        }\n        return resolved;\n    };\n};\nexports.memoize = memoize;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.HttpRequest = void 0;\nclass HttpRequest {\n    constructor(options) {\n        this.method = options.method || \"GET\";\n        this.hostname = options.hostname || \"localhost\";\n        this.port = options.port;\n        this.query = options.query || {};\n        this.headers = options.headers || {};\n        this.body = options.body;\n        this.protocol = options.protocol\n            ? options.protocol.substr(-1) !== \":\"\n                ? `${options.protocol}:`\n                : options.protocol\n            : \"https:\";\n        this.path = options.path ? (options.path.charAt(0) !== \"/\" ? `/${options.path}` : options.path) : \"/\";\n    }\n    static isInstance(request) {\n        if (!request)\n            return false;\n        const req = request;\n        return (\"method\" in req &&\n            \"protocol\" in req &&\n            \"hostname\" in req &&\n            \"path\" in req &&\n            typeof req[\"query\"] === \"object\" &&\n            typeof req[\"headers\"] === \"object\");\n    }\n    clone() {\n        const cloned = new HttpRequest({\n            ...this,\n            headers: { ...this.headers },\n        });\n        if (cloned.query)\n            cloned.query = cloneQuery(cloned.query);\n        return cloned;\n    }\n}\nexports.HttpRequest = HttpRequest;\nfunction cloneQuery(query) {\n    return Object.keys(query).reduce((carry, paramName) => {\n        const param = query[paramName];\n        return {\n            ...carry,\n            [paramName]: Array.isArray(param) ? [...param] : param,\n        };\n    }, {});\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.HttpResponse = void 0;\nclass HttpResponse {\n    constructor(options) {\n        this.statusCode = options.statusCode;\n        this.headers = options.headers || {};\n        this.body = options.body;\n    }\n    static isInstance(response) {\n        if (!response)\n            return false;\n        const resp = response;\n        return typeof resp.statusCode === \"number\" && typeof resp.headers === \"object\";\n    }\n}\nexports.HttpResponse = HttpResponse;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = require(\"tslib\");\ntslib_1.__exportStar(require(\"./httpHandler\"), exports);\ntslib_1.__exportStar(require(\"./httpRequest\"), exports);\ntslib_1.__exportStar(require(\"./httpResponse\"), exports);\ntslib_1.__exportStar(require(\"./isValidHostname\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isValidHostname = void 0;\nfunction isValidHostname(hostname) {\n    const hostPattern = /^[a-z0-9][a-z0-9\\.\\-]*[a-z0-9]$/;\n    return hostPattern.test(hostname);\n}\nexports.isValidHostname = isValidHostname;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.buildQueryString = void 0;\nconst util_uri_escape_1 = require(\"@aws-sdk/util-uri-escape\");\nfunction buildQueryString(query) {\n    const parts = [];\n    for (let key of Object.keys(query).sort()) {\n        const value = query[key];\n        key = util_uri_escape_1.escapeUri(key);\n        if (Array.isArray(value)) {\n            for (let i = 0, iLen = value.length; i < iLen; i++) {\n                parts.push(`${key}=${util_uri_escape_1.escapeUri(value[i])}`);\n            }\n        }\n        else {\n            let qsEntry = key;\n            if (value || typeof value === \"string\") {\n                qsEntry += `=${util_uri_escape_1.escapeUri(value)}`;\n            }\n            parts.push(qsEntry);\n        }\n    }\n    return parts.join(\"&\");\n}\nexports.buildQueryString = buildQueryString;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.parseQueryString = void 0;\nfunction parseQueryString(querystring) {\n    const query = {};\n    querystring = querystring.replace(/^\\?/, \"\");\n    if (querystring) {\n        for (const pair of querystring.split(\"&\")) {\n            let [key, value = null] = pair.split(\"=\");\n            key = decodeURIComponent(key);\n            if (value) {\n                value = decodeURIComponent(value);\n            }\n            if (!(key in query)) {\n                query[key] = value;\n            }\n            else if (Array.isArray(query[key])) {\n                query[key].push(value);\n            }\n            else {\n                query[key] = [query[key], value];\n            }\n        }\n    }\n    return query;\n}\nexports.parseQueryString = parseQueryString;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TRANSIENT_ERROR_STATUS_CODES = exports.TRANSIENT_ERROR_CODES = exports.THROTTLING_ERROR_CODES = exports.CLOCK_SKEW_ERROR_CODES = void 0;\nexports.CLOCK_SKEW_ERROR_CODES = [\n    \"AuthFailure\",\n    \"InvalidSignatureException\",\n    \"RequestExpired\",\n    \"RequestInTheFuture\",\n    \"RequestTimeTooSkewed\",\n    \"SignatureDoesNotMatch\",\n];\nexports.THROTTLING_ERROR_CODES = [\n    \"BandwidthLimitExceeded\",\n    \"EC2ThrottledException\",\n    \"LimitExceededException\",\n    \"PriorRequestNotComplete\",\n    \"ProvisionedThroughputExceededException\",\n    \"RequestLimitExceeded\",\n    \"RequestThrottled\",\n    \"RequestThrottledException\",\n    \"SlowDown\",\n    \"ThrottledException\",\n    \"Throttling\",\n    \"ThrottlingException\",\n    \"TooManyRequestsException\",\n    \"TransactionInProgressException\",\n];\nexports.TRANSIENT_ERROR_CODES = [\"AbortError\", \"TimeoutError\", \"RequestTimeout\", \"RequestTimeoutException\"];\nexports.TRANSIENT_ERROR_STATUS_CODES = [500, 502, 503, 504];\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isTransientError = exports.isThrottlingError = exports.isClockSkewError = exports.isRetryableByTrait = void 0;\nconst constants_1 = require(\"./constants\");\nconst isRetryableByTrait = (error) => error.$retryable !== undefined;\nexports.isRetryableByTrait = isRetryableByTrait;\nconst isClockSkewError = (error) => constants_1.CLOCK_SKEW_ERROR_CODES.includes(error.name);\nexports.isClockSkewError = isClockSkewError;\nconst isThrottlingError = (error) => {\n    var _a, _b;\n    return ((_a = error.$metadata) === null || _a === void 0 ? void 0 : _a.httpStatusCode) === 429 ||\n        constants_1.THROTTLING_ERROR_CODES.includes(error.name) ||\n        ((_b = error.$retryable) === null || _b === void 0 ? void 0 : _b.throttling) == true;\n};\nexports.isThrottlingError = isThrottlingError;\nconst isTransientError = (error) => {\n    var _a;\n    return constants_1.TRANSIENT_ERROR_CODES.includes(error.name) ||\n        constants_1.TRANSIENT_ERROR_STATUS_CODES.includes(((_a = error.$metadata) === null || _a === void 0 ? void 0 : _a.httpStatusCode) || 0);\n};\nexports.isTransientError = isTransientError;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getHomeDir = exports.loadSharedConfigFiles = exports.ENV_CONFIG_PATH = exports.ENV_CREDENTIALS_PATH = void 0;\nconst fs_1 = require(\"fs\");\nconst os_1 = require(\"os\");\nconst path_1 = require(\"path\");\nexports.ENV_CREDENTIALS_PATH = \"AWS_SHARED_CREDENTIALS_FILE\";\nexports.ENV_CONFIG_PATH = \"AWS_CONFIG_FILE\";\nconst swallowError = () => ({});\nconst loadSharedConfigFiles = (init = {}) => {\n    const { filepath = process.env[exports.ENV_CREDENTIALS_PATH] || path_1.join(exports.getHomeDir(), \".aws\", \"credentials\"), configFilepath = process.env[exports.ENV_CONFIG_PATH] || path_1.join(exports.getHomeDir(), \".aws\", \"config\"), } = init;\n    return Promise.all([\n        slurpFile(configFilepath).then(parseIni).then(normalizeConfigFile).catch(swallowError),\n        slurpFile(filepath).then(parseIni).catch(swallowError),\n    ]).then((parsedFiles) => {\n        const [configFile, credentialsFile] = parsedFiles;\n        return {\n            configFile,\n            credentialsFile,\n        };\n    });\n};\nexports.loadSharedConfigFiles = loadSharedConfigFiles;\nconst profileKeyRegex = /^profile\\s([\"'])?([^\\1]+)\\1$/;\nconst normalizeConfigFile = (data) => {\n    const map = {};\n    for (const key of Object.keys(data)) {\n        let matches;\n        if (key === \"default\") {\n            map.default = data.default;\n        }\n        else if ((matches = profileKeyRegex.exec(key))) {\n            const [_1, _2, normalizedKey] = matches;\n            if (normalizedKey) {\n                map[normalizedKey] = data[key];\n            }\n        }\n    }\n    return map;\n};\nconst profileNameBlockList = [\"__proto__\", \"profile __proto__\"];\nconst parseIni = (iniData) => {\n    const map = {};\n    let currentSection;\n    for (let line of iniData.split(/\\r?\\n/)) {\n        line = line.split(/(^|\\s)[;#]/)[0];\n        const section = line.match(/^\\s*\\[([^\\[\\]]+)]\\s*$/);\n        if (section) {\n            currentSection = section[1];\n            if (profileNameBlockList.includes(currentSection)) {\n                throw new Error(`Found invalid profile name \"${currentSection}\"`);\n            }\n        }\n        else if (currentSection) {\n            const item = line.match(/^\\s*(.+?)\\s*=\\s*(.+?)\\s*$/);\n            if (item) {\n                map[currentSection] = map[currentSection] || {};\n                map[currentSection][item[1]] = item[2];\n            }\n        }\n    }\n    return map;\n};\nconst slurpFile = (path) => new Promise((resolve, reject) => {\n    fs_1.readFile(path, \"utf8\", (err, data) => {\n        if (err) {\n            reject(err);\n        }\n        else {\n            resolve(data);\n        }\n    });\n});\nconst getHomeDir = () => {\n    const { HOME, USERPROFILE, HOMEPATH, HOMEDRIVE = `C:${path_1.sep}` } = process.env;\n    if (HOME)\n        return HOME;\n    if (USERPROFILE)\n        return USERPROFILE;\n    if (HOMEPATH)\n        return `${HOMEDRIVE}${HOMEPATH}`;\n    return os_1.homedir();\n};\nexports.getHomeDir = getHomeDir;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SignatureV4 = void 0;\nconst util_hex_encoding_1 = require(\"@aws-sdk/util-hex-encoding\");\nconst constants_1 = require(\"./constants\");\nconst credentialDerivation_1 = require(\"./credentialDerivation\");\nconst getCanonicalHeaders_1 = require(\"./getCanonicalHeaders\");\nconst getCanonicalQuery_1 = require(\"./getCanonicalQuery\");\nconst getPayloadHash_1 = require(\"./getPayloadHash\");\nconst headerUtil_1 = require(\"./headerUtil\");\nconst moveHeadersToQuery_1 = require(\"./moveHeadersToQuery\");\nconst normalizeProvider_1 = require(\"./normalizeProvider\");\nconst prepareRequest_1 = require(\"./prepareRequest\");\nconst utilDate_1 = require(\"./utilDate\");\nclass SignatureV4 {\n    constructor({ applyChecksum, credentials, region, service, sha256, uriEscapePath = true, }) {\n        this.service = service;\n        this.sha256 = sha256;\n        this.uriEscapePath = uriEscapePath;\n        this.applyChecksum = typeof applyChecksum === \"boolean\" ? applyChecksum : true;\n        this.regionProvider = normalizeProvider_1.normalizeRegionProvider(region);\n        this.credentialProvider = normalizeProvider_1.normalizeCredentialsProvider(credentials);\n    }\n    async presign(originalRequest, options = {}) {\n        const { signingDate = new Date(), expiresIn = 3600, unsignableHeaders, unhoistableHeaders, signableHeaders, signingRegion, signingService, } = options;\n        const credentials = await this.credentialProvider();\n        const region = signingRegion !== null && signingRegion !== void 0 ? signingRegion : (await this.regionProvider());\n        const { longDate, shortDate } = formatDate(signingDate);\n        if (expiresIn > constants_1.MAX_PRESIGNED_TTL) {\n            return Promise.reject(\"Signature version 4 presigned URLs\" + \" must have an expiration date less than one week in\" + \" the future\");\n        }\n        const scope = credentialDerivation_1.createScope(shortDate, region, signingService !== null && signingService !== void 0 ? signingService : this.service);\n        const request = moveHeadersToQuery_1.moveHeadersToQuery(prepareRequest_1.prepareRequest(originalRequest), { unhoistableHeaders });\n        if (credentials.sessionToken) {\n            request.query[constants_1.TOKEN_QUERY_PARAM] = credentials.sessionToken;\n        }\n        request.query[constants_1.ALGORITHM_QUERY_PARAM] = constants_1.ALGORITHM_IDENTIFIER;\n        request.query[constants_1.CREDENTIAL_QUERY_PARAM] = `${credentials.accessKeyId}/${scope}`;\n        request.query[constants_1.AMZ_DATE_QUERY_PARAM] = longDate;\n        request.query[constants_1.EXPIRES_QUERY_PARAM] = expiresIn.toString(10);\n        const canonicalHeaders = getCanonicalHeaders_1.getCanonicalHeaders(request, unsignableHeaders, signableHeaders);\n        request.query[constants_1.SIGNED_HEADERS_QUERY_PARAM] = getCanonicalHeaderList(canonicalHeaders);\n        request.query[constants_1.SIGNATURE_QUERY_PARAM] = await this.getSignature(longDate, scope, this.getSigningKey(credentials, region, shortDate, signingService), this.createCanonicalRequest(request, canonicalHeaders, await getPayloadHash_1.getPayloadHash(originalRequest, this.sha256)));\n        return request;\n    }\n    async sign(toSign, options) {\n        if (typeof toSign === \"string\") {\n            return this.signString(toSign, options);\n        }\n        else if (toSign.headers && toSign.payload) {\n            return this.signEvent(toSign, options);\n        }\n        else {\n            return this.signRequest(toSign, options);\n        }\n    }\n    async signEvent({ headers, payload }, { signingDate = new Date(), priorSignature, signingRegion, signingService }) {\n        const region = signingRegion !== null && signingRegion !== void 0 ? signingRegion : (await this.regionProvider());\n        const { shortDate, longDate } = formatDate(signingDate);\n        const scope = credentialDerivation_1.createScope(shortDate, region, signingService !== null && signingService !== void 0 ? signingService : this.service);\n        const hashedPayload = await getPayloadHash_1.getPayloadHash({ headers: {}, body: payload }, this.sha256);\n        const hash = new this.sha256();\n        hash.update(headers);\n        const hashedHeaders = util_hex_encoding_1.toHex(await hash.digest());\n        const stringToSign = [\n            constants_1.EVENT_ALGORITHM_IDENTIFIER,\n            longDate,\n            scope,\n            priorSignature,\n            hashedHeaders,\n            hashedPayload,\n        ].join(\"\\n\");\n        return this.signString(stringToSign, { signingDate, signingRegion: region, signingService });\n    }\n    async signString(stringToSign, { signingDate = new Date(), signingRegion, signingService } = {}) {\n        const credentials = await this.credentialProvider();\n        const region = signingRegion !== null && signingRegion !== void 0 ? signingRegion : (await this.regionProvider());\n        const { shortDate } = formatDate(signingDate);\n        const hash = new this.sha256(await this.getSigningKey(credentials, region, shortDate, signingService));\n        hash.update(stringToSign);\n        return util_hex_encoding_1.toHex(await hash.digest());\n    }\n    async signRequest(requestToSign, { signingDate = new Date(), signableHeaders, unsignableHeaders, signingRegion, signingService, } = {}) {\n        const credentials = await this.credentialProvider();\n        const region = signingRegion !== null && signingRegion !== void 0 ? signingRegion : (await this.regionProvider());\n        const request = prepareRequest_1.prepareRequest(requestToSign);\n        const { longDate, shortDate } = formatDate(signingDate);\n        const scope = credentialDerivation_1.createScope(shortDate, region, signingService !== null && signingService !== void 0 ? signingService : this.service);\n        request.headers[constants_1.AMZ_DATE_HEADER] = longDate;\n        if (credentials.sessionToken) {\n            request.headers[constants_1.TOKEN_HEADER] = credentials.sessionToken;\n        }\n        const payloadHash = await getPayloadHash_1.getPayloadHash(request, this.sha256);\n        if (!headerUtil_1.hasHeader(constants_1.SHA256_HEADER, request.headers) && this.applyChecksum) {\n            request.headers[constants_1.SHA256_HEADER] = payloadHash;\n        }\n        const canonicalHeaders = getCanonicalHeaders_1.getCanonicalHeaders(request, unsignableHeaders, signableHeaders);\n        const signature = await this.getSignature(longDate, scope, this.getSigningKey(credentials, region, shortDate, signingService), this.createCanonicalRequest(request, canonicalHeaders, payloadHash));\n        request.headers[constants_1.AUTH_HEADER] =\n            `${constants_1.ALGORITHM_IDENTIFIER} ` +\n                `Credential=${credentials.accessKeyId}/${scope}, ` +\n                `SignedHeaders=${getCanonicalHeaderList(canonicalHeaders)}, ` +\n                `Signature=${signature}`;\n        return request;\n    }\n    createCanonicalRequest(request, canonicalHeaders, payloadHash) {\n        const sortedHeaders = Object.keys(canonicalHeaders).sort();\n        return `${request.method}\n${this.getCanonicalPath(request)}\n${getCanonicalQuery_1.getCanonicalQuery(request)}\n${sortedHeaders.map((name) => `${name}:${canonicalHeaders[name]}`).join(\"\\n\")}\n\n${sortedHeaders.join(\";\")}\n${payloadHash}`;\n    }\n    async createStringToSign(longDate, credentialScope, canonicalRequest) {\n        const hash = new this.sha256();\n        hash.update(canonicalRequest);\n        const hashedRequest = await hash.digest();\n        return `${constants_1.ALGORITHM_IDENTIFIER}\n${longDate}\n${credentialScope}\n${util_hex_encoding_1.toHex(hashedRequest)}`;\n    }\n    getCanonicalPath({ path }) {\n        if (this.uriEscapePath) {\n            const doubleEncoded = encodeURIComponent(path.replace(/^\\//, \"\"));\n            return `/${doubleEncoded.replace(/%2F/g, \"/\")}`;\n        }\n        return path;\n    }\n    async getSignature(longDate, credentialScope, keyPromise, canonicalRequest) {\n        const stringToSign = await this.createStringToSign(longDate, credentialScope, canonicalRequest);\n        const hash = new this.sha256(await keyPromise);\n        hash.update(stringToSign);\n        return util_hex_encoding_1.toHex(await hash.digest());\n    }\n    getSigningKey(credentials, region, shortDate, service) {\n        return credentialDerivation_1.getSigningKey(this.sha256, credentials, shortDate, region, service || this.service);\n    }\n}\nexports.SignatureV4 = SignatureV4;\nconst formatDate = (now) => {\n    const longDate = utilDate_1.iso8601(now).replace(/[\\-:]/g, \"\");\n    return {\n        longDate,\n        shortDate: longDate.substr(0, 8),\n    };\n};\nconst getCanonicalHeaderList = (headers) => Object.keys(headers).sort().join(\";\");\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.cloneQuery = exports.cloneRequest = void 0;\nconst cloneRequest = ({ headers, query, ...rest }) => ({\n    ...rest,\n    headers: { ...headers },\n    query: query ? exports.cloneQuery(query) : undefined,\n});\nexports.cloneRequest = cloneRequest;\nconst cloneQuery = (query) => Object.keys(query).reduce((carry, paramName) => {\n    const param = query[paramName];\n    return {\n        ...carry,\n        [paramName]: Array.isArray(param) ? [...param] : param,\n    };\n}, {});\nexports.cloneQuery = cloneQuery;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.MAX_PRESIGNED_TTL = exports.KEY_TYPE_IDENTIFIER = exports.MAX_CACHE_SIZE = exports.UNSIGNED_PAYLOAD = exports.EVENT_ALGORITHM_IDENTIFIER = exports.ALGORITHM_IDENTIFIER_V4A = exports.ALGORITHM_IDENTIFIER = exports.UNSIGNABLE_PATTERNS = exports.SEC_HEADER_PATTERN = exports.PROXY_HEADER_PATTERN = exports.ALWAYS_UNSIGNABLE_HEADERS = exports.HOST_HEADER = exports.TOKEN_HEADER = exports.SHA256_HEADER = exports.SIGNATURE_HEADER = exports.GENERATED_HEADERS = exports.DATE_HEADER = exports.AMZ_DATE_HEADER = exports.AUTH_HEADER = exports.REGION_SET_PARAM = exports.TOKEN_QUERY_PARAM = exports.SIGNATURE_QUERY_PARAM = exports.EXPIRES_QUERY_PARAM = exports.SIGNED_HEADERS_QUERY_PARAM = exports.AMZ_DATE_QUERY_PARAM = exports.CREDENTIAL_QUERY_PARAM = exports.ALGORITHM_QUERY_PARAM = void 0;\nexports.ALGORITHM_QUERY_PARAM = \"X-Amz-Algorithm\";\nexports.CREDENTIAL_QUERY_PARAM = \"X-Amz-Credential\";\nexports.AMZ_DATE_QUERY_PARAM = \"X-Amz-Date\";\nexports.SIGNED_HEADERS_QUERY_PARAM = \"X-Amz-SignedHeaders\";\nexports.EXPIRES_QUERY_PARAM = \"X-Amz-Expires\";\nexports.SIGNATURE_QUERY_PARAM = \"X-Amz-Signature\";\nexports.TOKEN_QUERY_PARAM = \"X-Amz-Security-Token\";\nexports.REGION_SET_PARAM = \"X-Amz-Region-Set\";\nexports.AUTH_HEADER = \"authorization\";\nexports.AMZ_DATE_HEADER = exports.AMZ_DATE_QUERY_PARAM.toLowerCase();\nexports.DATE_HEADER = \"date\";\nexports.GENERATED_HEADERS = [exports.AUTH_HEADER, exports.AMZ_DATE_HEADER, exports.DATE_HEADER];\nexports.SIGNATURE_HEADER = exports.SIGNATURE_QUERY_PARAM.toLowerCase();\nexports.SHA256_HEADER = \"x-amz-content-sha256\";\nexports.TOKEN_HEADER = exports.TOKEN_QUERY_PARAM.toLowerCase();\nexports.HOST_HEADER = \"host\";\nexports.ALWAYS_UNSIGNABLE_HEADERS = {\n    authorization: true,\n    \"cache-control\": true,\n    connection: true,\n    expect: true,\n    from: true,\n    \"keep-alive\": true,\n    \"max-forwards\": true,\n    pragma: true,\n    referer: true,\n    te: true,\n    trailer: true,\n    \"transfer-encoding\": true,\n    upgrade: true,\n    \"user-agent\": true,\n    \"x-amzn-trace-id\": true,\n};\nexports.PROXY_HEADER_PATTERN = /^proxy-/;\nexports.SEC_HEADER_PATTERN = /^sec-/;\nexports.UNSIGNABLE_PATTERNS = [/^proxy-/i, /^sec-/i];\nexports.ALGORITHM_IDENTIFIER = \"AWS4-HMAC-SHA256\";\nexports.ALGORITHM_IDENTIFIER_V4A = \"AWS4-ECDSA-P256-SHA256\";\nexports.EVENT_ALGORITHM_IDENTIFIER = \"AWS4-HMAC-SHA256-PAYLOAD\";\nexports.UNSIGNED_PAYLOAD = \"UNSIGNED-PAYLOAD\";\nexports.MAX_CACHE_SIZE = 50;\nexports.KEY_TYPE_IDENTIFIER = \"aws4_request\";\nexports.MAX_PRESIGNED_TTL = 60 * 60 * 24 * 7;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.clearCredentialCache = exports.getSigningKey = exports.createScope = void 0;\nconst util_hex_encoding_1 = require(\"@aws-sdk/util-hex-encoding\");\nconst constants_1 = require(\"./constants\");\nconst signingKeyCache = {};\nconst cacheQueue = [];\nconst createScope = (shortDate, region, service) => `${shortDate}/${region}/${service}/${constants_1.KEY_TYPE_IDENTIFIER}`;\nexports.createScope = createScope;\nconst getSigningKey = async (sha256Constructor, credentials, shortDate, region, service) => {\n    const credsHash = await hmac(sha256Constructor, credentials.secretAccessKey, credentials.accessKeyId);\n    const cacheKey = `${shortDate}:${region}:${service}:${util_hex_encoding_1.toHex(credsHash)}:${credentials.sessionToken}`;\n    if (cacheKey in signingKeyCache) {\n        return signingKeyCache[cacheKey];\n    }\n    cacheQueue.push(cacheKey);\n    while (cacheQueue.length > constants_1.MAX_CACHE_SIZE) {\n        delete signingKeyCache[cacheQueue.shift()];\n    }\n    let key = `AWS4${credentials.secretAccessKey}`;\n    for (const signable of [shortDate, region, service, constants_1.KEY_TYPE_IDENTIFIER]) {\n        key = await hmac(sha256Constructor, key, signable);\n    }\n    return (signingKeyCache[cacheKey] = key);\n};\nexports.getSigningKey = getSigningKey;\nconst clearCredentialCache = () => {\n    cacheQueue.length = 0;\n    Object.keys(signingKeyCache).forEach((cacheKey) => {\n        delete signingKeyCache[cacheKey];\n    });\n};\nexports.clearCredentialCache = clearCredentialCache;\nconst hmac = (ctor, secret, data) => {\n    const hash = new ctor(secret);\n    hash.update(data);\n    return hash.digest();\n};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getCanonicalHeaders = void 0;\nconst constants_1 = require(\"./constants\");\nconst getCanonicalHeaders = ({ headers }, unsignableHeaders, signableHeaders) => {\n    const canonical = {};\n    for (const headerName of Object.keys(headers).sort()) {\n        const canonicalHeaderName = headerName.toLowerCase();\n        if (canonicalHeaderName in constants_1.ALWAYS_UNSIGNABLE_HEADERS ||\n            (unsignableHeaders === null || unsignableHeaders === void 0 ? void 0 : unsignableHeaders.has(canonicalHeaderName)) ||\n            constants_1.PROXY_HEADER_PATTERN.test(canonicalHeaderName) ||\n            constants_1.SEC_HEADER_PATTERN.test(canonicalHeaderName)) {\n            if (!signableHeaders || (signableHeaders && !signableHeaders.has(canonicalHeaderName))) {\n                continue;\n            }\n        }\n        canonical[canonicalHeaderName] = headers[headerName].trim().replace(/\\s+/g, \" \");\n    }\n    return canonical;\n};\nexports.getCanonicalHeaders = getCanonicalHeaders;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getCanonicalQuery = void 0;\nconst util_uri_escape_1 = require(\"@aws-sdk/util-uri-escape\");\nconst constants_1 = require(\"./constants\");\nconst getCanonicalQuery = ({ query = {} }) => {\n    const keys = [];\n    const serialized = {};\n    for (const key of Object.keys(query).sort()) {\n        if (key.toLowerCase() === constants_1.SIGNATURE_HEADER) {\n            continue;\n        }\n        keys.push(key);\n        const value = query[key];\n        if (typeof value === \"string\") {\n            serialized[key] = `${util_uri_escape_1.escapeUri(key)}=${util_uri_escape_1.escapeUri(value)}`;\n        }\n        else if (Array.isArray(value)) {\n            serialized[key] = value\n                .slice(0)\n                .sort()\n                .reduce((encoded, value) => encoded.concat([`${util_uri_escape_1.escapeUri(key)}=${util_uri_escape_1.escapeUri(value)}`]), [])\n                .join(\"&\");\n        }\n    }\n    return keys\n        .map((key) => serialized[key])\n        .filter((serialized) => serialized)\n        .join(\"&\");\n};\nexports.getCanonicalQuery = getCanonicalQuery;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getPayloadHash = void 0;\nconst is_array_buffer_1 = require(\"@aws-sdk/is-array-buffer\");\nconst util_hex_encoding_1 = require(\"@aws-sdk/util-hex-encoding\");\nconst constants_1 = require(\"./constants\");\nconst getPayloadHash = async ({ headers, body }, hashConstructor) => {\n    for (const headerName of Object.keys(headers)) {\n        if (headerName.toLowerCase() === constants_1.SHA256_HEADER) {\n            return headers[headerName];\n        }\n    }\n    if (body == undefined) {\n        return \"e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855\";\n    }\n    else if (typeof body === \"string\" || ArrayBuffer.isView(body) || is_array_buffer_1.isArrayBuffer(body)) {\n        const hashCtor = new hashConstructor();\n        hashCtor.update(body);\n        return util_hex_encoding_1.toHex(await hashCtor.digest());\n    }\n    return constants_1.UNSIGNED_PAYLOAD;\n};\nexports.getPayloadHash = getPayloadHash;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.deleteHeader = exports.getHeaderValue = exports.hasHeader = void 0;\nconst hasHeader = (soughtHeader, headers) => {\n    soughtHeader = soughtHeader.toLowerCase();\n    for (const headerName of Object.keys(headers)) {\n        if (soughtHeader === headerName.toLowerCase()) {\n            return true;\n        }\n    }\n    return false;\n};\nexports.hasHeader = hasHeader;\nconst getHeaderValue = (soughtHeader, headers) => {\n    soughtHeader = soughtHeader.toLowerCase();\n    for (const headerName of Object.keys(headers)) {\n        if (soughtHeader === headerName.toLowerCase()) {\n            return headers[headerName];\n        }\n    }\n    return undefined;\n};\nexports.getHeaderValue = getHeaderValue;\nconst deleteHeader = (soughtHeader, headers) => {\n    soughtHeader = soughtHeader.toLowerCase();\n    for (const headerName of Object.keys(headers)) {\n        if (soughtHeader === headerName.toLowerCase()) {\n            delete headers[headerName];\n        }\n    }\n};\nexports.deleteHeader = deleteHeader;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.normalizeRegionProvider = exports.normalizeCredentialsProvider = exports.prepareRequest = exports.moveHeadersToQuery = exports.getPayloadHash = exports.getCanonicalQuery = exports.getCanonicalHeaders = void 0;\nconst tslib_1 = require(\"tslib\");\ntslib_1.__exportStar(require(\"./SignatureV4\"), exports);\nvar getCanonicalHeaders_1 = require(\"./getCanonicalHeaders\");\nObject.defineProperty(exports, \"getCanonicalHeaders\", { enumerable: true, get: function () { return getCanonicalHeaders_1.getCanonicalHeaders; } });\nvar getCanonicalQuery_1 = require(\"./getCanonicalQuery\");\nObject.defineProperty(exports, \"getCanonicalQuery\", { enumerable: true, get: function () { return getCanonicalQuery_1.getCanonicalQuery; } });\nvar getPayloadHash_1 = require(\"./getPayloadHash\");\nObject.defineProperty(exports, \"getPayloadHash\", { enumerable: true, get: function () { return getPayloadHash_1.getPayloadHash; } });\nvar moveHeadersToQuery_1 = require(\"./moveHeadersToQuery\");\nObject.defineProperty(exports, \"moveHeadersToQuery\", { enumerable: true, get: function () { return moveHeadersToQuery_1.moveHeadersToQuery; } });\nvar prepareRequest_1 = require(\"./prepareRequest\");\nObject.defineProperty(exports, \"prepareRequest\", { enumerable: true, get: function () { return prepareRequest_1.prepareRequest; } });\nvar normalizeProvider_1 = require(\"./normalizeProvider\");\nObject.defineProperty(exports, \"normalizeCredentialsProvider\", { enumerable: true, get: function () { return normalizeProvider_1.normalizeCredentialsProvider; } });\nObject.defineProperty(exports, \"normalizeRegionProvider\", { enumerable: true, get: function () { return normalizeProvider_1.normalizeRegionProvider; } });\ntslib_1.__exportStar(require(\"./credentialDerivation\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.moveHeadersToQuery = void 0;\nconst cloneRequest_1 = require(\"./cloneRequest\");\nconst moveHeadersToQuery = (request, options = {}) => {\n    var _a;\n    const { headers, query = {} } = typeof request.clone === \"function\" ? request.clone() : cloneRequest_1.cloneRequest(request);\n    for (const name of Object.keys(headers)) {\n        const lname = name.toLowerCase();\n        if (lname.substr(0, 6) === \"x-amz-\" && !((_a = options.unhoistableHeaders) === null || _a === void 0 ? void 0 : _a.has(lname))) {\n            query[name] = headers[name];\n            delete headers[name];\n        }\n    }\n    return {\n        ...request,\n        headers,\n        query,\n    };\n};\nexports.moveHeadersToQuery = moveHeadersToQuery;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.normalizeCredentialsProvider = exports.normalizeRegionProvider = void 0;\nconst normalizeRegionProvider = (region) => {\n    if (typeof region === \"string\") {\n        const promisified = Promise.resolve(region);\n        return () => promisified;\n    }\n    else {\n        return region;\n    }\n};\nexports.normalizeRegionProvider = normalizeRegionProvider;\nconst normalizeCredentialsProvider = (credentials) => {\n    if (typeof credentials === \"object\") {\n        const promisified = Promise.resolve(credentials);\n        return () => promisified;\n    }\n    else {\n        return credentials;\n    }\n};\nexports.normalizeCredentialsProvider = normalizeCredentialsProvider;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.prepareRequest = void 0;\nconst cloneRequest_1 = require(\"./cloneRequest\");\nconst constants_1 = require(\"./constants\");\nconst prepareRequest = (request) => {\n    request = typeof request.clone === \"function\" ? request.clone() : cloneRequest_1.cloneRequest(request);\n    for (const headerName of Object.keys(request.headers)) {\n        if (constants_1.GENERATED_HEADERS.indexOf(headerName.toLowerCase()) > -1) {\n            delete request.headers[headerName];\n        }\n    }\n    return request;\n};\nexports.prepareRequest = prepareRequest;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.toDate = exports.iso8601 = void 0;\nconst iso8601 = (time) => exports.toDate(time)\n    .toISOString()\n    .replace(/\\.\\d{3}Z$/, \"Z\");\nexports.iso8601 = iso8601;\nconst toDate = (time) => {\n    if (typeof time === \"number\") {\n        return new Date(time * 1000);\n    }\n    if (typeof time === \"string\") {\n        if (Number(time)) {\n            return new Date(Number(time) * 1000);\n        }\n        return new Date(time);\n    }\n    return time;\n};\nexports.toDate = toDate;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Client = void 0;\nconst middleware_stack_1 = require(\"@aws-sdk/middleware-stack\");\nclass Client {\n    constructor(config) {\n        this.middlewareStack = middleware_stack_1.constructStack();\n        this.config = config;\n    }\n    send(command, optionsOrCb, cb) {\n        const options = typeof optionsOrCb !== \"function\" ? optionsOrCb : undefined;\n        const callback = typeof optionsOrCb === \"function\" ? optionsOrCb : cb;\n        const handler = command.resolveMiddleware(this.middlewareStack, this.config, options);\n        if (callback) {\n            handler(command)\n                .then((result) => callback(null, result.output), (err) => callback(err))\n                .catch(() => { });\n        }\n        else {\n            return handler(command).then((result) => result.output);\n        }\n    }\n    destroy() {\n        if (this.config.requestHandler.destroy)\n            this.config.requestHandler.destroy();\n    }\n}\nexports.Client = Client;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Command = void 0;\nconst middleware_stack_1 = require(\"@aws-sdk/middleware-stack\");\nclass Command {\n    constructor() {\n        this.middlewareStack = middleware_stack_1.constructStack();\n    }\n}\nexports.Command = Command;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SENSITIVE_STRING = void 0;\nexports.SENSITIVE_STRING = \"***SensitiveInformation***\";\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.parseEpochTimestamp = exports.parseRfc7231DateTime = exports.parseRfc3339DateTime = exports.dateToUtcString = void 0;\nconst parse_utils_1 = require(\"./parse-utils\");\nconst DAYS = [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"];\nconst MONTHS = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\nfunction dateToUtcString(date) {\n    const year = date.getUTCFullYear();\n    const month = date.getUTCMonth();\n    const dayOfWeek = date.getUTCDay();\n    const dayOfMonthInt = date.getUTCDate();\n    const hoursInt = date.getUTCHours();\n    const minutesInt = date.getUTCMinutes();\n    const secondsInt = date.getUTCSeconds();\n    const dayOfMonthString = dayOfMonthInt < 10 ? `0${dayOfMonthInt}` : `${dayOfMonthInt}`;\n    const hoursString = hoursInt < 10 ? `0${hoursInt}` : `${hoursInt}`;\n    const minutesString = minutesInt < 10 ? `0${minutesInt}` : `${minutesInt}`;\n    const secondsString = secondsInt < 10 ? `0${secondsInt}` : `${secondsInt}`;\n    return `${DAYS[dayOfWeek]}, ${dayOfMonthString} ${MONTHS[month]} ${year} ${hoursString}:${minutesString}:${secondsString} GMT`;\n}\nexports.dateToUtcString = dateToUtcString;\nconst RFC3339 = new RegExp(/^(\\d{4})-(\\d{2})-(\\d{2})[tT](\\d{2}):(\\d{2}):(\\d{2})(?:\\.(\\d+))?[zZ]$/);\nconst parseRfc3339DateTime = (value) => {\n    if (value === null || value === undefined) {\n        return undefined;\n    }\n    if (typeof value !== \"string\") {\n        throw new TypeError(\"RFC-3339 date-times must be expressed as strings\");\n    }\n    const match = RFC3339.exec(value);\n    if (!match) {\n        throw new TypeError(\"Invalid RFC-3339 date-time value\");\n    }\n    const [_, yearStr, monthStr, dayStr, hours, minutes, seconds, fractionalMilliseconds] = match;\n    const year = parse_utils_1.strictParseShort(stripLeadingZeroes(yearStr));\n    const month = parseDateValue(monthStr, \"month\", 1, 12);\n    const day = parseDateValue(dayStr, \"day\", 1, 31);\n    return buildDate(year, month, day, { hours, minutes, seconds, fractionalMilliseconds });\n};\nexports.parseRfc3339DateTime = parseRfc3339DateTime;\nconst IMF_FIXDATE = new RegExp(/^(?:Mon|Tue|Wed|Thu|Fri|Sat|Sun), (\\d{2}) (Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec) (\\d{4}) (\\d{2}):(\\d{2}):(\\d{2})(?:\\.(\\d+))? GMT$/);\nconst RFC_850_DATE = new RegExp(/^(?:Monday|Tuesday|Wednesday|Thursday|Friday|Saturday|Sunday), (\\d{2})-(Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)-(\\d{2}) (\\d{2}):(\\d{2}):(\\d{2})(?:\\.(\\d+))? GMT$/);\nconst ASC_TIME = new RegExp(/^(?:Mon|Tue|Wed|Thu|Fri|Sat|Sun) (Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec) ( [1-9]|\\d{2}) (\\d{2}):(\\d{2}):(\\d{2})(?:\\.(\\d+))? (\\d{4})$/);\nconst parseRfc7231DateTime = (value) => {\n    if (value === null || value === undefined) {\n        return undefined;\n    }\n    if (typeof value !== \"string\") {\n        throw new TypeError(\"RFC-7231 date-times must be expressed as strings\");\n    }\n    let match = IMF_FIXDATE.exec(value);\n    if (match) {\n        const [_, dayStr, monthStr, yearStr, hours, minutes, seconds, fractionalMilliseconds] = match;\n        return buildDate(parse_utils_1.strictParseShort(stripLeadingZeroes(yearStr)), parseMonthByShortName(monthStr), parseDateValue(dayStr, \"day\", 1, 31), { hours, minutes, seconds, fractionalMilliseconds });\n    }\n    match = RFC_850_DATE.exec(value);\n    if (match) {\n        const [_, dayStr, monthStr, yearStr, hours, minutes, seconds, fractionalMilliseconds] = match;\n        return adjustRfc850Year(buildDate(parseTwoDigitYear(yearStr), parseMonthByShortName(monthStr), parseDateValue(dayStr, \"day\", 1, 31), {\n            hours,\n            minutes,\n            seconds,\n            fractionalMilliseconds,\n        }));\n    }\n    match = ASC_TIME.exec(value);\n    if (match) {\n        const [_, monthStr, dayStr, hours, minutes, seconds, fractionalMilliseconds, yearStr] = match;\n        return buildDate(parse_utils_1.strictParseShort(stripLeadingZeroes(yearStr)), parseMonthByShortName(monthStr), parseDateValue(dayStr.trimLeft(), \"day\", 1, 31), { hours, minutes, seconds, fractionalMilliseconds });\n    }\n    throw new TypeError(\"Invalid RFC-7231 date-time value\");\n};\nexports.parseRfc7231DateTime = parseRfc7231DateTime;\nconst parseEpochTimestamp = (value) => {\n    if (value === null || value === undefined) {\n        return undefined;\n    }\n    let valueAsDouble;\n    if (typeof value === \"number\") {\n        valueAsDouble = value;\n    }\n    else if (typeof value === \"string\") {\n        valueAsDouble = parse_utils_1.strictParseDouble(value);\n    }\n    else {\n        throw new TypeError(\"Epoch timestamps must be expressed as floating point numbers or their string representation\");\n    }\n    if (Number.isNaN(valueAsDouble) || valueAsDouble === Infinity || valueAsDouble === -Infinity) {\n        throw new TypeError(\"Epoch timestamps must be valid, non-Infinite, non-NaN numerics\");\n    }\n    return new Date(Math.round(valueAsDouble * 1000));\n};\nexports.parseEpochTimestamp = parseEpochTimestamp;\nconst buildDate = (year, month, day, time) => {\n    const adjustedMonth = month - 1;\n    validateDayOfMonth(year, adjustedMonth, day);\n    return new Date(Date.UTC(year, adjustedMonth, day, parseDateValue(time.hours, \"hour\", 0, 23), parseDateValue(time.minutes, \"minute\", 0, 59), parseDateValue(time.seconds, \"seconds\", 0, 60), parseMilliseconds(time.fractionalMilliseconds)));\n};\nconst parseTwoDigitYear = (value) => {\n    const thisYear = new Date().getUTCFullYear();\n    const valueInThisCentury = Math.floor(thisYear / 100) * 100 + parse_utils_1.strictParseShort(stripLeadingZeroes(value));\n    if (valueInThisCentury < thisYear) {\n        return valueInThisCentury + 100;\n    }\n    return valueInThisCentury;\n};\nconst FIFTY_YEARS_IN_MILLIS = 50 * 365 * 24 * 60 * 60 * 1000;\nconst adjustRfc850Year = (input) => {\n    if (input.getTime() - new Date().getTime() > FIFTY_YEARS_IN_MILLIS) {\n        return new Date(Date.UTC(input.getUTCFullYear() - 100, input.getUTCMonth(), input.getUTCDate(), input.getUTCHours(), input.getUTCMinutes(), input.getUTCSeconds(), input.getUTCMilliseconds()));\n    }\n    return input;\n};\nconst parseMonthByShortName = (value) => {\n    const monthIdx = MONTHS.indexOf(value);\n    if (monthIdx < 0) {\n        throw new TypeError(`Invalid month: ${value}`);\n    }\n    return monthIdx + 1;\n};\nconst DAYS_IN_MONTH = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\nconst validateDayOfMonth = (year, month, day) => {\n    let maxDays = DAYS_IN_MONTH[month];\n    if (month === 1 && isLeapYear(year)) {\n        maxDays = 29;\n    }\n    if (day > maxDays) {\n        throw new TypeError(`Invalid day for ${MONTHS[month]} in ${year}: ${day}`);\n    }\n};\nconst isLeapYear = (year) => {\n    return year % 4 === 0 && (year % 100 !== 0 || year % 400 === 0);\n};\nconst parseDateValue = (value, type, lower, upper) => {\n    const dateVal = parse_utils_1.strictParseByte(stripLeadingZeroes(value));\n    if (dateVal < lower || dateVal > upper) {\n        throw new TypeError(`${type} must be between ${lower} and ${upper}, inclusive`);\n    }\n    return dateVal;\n};\nconst parseMilliseconds = (value) => {\n    if (value === null || value === undefined) {\n        return 0;\n    }\n    return parse_utils_1.strictParseFloat32(\"0.\" + value) * 1000;\n};\nconst stripLeadingZeroes = (value) => {\n    let idx = 0;\n    while (idx < value.length - 1 && value.charAt(idx) === \"0\") {\n        idx++;\n    }\n    if (idx === 0) {\n        return value;\n    }\n    return value.slice(idx);\n};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.loadConfigsForDefaultMode = void 0;\nconst loadConfigsForDefaultMode = (mode) => {\n    switch (mode) {\n        case \"standard\":\n            return {\n                retryMode: \"standard\",\n                connectionTimeout: 3100,\n            };\n        case \"in-region\":\n            return {\n                retryMode: \"standard\",\n                connectionTimeout: 1100,\n            };\n        case \"cross-region\":\n            return {\n                retryMode: \"standard\",\n                connectionTimeout: 3100,\n            };\n        case \"mobile\":\n            return {\n                retryMode: \"standard\",\n                connectionTimeout: 30000,\n            };\n        default:\n            return {};\n    }\n};\nexports.loadConfigsForDefaultMode = loadConfigsForDefaultMode;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.emitWarningIfUnsupportedVersion = void 0;\nlet warningEmitted = false;\nconst emitWarningIfUnsupportedVersion = (version) => {\n    if (version && !warningEmitted && parseInt(version.substring(1, version.indexOf(\".\"))) < 12) {\n        warningEmitted = true;\n        process.emitWarning(`The AWS SDK for JavaScript (v3) will\\n` +\n            `no longer support Node.js ${version} as of January 1, 2022.\\n` +\n            `To continue receiving updates to AWS services, bug fixes, and security\\n` +\n            `updates please upgrade to Node.js 12.x or later.\\n\\n` +\n            `More information can be found at: https://a.co/1l6FLnu`, `NodeDeprecationWarning`);\n    }\n};\nexports.emitWarningIfUnsupportedVersion = emitWarningIfUnsupportedVersion;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.extendedEncodeURIComponent = void 0;\nfunction extendedEncodeURIComponent(str) {\n    return encodeURIComponent(str).replace(/[!'()*]/g, function (c) {\n        return \"%\" + c.charCodeAt(0).toString(16).toUpperCase();\n    });\n}\nexports.extendedEncodeURIComponent = extendedEncodeURIComponent;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getArrayIfSingleItem = void 0;\nconst getArrayIfSingleItem = (mayBeArray) => Array.isArray(mayBeArray) ? mayBeArray : [mayBeArray];\nexports.getArrayIfSingleItem = getArrayIfSingleItem;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getValueFromTextNode = void 0;\nconst getValueFromTextNode = (obj) => {\n    const textNodeName = \"#text\";\n    for (const key in obj) {\n        if (obj.hasOwnProperty(key) && obj[key][textNodeName] !== undefined) {\n            obj[key] = obj[key][textNodeName];\n        }\n        else if (typeof obj[key] === \"object\" && obj[key] !== null) {\n            obj[key] = exports.getValueFromTextNode(obj[key]);\n        }\n    }\n    return obj;\n};\nexports.getValueFromTextNode = getValueFromTextNode;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = require(\"tslib\");\ntslib_1.__exportStar(require(\"./client\"), exports);\ntslib_1.__exportStar(require(\"./command\"), exports);\ntslib_1.__exportStar(require(\"./constants\"), exports);\ntslib_1.__exportStar(require(\"./date-utils\"), exports);\ntslib_1.__exportStar(require(\"./defaults-mode\"), exports);\ntslib_1.__exportStar(require(\"./emitWarningIfUnsupportedVersion\"), exports);\ntslib_1.__exportStar(require(\"./extended-encode-uri-component\"), exports);\ntslib_1.__exportStar(require(\"./get-array-if-single-item\"), exports);\ntslib_1.__exportStar(require(\"./get-value-from-text-node\"), exports);\ntslib_1.__exportStar(require(\"./lazy-json\"), exports);\ntslib_1.__exportStar(require(\"./parse-utils\"), exports);\ntslib_1.__exportStar(require(\"./ser-utils\"), exports);\ntslib_1.__exportStar(require(\"./split-every\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.LazyJsonString = exports.StringWrapper = void 0;\nconst StringWrapper = function () {\n    const Class = Object.getPrototypeOf(this).constructor;\n    const Constructor = Function.bind.apply(String, [null, ...arguments]);\n    const instance = new Constructor();\n    Object.setPrototypeOf(instance, Class.prototype);\n    return instance;\n};\nexports.StringWrapper = StringWrapper;\nexports.StringWrapper.prototype = Object.create(String.prototype, {\n    constructor: {\n        value: exports.StringWrapper,\n        enumerable: false,\n        writable: true,\n        configurable: true,\n    },\n});\nObject.setPrototypeOf(exports.StringWrapper, String);\nclass LazyJsonString extends exports.StringWrapper {\n    deserializeJSON() {\n        return JSON.parse(super.toString());\n    }\n    toJSON() {\n        return super.toString();\n    }\n    static fromObject(object) {\n        if (object instanceof LazyJsonString) {\n            return object;\n        }\n        else if (object instanceof String || typeof object === \"string\") {\n            return new LazyJsonString(object);\n        }\n        return new LazyJsonString(JSON.stringify(object));\n    }\n}\nexports.LazyJsonString = LazyJsonString;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.strictParseByte = exports.strictParseShort = exports.strictParseInt32 = exports.strictParseInt = exports.strictParseLong = exports.limitedParseFloat32 = exports.limitedParseFloat = exports.handleFloat = exports.limitedParseDouble = exports.strictParseFloat32 = exports.strictParseFloat = exports.strictParseDouble = exports.expectUnion = exports.expectString = exports.expectObject = exports.expectNonNull = exports.expectByte = exports.expectShort = exports.expectInt32 = exports.expectInt = exports.expectLong = exports.expectFloat32 = exports.expectNumber = exports.expectBoolean = exports.parseBoolean = void 0;\nconst parseBoolean = (value) => {\n    switch (value) {\n        case \"true\":\n            return true;\n        case \"false\":\n            return false;\n        default:\n            throw new Error(`Unable to parse boolean value \"${value}\"`);\n    }\n};\nexports.parseBoolean = parseBoolean;\nconst expectBoolean = (value) => {\n    if (value === null || value === undefined) {\n        return undefined;\n    }\n    if (typeof value === \"boolean\") {\n        return value;\n    }\n    throw new TypeError(`Expected boolean, got ${typeof value}`);\n};\nexports.expectBoolean = expectBoolean;\nconst expectNumber = (value) => {\n    if (value === null || value === undefined) {\n        return undefined;\n    }\n    if (typeof value === \"number\") {\n        return value;\n    }\n    throw new TypeError(`Expected number, got ${typeof value}`);\n};\nexports.expectNumber = expectNumber;\nconst MAX_FLOAT = Math.ceil(2 ** 127 * (2 - 2 ** -23));\nconst expectFloat32 = (value) => {\n    const expected = exports.expectNumber(value);\n    if (expected !== undefined && !Number.isNaN(expected) && expected !== Infinity && expected !== -Infinity) {\n        if (Math.abs(expected) > MAX_FLOAT) {\n            throw new TypeError(`Expected 32-bit float, got ${value}`);\n        }\n    }\n    return expected;\n};\nexports.expectFloat32 = expectFloat32;\nconst expectLong = (value) => {\n    if (value === null || value === undefined) {\n        return undefined;\n    }\n    if (Number.isInteger(value) && !Number.isNaN(value)) {\n        return value;\n    }\n    throw new TypeError(`Expected integer, got ${typeof value}`);\n};\nexports.expectLong = expectLong;\nexports.expectInt = exports.expectLong;\nconst expectInt32 = (value) => expectSizedInt(value, 32);\nexports.expectInt32 = expectInt32;\nconst expectShort = (value) => expectSizedInt(value, 16);\nexports.expectShort = expectShort;\nconst expectByte = (value) => expectSizedInt(value, 8);\nexports.expectByte = expectByte;\nconst expectSizedInt = (value, size) => {\n    const expected = exports.expectLong(value);\n    if (expected !== undefined && castInt(expected, size) !== expected) {\n        throw new TypeError(`Expected ${size}-bit integer, got ${value}`);\n    }\n    return expected;\n};\nconst castInt = (value, size) => {\n    switch (size) {\n        case 32:\n            return Int32Array.of(value)[0];\n        case 16:\n            return Int16Array.of(value)[0];\n        case 8:\n            return Int8Array.of(value)[0];\n    }\n};\nconst expectNonNull = (value, location) => {\n    if (value === null || value === undefined) {\n        if (location) {\n            throw new TypeError(`Expected a non-null value for ${location}`);\n        }\n        throw new TypeError(\"Expected a non-null value\");\n    }\n    return value;\n};\nexports.expectNonNull = expectNonNull;\nconst expectObject = (value) => {\n    if (value === null || value === undefined) {\n        return undefined;\n    }\n    if (typeof value === \"object\" && !Array.isArray(value)) {\n        return value;\n    }\n    throw new TypeError(`Expected object, got ${typeof value}`);\n};\nexports.expectObject = expectObject;\nconst expectString = (value) => {\n    if (value === null || value === undefined) {\n        return undefined;\n    }\n    if (typeof value === \"string\") {\n        return value;\n    }\n    throw new TypeError(`Expected string, got ${typeof value}`);\n};\nexports.expectString = expectString;\nconst expectUnion = (value) => {\n    if (value === null || value === undefined) {\n        return undefined;\n    }\n    const asObject = exports.expectObject(value);\n    const setKeys = Object.entries(asObject)\n        .filter(([_, v]) => v !== null && v !== undefined)\n        .map(([k, _]) => k);\n    if (setKeys.length === 0) {\n        throw new TypeError(`Unions must have exactly one non-null member`);\n    }\n    if (setKeys.length > 1) {\n        throw new TypeError(`Unions must have exactly one non-null member. Keys ${setKeys} were not null.`);\n    }\n    return asObject;\n};\nexports.expectUnion = expectUnion;\nconst strictParseDouble = (value) => {\n    if (typeof value == \"string\") {\n        return exports.expectNumber(parseNumber(value));\n    }\n    return exports.expectNumber(value);\n};\nexports.strictParseDouble = strictParseDouble;\nexports.strictParseFloat = exports.strictParseDouble;\nconst strictParseFloat32 = (value) => {\n    if (typeof value == \"string\") {\n        return exports.expectFloat32(parseNumber(value));\n    }\n    return exports.expectFloat32(value);\n};\nexports.strictParseFloat32 = strictParseFloat32;\nconst NUMBER_REGEX = /(-?(?:0|[1-9]\\d*)(?:\\.\\d+)?(?:[eE][+-]?\\d+)?)|(-?Infinity)|(NaN)/g;\nconst parseNumber = (value) => {\n    const matches = value.match(NUMBER_REGEX);\n    if (matches === null || matches[0].length !== value.length) {\n        throw new TypeError(`Expected real number, got implicit NaN`);\n    }\n    return parseFloat(value);\n};\nconst limitedParseDouble = (value) => {\n    if (typeof value == \"string\") {\n        return parseFloatString(value);\n    }\n    return exports.expectNumber(value);\n};\nexports.limitedParseDouble = limitedParseDouble;\nexports.handleFloat = exports.limitedParseDouble;\nexports.limitedParseFloat = exports.limitedParseDouble;\nconst limitedParseFloat32 = (value) => {\n    if (typeof value == \"string\") {\n        return parseFloatString(value);\n    }\n    return exports.expectFloat32(value);\n};\nexports.limitedParseFloat32 = limitedParseFloat32;\nconst parseFloatString = (value) => {\n    switch (value) {\n        case \"NaN\":\n            return NaN;\n        case \"Infinity\":\n            return Infinity;\n        case \"-Infinity\":\n            return -Infinity;\n        default:\n            throw new Error(`Unable to parse float value: ${value}`);\n    }\n};\nconst strictParseLong = (value) => {\n    if (typeof value === \"string\") {\n        return exports.expectLong(parseNumber(value));\n    }\n    return exports.expectLong(value);\n};\nexports.strictParseLong = strictParseLong;\nexports.strictParseInt = exports.strictParseLong;\nconst strictParseInt32 = (value) => {\n    if (typeof value === \"string\") {\n        return exports.expectInt32(parseNumber(value));\n    }\n    return exports.expectInt32(value);\n};\nexports.strictParseInt32 = strictParseInt32;\nconst strictParseShort = (value) => {\n    if (typeof value === \"string\") {\n        return exports.expectShort(parseNumber(value));\n    }\n    return exports.expectShort(value);\n};\nexports.strictParseShort = strictParseShort;\nconst strictParseByte = (value) => {\n    if (typeof value === \"string\") {\n        return exports.expectByte(parseNumber(value));\n    }\n    return exports.expectByte(value);\n};\nexports.strictParseByte = strictParseByte;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.serializeFloat = void 0;\nconst serializeFloat = (value) => {\n    if (value !== value) {\n        return \"NaN\";\n    }\n    switch (value) {\n        case Infinity:\n            return \"Infinity\";\n        case -Infinity:\n            return \"-Infinity\";\n        default:\n            return value;\n    }\n};\nexports.serializeFloat = serializeFloat;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.splitEvery = void 0;\nfunction splitEvery(value, delimiter, numDelimiters) {\n    if (numDelimiters <= 0 || !Number.isInteger(numDelimiters)) {\n        throw new Error(\"Invalid number of delimiters (\" + numDelimiters + \") for splitEvery.\");\n    }\n    const segments = value.split(delimiter);\n    if (numDelimiters === 1) {\n        return segments;\n    }\n    const compoundSegments = [];\n    let currentSegment = \"\";\n    for (let i = 0; i < segments.length; i++) {\n        if (currentSegment === \"\") {\n            currentSegment = segments[i];\n        }\n        else {\n            currentSegment += delimiter + segments[i];\n        }\n        if ((i + 1) % numDelimiters === 0) {\n            compoundSegments.push(currentSegment);\n            currentSegment = \"\";\n        }\n    }\n    if (currentSegment !== \"\") {\n        compoundSegments.push(currentSegment);\n    }\n    return compoundSegments;\n}\nexports.splitEvery = splitEvery;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.parseUrl = void 0;\nconst querystring_parser_1 = require(\"@aws-sdk/querystring-parser\");\nconst parseUrl = (url) => {\n    const { hostname, pathname, port, protocol, search } = new URL(url);\n    let query;\n    if (search) {\n        query = querystring_parser_1.parseQueryString(search);\n    }\n    return {\n        hostname,\n        port: port ? parseInt(port) : undefined,\n        protocol,\n        path: pathname,\n        query,\n    };\n};\nexports.parseUrl = parseUrl;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.toBase64 = exports.fromBase64 = void 0;\nconst util_buffer_from_1 = require(\"@aws-sdk/util-buffer-from\");\nconst BASE64_REGEX = /^[A-Za-z0-9+/]*={0,2}$/;\nfunction fromBase64(input) {\n    if ((input.length * 3) % 4 !== 0) {\n        throw new TypeError(`Incorrect padding on base64 string.`);\n    }\n    if (!BASE64_REGEX.exec(input)) {\n        throw new TypeError(`Invalid base64 string.`);\n    }\n    const buffer = util_buffer_from_1.fromString(input, \"base64\");\n    return new Uint8Array(buffer.buffer, buffer.byteOffset, buffer.byteLength);\n}\nexports.fromBase64 = fromBase64;\nfunction toBase64(input) {\n    return util_buffer_from_1.fromArrayBuffer(input.buffer, input.byteOffset, input.byteLength).toString(\"base64\");\n}\nexports.toBase64 = toBase64;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.calculateBodyLength = void 0;\nconst fs_1 = require(\"fs\");\nfunction calculateBodyLength(body) {\n    if (!body) {\n        return 0;\n    }\n    if (typeof body === \"string\") {\n        return Buffer.from(body).length;\n    }\n    else if (typeof body.byteLength === \"number\") {\n        return body.byteLength;\n    }\n    else if (typeof body.size === \"number\") {\n        return body.size;\n    }\n    else if (typeof body.path === \"string\") {\n        return fs_1.lstatSync(body.path).size;\n    }\n}\nexports.calculateBodyLength = calculateBodyLength;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.fromString = exports.fromArrayBuffer = void 0;\nconst is_array_buffer_1 = require(\"@aws-sdk/is-array-buffer\");\nconst buffer_1 = require(\"buffer\");\nconst fromArrayBuffer = (input, offset = 0, length = input.byteLength - offset) => {\n    if (!is_array_buffer_1.isArrayBuffer(input)) {\n        throw new TypeError(`The \"input\" argument must be ArrayBuffer. Received type ${typeof input} (${input})`);\n    }\n    return buffer_1.Buffer.from(input, offset, length);\n};\nexports.fromArrayBuffer = fromArrayBuffer;\nconst fromString = (input, encoding) => {\n    if (typeof input !== \"string\") {\n        throw new TypeError(`The \"input\" argument must be of type string. Received type ${typeof input} (${input})`);\n    }\n    return encoding ? buffer_1.Buffer.from(input, encoding) : buffer_1.Buffer.from(input);\n};\nexports.fromString = fromString;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.booleanSelector = exports.SelectorType = void 0;\nvar SelectorType;\n(function (SelectorType) {\n    SelectorType[\"ENV\"] = \"env\";\n    SelectorType[\"CONFIG\"] = \"shared config entry\";\n})(SelectorType = exports.SelectorType || (exports.SelectorType = {}));\nconst booleanSelector = (obj, key, type) => {\n    if (!(key in obj))\n        return undefined;\n    if (obj[key] === \"true\")\n        return true;\n    if (obj[key] === \"false\")\n        return false;\n    throw new Error(`Cannot load ${type} \"${key}\". Expected \"true\" or \"false\", got ${obj[key]}.`);\n};\nexports.booleanSelector = booleanSelector;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = require(\"tslib\");\ntslib_1.__exportStar(require(\"./booleanSelector\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getMasterProfileName = exports.parseKnownFiles = exports.DEFAULT_PROFILE = exports.ENV_PROFILE = void 0;\nconst shared_ini_file_loader_1 = require(\"@aws-sdk/shared-ini-file-loader\");\nexports.ENV_PROFILE = \"AWS_PROFILE\";\nexports.DEFAULT_PROFILE = \"default\";\nconst parseKnownFiles = async (init) => {\n    const { loadedConfig = shared_ini_file_loader_1.loadSharedConfigFiles(init) } = init;\n    const parsedFiles = await loadedConfig;\n    return {\n        ...parsedFiles.configFile,\n        ...parsedFiles.credentialsFile,\n    };\n};\nexports.parseKnownFiles = parseKnownFiles;\nconst getMasterProfileName = (init) => init.profile || process.env[exports.ENV_PROFILE] || exports.DEFAULT_PROFILE;\nexports.getMasterProfileName = getMasterProfileName;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.IMDS_REGION_PATH = exports.DEFAULTS_MODE_OPTIONS = exports.ENV_IMDS_DISABLED = exports.AWS_DEFAULT_REGION_ENV = exports.AWS_REGION_ENV = exports.AWS_EXECUTION_ENV = void 0;\nexports.AWS_EXECUTION_ENV = \"AWS_EXECUTION_ENV\";\nexports.AWS_REGION_ENV = \"AWS_REGION\";\nexports.AWS_DEFAULT_REGION_ENV = \"AWS_DEFAULT_REGION\";\nexports.ENV_IMDS_DISABLED = \"AWS_EC2_METADATA_DISABLED\";\nexports.DEFAULTS_MODE_OPTIONS = [\"in-region\", \"cross-region\", \"mobile\", \"standard\", \"legacy\"];\nexports.IMDS_REGION_PATH = \"/latest/meta-data/placement/region\";\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.NODE_DEFAULTS_MODE_CONFIG_OPTIONS = void 0;\nconst AWS_DEFAULTS_MODE_ENV = \"AWS_DEFAULTS_MODE\";\nconst AWS_DEFAULTS_MODE_CONFIG = \"defaults_mode\";\nexports.NODE_DEFAULTS_MODE_CONFIG_OPTIONS = {\n    environmentVariableSelector: (env) => {\n        return env[AWS_DEFAULTS_MODE_ENV];\n    },\n    configFileSelector: (profile) => {\n        return profile[AWS_DEFAULTS_MODE_CONFIG];\n    },\n    default: \"legacy\",\n};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = require(\"tslib\");\ntslib_1.__exportStar(require(\"./resolveDefaultsModeConfig\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.resolveDefaultsModeConfig = void 0;\nconst config_resolver_1 = require(\"@aws-sdk/config-resolver\");\nconst credential_provider_imds_1 = require(\"@aws-sdk/credential-provider-imds\");\nconst node_config_provider_1 = require(\"@aws-sdk/node-config-provider\");\nconst property_provider_1 = require(\"@aws-sdk/property-provider\");\nconst constants_1 = require(\"./constants\");\nconst defaultsModeConfig_1 = require(\"./defaultsModeConfig\");\nconst resolveDefaultsModeConfig = ({ region = node_config_provider_1.loadConfig(config_resolver_1.NODE_REGION_CONFIG_OPTIONS), defaultsMode = node_config_provider_1.loadConfig(defaultsModeConfig_1.NODE_DEFAULTS_MODE_CONFIG_OPTIONS), } = {}) => property_provider_1.memoize(async () => {\n    const mode = typeof defaultsMode === \"function\" ? await defaultsMode() : defaultsMode;\n    switch (mode === null || mode === void 0 ? void 0 : mode.toLowerCase()) {\n        case \"auto\":\n            return resolveNodeDefaultsModeAuto(region);\n        case \"in-region\":\n        case \"cross-region\":\n        case \"mobile\":\n        case \"standard\":\n        case \"legacy\":\n            return Promise.resolve(mode === null || mode === void 0 ? void 0 : mode.toLocaleLowerCase());\n        case undefined:\n            return Promise.resolve(\"legacy\");\n        default:\n            throw new Error(`Invalid parameter for \"defaultsMode\", expect ${constants_1.DEFAULTS_MODE_OPTIONS.join(\", \")}, got ${mode}`);\n    }\n});\nexports.resolveDefaultsModeConfig = resolveDefaultsModeConfig;\nconst resolveNodeDefaultsModeAuto = async (clientRegion) => {\n    if (clientRegion) {\n        const resolvedRegion = typeof clientRegion === \"function\" ? await clientRegion() : clientRegion;\n        const inferredRegion = await inferPhysicalRegion();\n        if (!inferredRegion) {\n            return \"standard\";\n        }\n        if (resolvedRegion === inferredRegion) {\n            return \"in-region\";\n        }\n        else {\n            return \"cross-region\";\n        }\n    }\n    return \"standard\";\n};\nconst inferPhysicalRegion = async () => {\n    var _a;\n    if (process.env[constants_1.AWS_EXECUTION_ENV] && (process.env[constants_1.AWS_REGION_ENV] || process.env[constants_1.AWS_DEFAULT_REGION_ENV])) {\n        return (_a = process.env[constants_1.AWS_REGION_ENV]) !== null && _a !== void 0 ? _a : process.env[constants_1.AWS_DEFAULT_REGION_ENV];\n    }\n    if (!process.env[constants_1.ENV_IMDS_DISABLED]) {\n        try {\n            const endpoint = await credential_provider_imds_1.getInstanceMetadataEndpoint();\n            return (await credential_provider_imds_1.httpRequest({ ...endpoint, path: constants_1.IMDS_REGION_PATH })).toString();\n        }\n        catch (e) {\n        }\n    }\n};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.toHex = exports.fromHex = void 0;\nconst SHORT_TO_HEX = {};\nconst HEX_TO_SHORT = {};\nfor (let i = 0; i < 256; i++) {\n    let encodedByte = i.toString(16).toLowerCase();\n    if (encodedByte.length === 1) {\n        encodedByte = `0${encodedByte}`;\n    }\n    SHORT_TO_HEX[i] = encodedByte;\n    HEX_TO_SHORT[encodedByte] = i;\n}\nfunction fromHex(encoded) {\n    if (encoded.length % 2 !== 0) {\n        throw new Error(\"Hex encoded strings must have an even number length\");\n    }\n    const out = new Uint8Array(encoded.length / 2);\n    for (let i = 0; i < encoded.length; i += 2) {\n        const encodedByte = encoded.substr(i, 2).toLowerCase();\n        if (encodedByte in HEX_TO_SHORT) {\n            out[i / 2] = HEX_TO_SHORT[encodedByte];\n        }\n        else {\n            throw new Error(`Cannot decode unrecognized sequence ${encodedByte} as hexadecimal`);\n        }\n    }\n    return out;\n}\nexports.fromHex = fromHex;\nfunction toHex(bytes) {\n    let out = \"\";\n    for (let i = 0; i < bytes.byteLength; i++) {\n        out += SHORT_TO_HEX[bytes[i]];\n    }\n    return out;\n}\nexports.toHex = toHex;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.escapeUriPath = void 0;\nconst escape_uri_1 = require(\"./escape-uri\");\nconst escapeUriPath = (uri) => uri.split(\"/\").map(escape_uri_1.escapeUri).join(\"/\");\nexports.escapeUriPath = escapeUriPath;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.escapeUri = void 0;\nconst escapeUri = (uri) => encodeURIComponent(uri).replace(/[!'()*]/g, hexEncode);\nexports.escapeUri = escapeUri;\nconst hexEncode = (c) => `%${c.charCodeAt(0).toString(16).toUpperCase()}`;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = require(\"tslib\");\ntslib_1.__exportStar(require(\"./escape-uri\"), exports);\ntslib_1.__exportStar(require(\"./escape-uri-path\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.defaultUserAgent = exports.UA_APP_ID_INI_NAME = exports.UA_APP_ID_ENV_NAME = void 0;\nconst node_config_provider_1 = require(\"@aws-sdk/node-config-provider\");\nconst os_1 = require(\"os\");\nconst process_1 = require(\"process\");\nconst is_crt_available_1 = require(\"./is-crt-available\");\nexports.UA_APP_ID_ENV_NAME = \"AWS_SDK_UA_APP_ID\";\nexports.UA_APP_ID_INI_NAME = \"sdk-ua-app-id\";\nconst defaultUserAgent = ({ serviceId, clientVersion }) => {\n    const sections = [\n        [\"aws-sdk-js\", clientVersion],\n        [`os/${os_1.platform()}`, os_1.release()],\n        [\"lang/js\"],\n        [\"md/nodejs\", `${process_1.versions.node}`],\n    ];\n    const crtAvailable = is_crt_available_1.isCrtAvailable();\n    if (crtAvailable) {\n        sections.push(crtAvailable);\n    }\n    if (serviceId) {\n        sections.push([`api/${serviceId}`, clientVersion]);\n    }\n    if (process_1.env.AWS_EXECUTION_ENV) {\n        sections.push([`exec-env/${process_1.env.AWS_EXECUTION_ENV}`]);\n    }\n    const appIdPromise = node_config_provider_1.loadConfig({\n        environmentVariableSelector: (env) => env[exports.UA_APP_ID_ENV_NAME],\n        configFileSelector: (profile) => profile[exports.UA_APP_ID_INI_NAME],\n        default: undefined,\n    })();\n    let resolvedUserAgent = undefined;\n    return async () => {\n        if (!resolvedUserAgent) {\n            const appId = await appIdPromise;\n            resolvedUserAgent = appId ? [...sections, [`app/${appId}`]] : [...sections];\n        }\n        return resolvedUserAgent;\n    };\n};\nexports.defaultUserAgent = defaultUserAgent;\n",null,"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.toUtf8 = exports.fromUtf8 = void 0;\nconst util_buffer_from_1 = require(\"@aws-sdk/util-buffer-from\");\nconst fromUtf8 = (input) => {\n    const buf = util_buffer_from_1.fromString(input, \"utf8\");\n    return new Uint8Array(buf.buffer, buf.byteOffset, buf.byteLength / Uint8Array.BYTES_PER_ELEMENT);\n};\nexports.fromUtf8 = fromUtf8;\nconst toUtf8 = (input) => util_buffer_from_1.fromArrayBuffer(input.buffer, input.byteOffset, input.byteLength).toString(\"utf8\");\nexports.toUtf8 = toUtf8;\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.decodeHTML = exports.decodeHTMLStrict = exports.decodeXML = void 0;\nvar entities_json_1 = __importDefault(require(\"./maps/entities.json\"));\nvar legacy_json_1 = __importDefault(require(\"./maps/legacy.json\"));\nvar xml_json_1 = __importDefault(require(\"./maps/xml.json\"));\nvar decode_codepoint_1 = __importDefault(require(\"./decode_codepoint\"));\nvar strictEntityRe = /&(?:[a-zA-Z0-9]+|#[xX][\\da-fA-F]+|#\\d+);/g;\nexports.decodeXML = getStrictDecoder(xml_json_1.default);\nexports.decodeHTMLStrict = getStrictDecoder(entities_json_1.default);\nfunction getStrictDecoder(map) {\n    var replace = getReplacer(map);\n    return function (str) { return String(str).replace(strictEntityRe, replace); };\n}\nvar sorter = function (a, b) { return (a < b ? 1 : -1); };\nexports.decodeHTML = (function () {\n    var legacy = Object.keys(legacy_json_1.default).sort(sorter);\n    var keys = Object.keys(entities_json_1.default).sort(sorter);\n    for (var i = 0, j = 0; i < keys.length; i++) {\n        if (legacy[j] === keys[i]) {\n            keys[i] += \";?\";\n            j++;\n        }\n        else {\n            keys[i] += \";\";\n        }\n    }\n    var re = new RegExp(\"&(?:\" + keys.join(\"|\") + \"|#[xX][\\\\da-fA-F]+;?|#\\\\d+;?)\", \"g\");\n    var replace = getReplacer(entities_json_1.default);\n    function replacer(str) {\n        if (str.substr(-1) !== \";\")\n            str += \";\";\n        return replace(str);\n    }\n    // TODO consider creating a merged map\n    return function (str) { return String(str).replace(re, replacer); };\n})();\nfunction getReplacer(map) {\n    return function replace(str) {\n        if (str.charAt(1) === \"#\") {\n            var secondChar = str.charAt(2);\n            if (secondChar === \"X\" || secondChar === \"x\") {\n                return decode_codepoint_1.default(parseInt(str.substr(3), 16));\n            }\n            return decode_codepoint_1.default(parseInt(str.substr(2), 10));\n        }\n        // eslint-disable-next-line @typescript-eslint/prefer-nullish-coalescing\n        return map[str.slice(1, -1)] || str;\n    };\n}\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar decode_json_1 = __importDefault(require(\"./maps/decode.json\"));\n// Adapted from https://github.com/mathiasbynens/he/blob/master/src/he.js#L94-L119\nvar fromCodePoint = \n// eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\nString.fromCodePoint ||\n    function (codePoint) {\n        var output = \"\";\n        if (codePoint > 0xffff) {\n            codePoint -= 0x10000;\n            output += String.fromCharCode(((codePoint >>> 10) & 0x3ff) | 0xd800);\n            codePoint = 0xdc00 | (codePoint & 0x3ff);\n        }\n        output += String.fromCharCode(codePoint);\n        return output;\n    };\nfunction decodeCodePoint(codePoint) {\n    if ((codePoint >= 0xd800 && codePoint <= 0xdfff) || codePoint > 0x10ffff) {\n        return \"\\uFFFD\";\n    }\n    if (codePoint in decode_json_1.default) {\n        codePoint = decode_json_1.default[codePoint];\n    }\n    return fromCodePoint(codePoint);\n}\nexports.default = decodeCodePoint;\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.escapeUTF8 = exports.escape = exports.encodeNonAsciiHTML = exports.encodeHTML = exports.encodeXML = void 0;\nvar xml_json_1 = __importDefault(require(\"./maps/xml.json\"));\nvar inverseXML = getInverseObj(xml_json_1.default);\nvar xmlReplacer = getInverseReplacer(inverseXML);\n/**\n * Encodes all non-ASCII characters, as well as characters not valid in XML\n * documents using XML entities.\n *\n * If a character has no equivalent entity, a\n * numeric hexadecimal reference (eg. `&#xfc;`) will be used.\n */\nexports.encodeXML = getASCIIEncoder(inverseXML);\nvar entities_json_1 = __importDefault(require(\"./maps/entities.json\"));\nvar inverseHTML = getInverseObj(entities_json_1.default);\nvar htmlReplacer = getInverseReplacer(inverseHTML);\n/**\n * Encodes all entities and non-ASCII characters in the input.\n *\n * This includes characters that are valid ASCII characters in HTML documents.\n * For example `#` will be encoded as `&num;`. To get a more compact output,\n * consider using the `encodeNonAsciiHTML` function.\n *\n * If a character has no equivalent entity, a\n * numeric hexadecimal reference (eg. `&#xfc;`) will be used.\n */\nexports.encodeHTML = getInverse(inverseHTML, htmlReplacer);\n/**\n * Encodes all non-ASCII characters, as well as characters not valid in HTML\n * documents using HTML entities.\n *\n * If a character has no equivalent entity, a\n * numeric hexadecimal reference (eg. `&#xfc;`) will be used.\n */\nexports.encodeNonAsciiHTML = getASCIIEncoder(inverseHTML);\nfunction getInverseObj(obj) {\n    return Object.keys(obj)\n        .sort()\n        .reduce(function (inverse, name) {\n        inverse[obj[name]] = \"&\" + name + \";\";\n        return inverse;\n    }, {});\n}\nfunction getInverseReplacer(inverse) {\n    var single = [];\n    var multiple = [];\n    for (var _i = 0, _a = Object.keys(inverse); _i < _a.length; _i++) {\n        var k = _a[_i];\n        if (k.length === 1) {\n            // Add value to single array\n            single.push(\"\\\\\" + k);\n        }\n        else {\n            // Add value to multiple array\n            multiple.push(k);\n        }\n    }\n    // Add ranges to single characters.\n    single.sort();\n    for (var start = 0; start < single.length - 1; start++) {\n        // Find the end of a run of characters\n        var end = start;\n        while (end < single.length - 1 &&\n            single[end].charCodeAt(1) + 1 === single[end + 1].charCodeAt(1)) {\n            end += 1;\n        }\n        var count = 1 + end - start;\n        // We want to replace at least three characters\n        if (count < 3)\n            continue;\n        single.splice(start, count, single[start] + \"-\" + single[end]);\n    }\n    multiple.unshift(\"[\" + single.join(\"\") + \"]\");\n    return new RegExp(multiple.join(\"|\"), \"g\");\n}\n// /[^\\0-\\x7F]/gu\nvar reNonASCII = /(?:[\\x80-\\uD7FF\\uE000-\\uFFFF]|[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF])/g;\nvar getCodePoint = \n// eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\nString.prototype.codePointAt != null\n    ? // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        function (str) { return str.codePointAt(0); }\n    : // http://mathiasbynens.be/notes/javascript-encoding#surrogate-formulae\n        function (c) {\n            return (c.charCodeAt(0) - 0xd800) * 0x400 +\n                c.charCodeAt(1) -\n                0xdc00 +\n                0x10000;\n        };\nfunction singleCharReplacer(c) {\n    return \"&#x\" + (c.length > 1 ? getCodePoint(c) : c.charCodeAt(0))\n        .toString(16)\n        .toUpperCase() + \";\";\n}\nfunction getInverse(inverse, re) {\n    return function (data) {\n        return data\n            .replace(re, function (name) { return inverse[name]; })\n            .replace(reNonASCII, singleCharReplacer);\n    };\n}\nvar reEscapeChars = new RegExp(xmlReplacer.source + \"|\" + reNonASCII.source, \"g\");\n/**\n * Encodes all non-ASCII characters, as well as characters not valid in XML\n * documents using numeric hexadecimal reference (eg. `&#xfc;`).\n *\n * Have a look at `escapeUTF8` if you want a more concise output at the expense\n * of reduced transportability.\n *\n * @param data String to escape.\n */\nfunction escape(data) {\n    return data.replace(reEscapeChars, singleCharReplacer);\n}\nexports.escape = escape;\n/**\n * Encodes all characters not valid in XML documents using numeric hexadecimal\n * reference (eg. `&#xfc;`).\n *\n * Note that the output will be character-set dependent.\n *\n * @param data String to escape.\n */\nfunction escapeUTF8(data) {\n    return data.replace(xmlReplacer, singleCharReplacer);\n}\nexports.escapeUTF8 = escapeUTF8;\nfunction getASCIIEncoder(obj) {\n    return function (data) {\n        return data.replace(reEscapeChars, function (c) { return obj[c] || singleCharReplacer(c); });\n    };\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.decodeXMLStrict = exports.decodeHTML5Strict = exports.decodeHTML4Strict = exports.decodeHTML5 = exports.decodeHTML4 = exports.decodeHTMLStrict = exports.decodeHTML = exports.decodeXML = exports.encodeHTML5 = exports.encodeHTML4 = exports.escapeUTF8 = exports.escape = exports.encodeNonAsciiHTML = exports.encodeHTML = exports.encodeXML = exports.encode = exports.decodeStrict = exports.decode = void 0;\nvar decode_1 = require(\"./decode\");\nvar encode_1 = require(\"./encode\");\n/**\n * Decodes a string with entities.\n *\n * @param data String to decode.\n * @param level Optional level to decode at. 0 = XML, 1 = HTML. Default is 0.\n * @deprecated Use `decodeXML` or `decodeHTML` directly.\n */\nfunction decode(data, level) {\n    return (!level || level <= 0 ? decode_1.decodeXML : decode_1.decodeHTML)(data);\n}\nexports.decode = decode;\n/**\n * Decodes a string with entities. Does not allow missing trailing semicolons for entities.\n *\n * @param data String to decode.\n * @param level Optional level to decode at. 0 = XML, 1 = HTML. Default is 0.\n * @deprecated Use `decodeHTMLStrict` or `decodeXML` directly.\n */\nfunction decodeStrict(data, level) {\n    return (!level || level <= 0 ? decode_1.decodeXML : decode_1.decodeHTMLStrict)(data);\n}\nexports.decodeStrict = decodeStrict;\n/**\n * Encodes a string with entities.\n *\n * @param data String to encode.\n * @param level Optional level to encode at. 0 = XML, 1 = HTML. Default is 0.\n * @deprecated Use `encodeHTML`, `encodeXML` or `encodeNonAsciiHTML` directly.\n */\nfunction encode(data, level) {\n    return (!level || level <= 0 ? encode_1.encodeXML : encode_1.encodeHTML)(data);\n}\nexports.encode = encode;\nvar encode_2 = require(\"./encode\");\nObject.defineProperty(exports, \"encodeXML\", { enumerable: true, get: function () { return encode_2.encodeXML; } });\nObject.defineProperty(exports, \"encodeHTML\", { enumerable: true, get: function () { return encode_2.encodeHTML; } });\nObject.defineProperty(exports, \"encodeNonAsciiHTML\", { enumerable: true, get: function () { return encode_2.encodeNonAsciiHTML; } });\nObject.defineProperty(exports, \"escape\", { enumerable: true, get: function () { return encode_2.escape; } });\nObject.defineProperty(exports, \"escapeUTF8\", { enumerable: true, get: function () { return encode_2.escapeUTF8; } });\n// Legacy aliases (deprecated)\nObject.defineProperty(exports, \"encodeHTML4\", { enumerable: true, get: function () { return encode_2.encodeHTML; } });\nObject.defineProperty(exports, \"encodeHTML5\", { enumerable: true, get: function () { return encode_2.encodeHTML; } });\nvar decode_2 = require(\"./decode\");\nObject.defineProperty(exports, \"decodeXML\", { enumerable: true, get: function () { return decode_2.decodeXML; } });\nObject.defineProperty(exports, \"decodeHTML\", { enumerable: true, get: function () { return decode_2.decodeHTML; } });\nObject.defineProperty(exports, \"decodeHTMLStrict\", { enumerable: true, get: function () { return decode_2.decodeHTMLStrict; } });\n// Legacy aliases (deprecated)\nObject.defineProperty(exports, \"decodeHTML4\", { enumerable: true, get: function () { return decode_2.decodeHTML; } });\nObject.defineProperty(exports, \"decodeHTML5\", { enumerable: true, get: function () { return decode_2.decodeHTML; } });\nObject.defineProperty(exports, \"decodeHTML4Strict\", { enumerable: true, get: function () { return decode_2.decodeHTMLStrict; } });\nObject.defineProperty(exports, \"decodeHTML5Strict\", { enumerable: true, get: function () { return decode_2.decodeHTMLStrict; } });\nObject.defineProperty(exports, \"decodeXMLStrict\", { enumerable: true, get: function () { return decode_2.decodeXML; } });\n","'use strict';\n//parse Empty Node as self closing node\nconst buildOptions = require('./util').buildOptions;\n\nconst defaultOptions = {\n  attributeNamePrefix: '@_',\n  attrNodeName: false,\n  textNodeName: '#text',\n  ignoreAttributes: true,\n  cdataTagName: false,\n  cdataPositionChar: '\\\\c',\n  format: false,\n  indentBy: '  ',\n  supressEmptyNode: false,\n  tagValueProcessor: function(a) {\n    return a;\n  },\n  attrValueProcessor: function(a) {\n    return a;\n  },\n};\n\nconst props = [\n  'attributeNamePrefix',\n  'attrNodeName',\n  'textNodeName',\n  'ignoreAttributes',\n  'cdataTagName',\n  'cdataPositionChar',\n  'format',\n  'indentBy',\n  'supressEmptyNode',\n  'tagValueProcessor',\n  'attrValueProcessor',\n];\n\nfunction Parser(options) {\n  this.options = buildOptions(options, defaultOptions, props);\n  if (this.options.ignoreAttributes || this.options.attrNodeName) {\n    this.isAttribute = function(/*a*/) {\n      return false;\n    };\n  } else {\n    this.attrPrefixLen = this.options.attributeNamePrefix.length;\n    this.isAttribute = isAttribute;\n  }\n  if (this.options.cdataTagName) {\n    this.isCDATA = isCDATA;\n  } else {\n    this.isCDATA = function(/*a*/) {\n      return false;\n    };\n  }\n  this.replaceCDATAstr = replaceCDATAstr;\n  this.replaceCDATAarr = replaceCDATAarr;\n\n  if (this.options.format) {\n    this.indentate = indentate;\n    this.tagEndChar = '>\\n';\n    this.newLine = '\\n';\n  } else {\n    this.indentate = function() {\n      return '';\n    };\n    this.tagEndChar = '>';\n    this.newLine = '';\n  }\n\n  if (this.options.supressEmptyNode) {\n    this.buildTextNode = buildEmptyTextNode;\n    this.buildObjNode = buildEmptyObjNode;\n  } else {\n    this.buildTextNode = buildTextValNode;\n    this.buildObjNode = buildObjectNode;\n  }\n\n  this.buildTextValNode = buildTextValNode;\n  this.buildObjectNode = buildObjectNode;\n}\n\nParser.prototype.parse = function(jObj) {\n  return this.j2x(jObj, 0).val;\n};\n\nParser.prototype.j2x = function(jObj, level) {\n  let attrStr = '';\n  let val = '';\n  const keys = Object.keys(jObj);\n  const len = keys.length;\n  for (let i = 0; i < len; i++) {\n    const key = keys[i];\n    if (typeof jObj[key] === 'undefined') {\n      // supress undefined node\n    } else if (jObj[key] === null) {\n      val += this.indentate(level) + '<' + key + '/' + this.tagEndChar;\n    } else if (jObj[key] instanceof Date) {\n      val += this.buildTextNode(jObj[key], key, '', level);\n    } else if (typeof jObj[key] !== 'object') {\n      //premitive type\n      const attr = this.isAttribute(key);\n      if (attr) {\n        attrStr += ' ' + attr + '=\"' + this.options.attrValueProcessor('' + jObj[key]) + '\"';\n      } else if (this.isCDATA(key)) {\n        if (jObj[this.options.textNodeName]) {\n          val += this.replaceCDATAstr(jObj[this.options.textNodeName], jObj[key]);\n        } else {\n          val += this.replaceCDATAstr('', jObj[key]);\n        }\n      } else {\n        //tag value\n        if (key === this.options.textNodeName) {\n          if (jObj[this.options.cdataTagName]) {\n            //value will added while processing cdata\n          } else {\n            val += this.options.tagValueProcessor('' + jObj[key]);\n          }\n        } else {\n          val += this.buildTextNode(jObj[key], key, '', level);\n        }\n      }\n    } else if (Array.isArray(jObj[key])) {\n      //repeated nodes\n      if (this.isCDATA(key)) {\n        val += this.indentate(level);\n        if (jObj[this.options.textNodeName]) {\n          val += this.replaceCDATAarr(jObj[this.options.textNodeName], jObj[key]);\n        } else {\n          val += this.replaceCDATAarr('', jObj[key]);\n        }\n      } else {\n        //nested nodes\n        const arrLen = jObj[key].length;\n        for (let j = 0; j < arrLen; j++) {\n          const item = jObj[key][j];\n          if (typeof item === 'undefined') {\n            // supress undefined node\n          } else if (item === null) {\n            val += this.indentate(level) + '<' + key + '/' + this.tagEndChar;\n          } else if (typeof item === 'object') {\n            const result = this.j2x(item, level + 1);\n            val += this.buildObjNode(result.val, key, result.attrStr, level);\n          } else {\n            val += this.buildTextNode(item, key, '', level);\n          }\n        }\n      }\n    } else {\n      //nested node\n      if (this.options.attrNodeName && key === this.options.attrNodeName) {\n        const Ks = Object.keys(jObj[key]);\n        const L = Ks.length;\n        for (let j = 0; j < L; j++) {\n          attrStr += ' ' + Ks[j] + '=\"' + this.options.attrValueProcessor('' + jObj[key][Ks[j]]) + '\"';\n        }\n      } else {\n        const result = this.j2x(jObj[key], level + 1);\n        val += this.buildObjNode(result.val, key, result.attrStr, level);\n      }\n    }\n  }\n  return {attrStr: attrStr, val: val};\n};\n\nfunction replaceCDATAstr(str, cdata) {\n  str = this.options.tagValueProcessor('' + str);\n  if (this.options.cdataPositionChar === '' || str === '') {\n    return str + '<![CDATA[' + cdata + ']]' + this.tagEndChar;\n  } else {\n    return str.replace(this.options.cdataPositionChar, '<![CDATA[' + cdata + ']]' + this.tagEndChar);\n  }\n}\n\nfunction replaceCDATAarr(str, cdata) {\n  str = this.options.tagValueProcessor('' + str);\n  if (this.options.cdataPositionChar === '' || str === '') {\n    return str + '<![CDATA[' + cdata.join(']]><![CDATA[') + ']]' + this.tagEndChar;\n  } else {\n    for (let v in cdata) {\n      str = str.replace(this.options.cdataPositionChar, '<![CDATA[' + cdata[v] + ']]>');\n    }\n    return str + this.newLine;\n  }\n}\n\nfunction buildObjectNode(val, key, attrStr, level) {\n  if (attrStr && !val.includes('<')) {\n    return (\n      this.indentate(level) +\n      '<' +\n      key +\n      attrStr +\n      '>' +\n      val +\n      //+ this.newLine\n      // + this.indentate(level)\n      '</' +\n      key +\n      this.tagEndChar\n    );\n  } else {\n    return (\n      this.indentate(level) +\n      '<' +\n      key +\n      attrStr +\n      this.tagEndChar +\n      val +\n      //+ this.newLine\n      this.indentate(level) +\n      '</' +\n      key +\n      this.tagEndChar\n    );\n  }\n}\n\nfunction buildEmptyObjNode(val, key, attrStr, level) {\n  if (val !== '') {\n    return this.buildObjectNode(val, key, attrStr, level);\n  } else {\n    return this.indentate(level) + '<' + key + attrStr + '/' + this.tagEndChar;\n    //+ this.newLine\n  }\n}\n\nfunction buildTextValNode(val, key, attrStr, level) {\n  return (\n    this.indentate(level) +\n    '<' +\n    key +\n    attrStr +\n    '>' +\n    this.options.tagValueProcessor(val) +\n    '</' +\n    key +\n    this.tagEndChar\n  );\n}\n\nfunction buildEmptyTextNode(val, key, attrStr, level) {\n  if (val !== '') {\n    return this.buildTextValNode(val, key, attrStr, level);\n  } else {\n    return this.indentate(level) + '<' + key + attrStr + '/' + this.tagEndChar;\n  }\n}\n\nfunction indentate(level) {\n  return this.options.indentBy.repeat(level);\n}\n\nfunction isAttribute(name /*, options*/) {\n  if (name.startsWith(this.options.attributeNamePrefix)) {\n    return name.substr(this.attrPrefixLen);\n  } else {\n    return false;\n  }\n}\n\nfunction isCDATA(name) {\n  return name === this.options.cdataTagName;\n}\n\n//formatting\n//indentation\n//\\n after each closing or self closing tag\n\nmodule.exports = Parser;\n","'use strict';\nconst char = function(a) {\n  return String.fromCharCode(a);\n};\n\nconst chars = {\n  nilChar: char(176),\n  missingChar: char(201),\n  nilPremitive: char(175),\n  missingPremitive: char(200),\n\n  emptyChar: char(178),\n  emptyValue: char(177), //empty Premitive\n\n  boundryChar: char(179),\n\n  objStart: char(198),\n  arrStart: char(204),\n  arrayEnd: char(185),\n};\n\nconst charsArr = [\n  chars.nilChar,\n  chars.nilPremitive,\n  chars.missingChar,\n  chars.missingPremitive,\n  chars.boundryChar,\n  chars.emptyChar,\n  chars.emptyValue,\n  chars.arrayEnd,\n  chars.objStart,\n  chars.arrStart,\n];\n\nconst _e = function(node, e_schema, options) {\n  if (typeof e_schema === 'string') {\n    //premitive\n    if (node && node[0] && node[0].val !== undefined) {\n      return getValue(node[0].val, e_schema);\n    } else {\n      return getValue(node, e_schema);\n    }\n  } else {\n    const hasValidData = hasData(node);\n    if (hasValidData === true) {\n      let str = '';\n      if (Array.isArray(e_schema)) {\n        //attributes can't be repeated. hence check in children tags only\n        str += chars.arrStart;\n        const itemSchema = e_schema[0];\n        //var itemSchemaType = itemSchema;\n        const arr_len = node.length;\n\n        if (typeof itemSchema === 'string') {\n          for (let arr_i = 0; arr_i < arr_len; arr_i++) {\n            const r = getValue(node[arr_i].val, itemSchema);\n            str = processValue(str, r);\n          }\n        } else {\n          for (let arr_i = 0; arr_i < arr_len; arr_i++) {\n            const r = _e(node[arr_i], itemSchema, options);\n            str = processValue(str, r);\n          }\n        }\n        str += chars.arrayEnd; //indicates that next item is not array item\n      } else {\n        //object\n        str += chars.objStart;\n        const keys = Object.keys(e_schema);\n        if (Array.isArray(node)) {\n          node = node[0];\n        }\n        for (let i in keys) {\n          const key = keys[i];\n          //a property defined in schema can be present either in attrsMap or children tags\n          //options.textNodeName will not present in both maps, take it's value from val\n          //options.attrNodeName will be present in attrsMap\n          let r;\n          if (!options.ignoreAttributes && node.attrsMap && node.attrsMap[key]) {\n            r = _e(node.attrsMap[key], e_schema[key], options);\n          } else if (key === options.textNodeName) {\n            r = _e(node.val, e_schema[key], options);\n          } else {\n            r = _e(node.child[key], e_schema[key], options);\n          }\n          str = processValue(str, r);\n        }\n      }\n      return str;\n    } else {\n      return hasValidData;\n    }\n  }\n};\n\nconst getValue = function(a /*, type*/) {\n  switch (a) {\n    case undefined:\n      return chars.missingPremitive;\n    case null:\n      return chars.nilPremitive;\n    case '':\n      return chars.emptyValue;\n    default:\n      return a;\n  }\n};\n\nconst processValue = function(str, r) {\n  if (!isAppChar(r[0]) && !isAppChar(str[str.length - 1])) {\n    str += chars.boundryChar;\n  }\n  return str + r;\n};\n\nconst isAppChar = function(ch) {\n  return charsArr.indexOf(ch) !== -1;\n};\n\nfunction hasData(jObj) {\n  if (jObj === undefined) {\n    return chars.missingChar;\n  } else if (jObj === null) {\n    return chars.nilChar;\n  } else if (\n    jObj.child &&\n    Object.keys(jObj.child).length === 0 &&\n    (!jObj.attrsMap || Object.keys(jObj.attrsMap).length === 0)\n  ) {\n    return chars.emptyChar;\n  } else {\n    return true;\n  }\n}\n\nconst x2j = require('./xmlstr2xmlnode');\nconst buildOptions = require('./util').buildOptions;\n\nconst convert2nimn = function(node, e_schema, options) {\n  options = buildOptions(options, x2j.defaultOptions, x2j.props);\n  return _e(node, e_schema, options);\n};\n\nexports.convert2nimn = convert2nimn;\n","'use strict';\n\nconst util = require('./util');\n\nconst convertToJson = function(node, options, parentTagName) {\n  const jObj = {};\n\n  // when no child node or attr is present\n  if ((!node.child || util.isEmptyObject(node.child)) && (!node.attrsMap || util.isEmptyObject(node.attrsMap))) {\n    return util.isExist(node.val) ? node.val : '';\n  }\n\n  // otherwise create a textnode if node has some text\n  if (util.isExist(node.val) && !(typeof node.val === 'string' && (node.val === '' || node.val === options.cdataPositionChar))) {\n    const asArray = util.isTagNameInArrayMode(node.tagname, options.arrayMode, parentTagName)\n    jObj[options.textNodeName] = asArray ? [node.val] : node.val;\n  }\n\n  util.merge(jObj, node.attrsMap, options.arrayMode);\n\n  const keys = Object.keys(node.child);\n  for (let index = 0; index < keys.length; index++) {\n    const tagName = keys[index];\n    if (node.child[tagName] && node.child[tagName].length > 1) {\n      jObj[tagName] = [];\n      for (let tag in node.child[tagName]) {\n        if (node.child[tagName].hasOwnProperty(tag)) {\n          jObj[tagName].push(convertToJson(node.child[tagName][tag], options, tagName));\n        }\n      }\n    } else {\n      const result = convertToJson(node.child[tagName][0], options, tagName);\n      const asArray = (options.arrayMode === true && typeof result === 'object') || util.isTagNameInArrayMode(tagName, options.arrayMode, parentTagName);\n      jObj[tagName] = asArray ? [result] : result;\n    }\n  }\n\n  //add value\n  return jObj;\n};\n\nexports.convertToJson = convertToJson;\n","'use strict';\n\nconst util = require('./util');\nconst buildOptions = require('./util').buildOptions;\nconst x2j = require('./xmlstr2xmlnode');\n\n//TODO: do it later\nconst convertToJsonString = function(node, options) {\n  options = buildOptions(options, x2j.defaultOptions, x2j.props);\n\n  options.indentBy = options.indentBy || '';\n  return _cToJsonStr(node, options, 0);\n};\n\nconst _cToJsonStr = function(node, options, level) {\n  let jObj = '{';\n\n  //traver through all the children\n  const keys = Object.keys(node.child);\n\n  for (let index = 0; index < keys.length; index++) {\n    var tagname = keys[index];\n    if (node.child[tagname] && node.child[tagname].length > 1) {\n      jObj += '\"' + tagname + '\" : [ ';\n      for (var tag in node.child[tagname]) {\n        jObj += _cToJsonStr(node.child[tagname][tag], options) + ' , ';\n      }\n      jObj = jObj.substr(0, jObj.length - 1) + ' ] '; //remove extra comma in last\n    } else {\n      jObj += '\"' + tagname + '\" : ' + _cToJsonStr(node.child[tagname][0], options) + ' ,';\n    }\n  }\n  util.merge(jObj, node.attrsMap);\n  //add attrsMap as new children\n  if (util.isEmptyObject(jObj)) {\n    return util.isExist(node.val) ? node.val : '';\n  } else {\n    if (util.isExist(node.val)) {\n      if (!(typeof node.val === 'string' && (node.val === '' || node.val === options.cdataPositionChar))) {\n        jObj += '\"' + options.textNodeName + '\" : ' + stringval(node.val);\n      }\n    }\n  }\n  //add value\n  if (jObj[jObj.length - 1] === ',') {\n    jObj = jObj.substr(0, jObj.length - 2);\n  }\n  return jObj + '}';\n};\n\nfunction stringval(v) {\n  if (v === true || v === false || !isNaN(v)) {\n    return v;\n  } else {\n    return '\"' + v + '\"';\n  }\n}\n\nfunction indentate(options, level) {\n  return options.indentBy.repeat(level);\n}\n\nexports.convertToJsonString = convertToJsonString;\n","'use strict';\n\nconst nodeToJson = require('./node2json');\nconst xmlToNodeobj = require('./xmlstr2xmlnode');\nconst x2xmlnode = require('./xmlstr2xmlnode');\nconst buildOptions = require('./util').buildOptions;\nconst validator = require('./validator');\n\nexports.parse = function(xmlData, options, validationOption) {\n  if( validationOption){\n    if(validationOption === true) validationOption = {}\n    \n    const result = validator.validate(xmlData, validationOption);\n    if (result !== true) {\n      throw Error( result.err.msg)\n    }\n  }\n  options = buildOptions(options, x2xmlnode.defaultOptions, x2xmlnode.props);\n  const traversableObj = xmlToNodeobj.getTraversalObj(xmlData, options)\n  //print(traversableObj, \"  \");\n  return nodeToJson.convertToJson(traversableObj, options);\n};\nexports.convertTonimn = require('./nimndata').convert2nimn;\nexports.getTraversalObj = xmlToNodeobj.getTraversalObj;\nexports.convertToJson = nodeToJson.convertToJson;\nexports.convertToJsonString = require('./node2json_str').convertToJsonString;\nexports.validate = validator.validate;\nexports.j2xParser = require('./json2xml');\nexports.parseToNimn = function(xmlData, schema, options) {\n  return exports.convertTonimn(exports.getTraversalObj(xmlData, options), schema, options);\n};\n\n\nfunction print(xmlNode, indentation){\n  if(xmlNode){\n    console.log(indentation + \"{\")\n    console.log(indentation + \"  \\\"tagName\\\": \\\"\" + xmlNode.tagname + \"\\\", \");\n    if(xmlNode.parent){\n      console.log(indentation + \"  \\\"parent\\\": \\\"\" + xmlNode.parent.tagname  + \"\\\", \");\n    }\n    console.log(indentation + \"  \\\"val\\\": \\\"\" + xmlNode.val  + \"\\\", \");\n    console.log(indentation + \"  \\\"attrs\\\": \" + JSON.stringify(xmlNode.attrsMap,null,4)  + \", \");\n\n    if(xmlNode.child){\n      console.log(indentation + \"\\\"child\\\": {\")\n      const indentation2 = indentation + indentation;\n      Object.keys(xmlNode.child).forEach( function(key) {\n        const node = xmlNode.child[key];\n\n        if(Array.isArray(node)){\n          console.log(indentation +  \"\\\"\"+key+\"\\\" :[\")\n          node.forEach( function(item,index) {\n            //console.log(indentation + \" \\\"\"+index+\"\\\" : [\")\n            print(item, indentation2);\n          })\n          console.log(indentation + \"],\")  \n        }else{\n          console.log(indentation + \" \\\"\"+key+\"\\\" : {\")\n          print(node, indentation2);\n          console.log(indentation + \"},\")  \n        }\n      });\n      console.log(indentation + \"},\")\n    }\n    console.log(indentation + \"},\")\n  }\n}\n","'use strict';\n\nconst nameStartChar = ':A-Za-z_\\\\u00C0-\\\\u00D6\\\\u00D8-\\\\u00F6\\\\u00F8-\\\\u02FF\\\\u0370-\\\\u037D\\\\u037F-\\\\u1FFF\\\\u200C-\\\\u200D\\\\u2070-\\\\u218F\\\\u2C00-\\\\u2FEF\\\\u3001-\\\\uD7FF\\\\uF900-\\\\uFDCF\\\\uFDF0-\\\\uFFFD';\nconst nameChar = nameStartChar + '\\\\-.\\\\d\\\\u00B7\\\\u0300-\\\\u036F\\\\u203F-\\\\u2040';\nconst nameRegexp = '[' + nameStartChar + '][' + nameChar + ']*'\nconst regexName = new RegExp('^' + nameRegexp + '$');\n\nconst getAllMatches = function(string, regex) {\n  const matches = [];\n  let match = regex.exec(string);\n  while (match) {\n    const allmatches = [];\n    const len = match.length;\n    for (let index = 0; index < len; index++) {\n      allmatches.push(match[index]);\n    }\n    matches.push(allmatches);\n    match = regex.exec(string);\n  }\n  return matches;\n};\n\nconst isName = function(string) {\n  const match = regexName.exec(string);\n  return !(match === null || typeof match === 'undefined');\n};\n\nexports.isExist = function(v) {\n  return typeof v !== 'undefined';\n};\n\nexports.isEmptyObject = function(obj) {\n  return Object.keys(obj).length === 0;\n};\n\n/**\n * Copy all the properties of a into b.\n * @param {*} target\n * @param {*} a\n */\nexports.merge = function(target, a, arrayMode) {\n  if (a) {\n    const keys = Object.keys(a); // will return an array of own properties\n    const len = keys.length; //don't make it inline\n    for (let i = 0; i < len; i++) {\n      if (arrayMode === 'strict') {\n        target[keys[i]] = [ a[keys[i]] ];\n      } else {\n        target[keys[i]] = a[keys[i]];\n      }\n    }\n  }\n};\n/* exports.merge =function (b,a){\n  return Object.assign(b,a);\n} */\n\nexports.getValue = function(v) {\n  if (exports.isExist(v)) {\n    return v;\n  } else {\n    return '';\n  }\n};\n\n// const fakeCall = function(a) {return a;};\n// const fakeCallNoReturn = function() {};\n\nexports.buildOptions = function(options, defaultOptions, props) {\n  var newOptions = {};\n  if (!options) {\n    return defaultOptions; //if there are not options\n  }\n\n  for (let i = 0; i < props.length; i++) {\n    if (options[props[i]] !== undefined) {\n      newOptions[props[i]] = options[props[i]];\n    } else {\n      newOptions[props[i]] = defaultOptions[props[i]];\n    }\n  }\n  return newOptions;\n};\n\n/**\n * Check if a tag name should be treated as array\n *\n * @param tagName the node tagname\n * @param arrayMode the array mode option\n * @param parentTagName the parent tag name\n * @returns {boolean} true if node should be parsed as array\n */\nexports.isTagNameInArrayMode = function (tagName, arrayMode, parentTagName) {\n  if (arrayMode === false) {\n    return false;\n  } else if (arrayMode instanceof RegExp) {\n    return arrayMode.test(tagName);\n  } else if (typeof arrayMode === 'function') {\n    return !!arrayMode(tagName, parentTagName);\n  }\n\n  return arrayMode === \"strict\";\n}\n\nexports.isName = isName;\nexports.getAllMatches = getAllMatches;\nexports.nameRegexp = nameRegexp;\n","'use strict';\n\nconst util = require('./util');\n\nconst defaultOptions = {\n  allowBooleanAttributes: false, //A tag can have attributes without any value\n};\n\nconst props = ['allowBooleanAttributes'];\n\n//const tagsPattern = new RegExp(\"<\\\\/?([\\\\w:\\\\-_\\.]+)\\\\s*\\/?>\",\"g\");\nexports.validate = function (xmlData, options) {\n  options = util.buildOptions(options, defaultOptions, props);\n\n  //xmlData = xmlData.replace(/(\\r\\n|\\n|\\r)/gm,\"\");//make it single line\n  //xmlData = xmlData.replace(/(^\\s*<\\?xml.*?\\?>)/g,\"\");//Remove XML starting tag\n  //xmlData = xmlData.replace(/(<!DOCTYPE[\\s\\w\\\"\\.\\/\\-\\:]+(\\[.*\\])*\\s*>)/g,\"\");//Remove DOCTYPE\n  const tags = [];\n  let tagFound = false;\n\n  //indicates that the root tag has been closed (aka. depth 0 has been reached)\n  let reachedRoot = false;\n\n  if (xmlData[0] === '\\ufeff') {\n    // check for byte order mark (BOM)\n    xmlData = xmlData.substr(1);\n  }\n\n  for (let i = 0; i < xmlData.length; i++) {\n\n    if (xmlData[i] === '<' && xmlData[i+1] === '?') {\n      i+=2;\n      i = readPI(xmlData,i);\n      if (i.err) return i;\n    }else if (xmlData[i] === '<') {\n      //starting of tag\n      //read until you reach to '>' avoiding any '>' in attribute value\n\n      i++;\n      \n      if (xmlData[i] === '!') {\n        i = readCommentAndCDATA(xmlData, i);\n        continue;\n      } else {\n        let closingTag = false;\n        if (xmlData[i] === '/') {\n          //closing tag\n          closingTag = true;\n          i++;\n        }\n        //read tagname\n        let tagName = '';\n        for (; i < xmlData.length &&\n          xmlData[i] !== '>' &&\n          xmlData[i] !== ' ' &&\n          xmlData[i] !== '\\t' &&\n          xmlData[i] !== '\\n' &&\n          xmlData[i] !== '\\r'; i++\n        ) {\n          tagName += xmlData[i];\n        }\n        tagName = tagName.trim();\n        //console.log(tagName);\n\n        if (tagName[tagName.length - 1] === '/') {\n          //self closing tag without attributes\n          tagName = tagName.substring(0, tagName.length - 1);\n          //continue;\n          i--;\n        }\n        if (!validateTagName(tagName)) {\n          let msg;\n          if (tagName.trim().length === 0) {\n            msg = \"There is an unnecessary space between tag name and backward slash '</ ..'.\";\n          } else {\n            msg = \"Tag '\"+tagName+\"' is an invalid name.\";\n          }\n          return getErrorObject('InvalidTag', msg, getLineNumberForPosition(xmlData, i));\n        }\n\n        const result = readAttributeStr(xmlData, i);\n        if (result === false) {\n          return getErrorObject('InvalidAttr', \"Attributes for '\"+tagName+\"' have open quote.\", getLineNumberForPosition(xmlData, i));\n        }\n        let attrStr = result.value;\n        i = result.index;\n\n        if (attrStr[attrStr.length - 1] === '/') {\n          //self closing tag\n          attrStr = attrStr.substring(0, attrStr.length - 1);\n          const isValid = validateAttributeString(attrStr, options);\n          if (isValid === true) {\n            tagFound = true;\n            //continue; //text may presents after self closing tag\n          } else {\n            //the result from the nested function returns the position of the error within the attribute\n            //in order to get the 'true' error line, we need to calculate the position where the attribute begins (i - attrStr.length) and then add the position within the attribute\n            //this gives us the absolute index in the entire xml, which we can use to find the line at last\n            return getErrorObject(isValid.err.code, isValid.err.msg, getLineNumberForPosition(xmlData, i - attrStr.length + isValid.err.line));\n          }\n        } else if (closingTag) {\n          if (!result.tagClosed) {\n            return getErrorObject('InvalidTag', \"Closing tag '\"+tagName+\"' doesn't have proper closing.\", getLineNumberForPosition(xmlData, i));\n          } else if (attrStr.trim().length > 0) {\n            return getErrorObject('InvalidTag', \"Closing tag '\"+tagName+\"' can't have attributes or invalid starting.\", getLineNumberForPosition(xmlData, i));\n          } else {\n            const otg = tags.pop();\n            if (tagName !== otg) {\n              return getErrorObject('InvalidTag', \"Closing tag '\"+otg+\"' is expected inplace of '\"+tagName+\"'.\", getLineNumberForPosition(xmlData, i));\n            }\n\n            //when there are no more tags, we reached the root level.\n            if (tags.length == 0) {\n              reachedRoot = true;\n            }\n          }\n        } else {\n          const isValid = validateAttributeString(attrStr, options);\n          if (isValid !== true) {\n            //the result from the nested function returns the position of the error within the attribute\n            //in order to get the 'true' error line, we need to calculate the position where the attribute begins (i - attrStr.length) and then add the position within the attribute\n            //this gives us the absolute index in the entire xml, which we can use to find the line at last\n            return getErrorObject(isValid.err.code, isValid.err.msg, getLineNumberForPosition(xmlData, i - attrStr.length + isValid.err.line));\n          }\n\n          //if the root level has been reached before ...\n          if (reachedRoot === true) {\n            return getErrorObject('InvalidXml', 'Multiple possible root nodes found.', getLineNumberForPosition(xmlData, i));\n          } else {\n            tags.push(tagName);\n          }\n          tagFound = true;\n        }\n\n        //skip tag text value\n        //It may include comments and CDATA value\n        for (i++; i < xmlData.length; i++) {\n          if (xmlData[i] === '<') {\n            if (xmlData[i + 1] === '!') {\n              //comment or CADATA\n              i++;\n              i = readCommentAndCDATA(xmlData, i);\n              continue;\n            } else if (xmlData[i+1] === '?') {\n              i = readPI(xmlData, ++i);\n              if (i.err) return i;\n            } else{\n              break;\n            }\n          } else if (xmlData[i] === '&') {\n            const afterAmp = validateAmpersand(xmlData, i);\n            if (afterAmp == -1)\n              return getErrorObject('InvalidChar', \"char '&' is not expected.\", getLineNumberForPosition(xmlData, i));\n            i = afterAmp;\n          }\n        } //end of reading tag text value\n        if (xmlData[i] === '<') {\n          i--;\n        }\n      }\n    } else {\n      if (xmlData[i] === ' ' || xmlData[i] === '\\t' || xmlData[i] === '\\n' || xmlData[i] === '\\r') {\n        continue;\n      }\n      return getErrorObject('InvalidChar', \"char '\"+xmlData[i]+\"' is not expected.\", getLineNumberForPosition(xmlData, i));\n    }\n  }\n\n  if (!tagFound) {\n    return getErrorObject('InvalidXml', 'Start tag expected.', 1);\n  } else if (tags.length > 0) {\n    return getErrorObject('InvalidXml', \"Invalid '\"+JSON.stringify(tags, null, 4).replace(/\\r?\\n/g, '')+\"' found.\", 1);\n  }\n\n  return true;\n};\n\n/**\n * Read Processing insstructions and skip\n * @param {*} xmlData\n * @param {*} i\n */\nfunction readPI(xmlData, i) {\n  var start = i;\n  for (; i < xmlData.length; i++) {\n    if (xmlData[i] == '?' || xmlData[i] == ' ') {\n      //tagname\n      var tagname = xmlData.substr(start, i - start);\n      if (i > 5 && tagname === 'xml') {\n        return getErrorObject('InvalidXml', 'XML declaration allowed only at the start of the document.', getLineNumberForPosition(xmlData, i));\n      } else if (xmlData[i] == '?' && xmlData[i + 1] == '>') {\n        //check if valid attribut string\n        i++;\n        break;\n      } else {\n        continue;\n      }\n    }\n  }\n  return i;\n}\n\nfunction readCommentAndCDATA(xmlData, i) {\n  if (xmlData.length > i + 5 && xmlData[i + 1] === '-' && xmlData[i + 2] === '-') {\n    //comment\n    for (i += 3; i < xmlData.length; i++) {\n      if (xmlData[i] === '-' && xmlData[i + 1] === '-' && xmlData[i + 2] === '>') {\n        i += 2;\n        break;\n      }\n    }\n  } else if (\n    xmlData.length > i + 8 &&\n    xmlData[i + 1] === 'D' &&\n    xmlData[i + 2] === 'O' &&\n    xmlData[i + 3] === 'C' &&\n    xmlData[i + 4] === 'T' &&\n    xmlData[i + 5] === 'Y' &&\n    xmlData[i + 6] === 'P' &&\n    xmlData[i + 7] === 'E'\n  ) {\n    let angleBracketsCount = 1;\n    for (i += 8; i < xmlData.length; i++) {\n      if (xmlData[i] === '<') {\n        angleBracketsCount++;\n      } else if (xmlData[i] === '>') {\n        angleBracketsCount--;\n        if (angleBracketsCount === 0) {\n          break;\n        }\n      }\n    }\n  } else if (\n    xmlData.length > i + 9 &&\n    xmlData[i + 1] === '[' &&\n    xmlData[i + 2] === 'C' &&\n    xmlData[i + 3] === 'D' &&\n    xmlData[i + 4] === 'A' &&\n    xmlData[i + 5] === 'T' &&\n    xmlData[i + 6] === 'A' &&\n    xmlData[i + 7] === '['\n  ) {\n    for (i += 8; i < xmlData.length; i++) {\n      if (xmlData[i] === ']' && xmlData[i + 1] === ']' && xmlData[i + 2] === '>') {\n        i += 2;\n        break;\n      }\n    }\n  }\n\n  return i;\n}\n\nvar doubleQuote = '\"';\nvar singleQuote = \"'\";\n\n/**\n * Keep reading xmlData until '<' is found outside the attribute value.\n * @param {string} xmlData\n * @param {number} i\n */\nfunction readAttributeStr(xmlData, i) {\n  let attrStr = '';\n  let startChar = '';\n  let tagClosed = false;\n  for (; i < xmlData.length; i++) {\n    if (xmlData[i] === doubleQuote || xmlData[i] === singleQuote) {\n      if (startChar === '') {\n        startChar = xmlData[i];\n      } else if (startChar !== xmlData[i]) {\n        //if vaue is enclosed with double quote then single quotes are allowed inside the value and vice versa\n        continue;\n      } else {\n        startChar = '';\n      }\n    } else if (xmlData[i] === '>') {\n      if (startChar === '') {\n        tagClosed = true;\n        break;\n      }\n    }\n    attrStr += xmlData[i];\n  }\n  if (startChar !== '') {\n    return false;\n  }\n\n  return {\n    value: attrStr,\n    index: i,\n    tagClosed: tagClosed\n  };\n}\n\n/**\n * Select all the attributes whether valid or invalid.\n */\nconst validAttrStrRegxp = new RegExp('(\\\\s*)([^\\\\s=]+)(\\\\s*=)?(\\\\s*([\\'\"])(([\\\\s\\\\S])*?)\\\\5)?', 'g');\n\n//attr, =\"sd\", a=\"amit's\", a=\"sd\"b=\"saf\", ab  cd=\"\"\n\nfunction validateAttributeString(attrStr, options) {\n  //console.log(\"start:\"+attrStr+\":end\");\n\n  //if(attrStr.trim().length === 0) return true; //empty string\n\n  const matches = util.getAllMatches(attrStr, validAttrStrRegxp);\n  const attrNames = {};\n\n  for (let i = 0; i < matches.length; i++) {\n    if (matches[i][1].length === 0) {\n      //nospace before attribute name: a=\"sd\"b=\"saf\"\n      return getErrorObject('InvalidAttr', \"Attribute '\"+matches[i][2]+\"' has no space in starting.\", getPositionFromMatch(attrStr, matches[i][0]))\n    } else if (matches[i][3] === undefined && !options.allowBooleanAttributes) {\n      //independent attribute: ab\n      return getErrorObject('InvalidAttr', \"boolean attribute '\"+matches[i][2]+\"' is not allowed.\", getPositionFromMatch(attrStr, matches[i][0]));\n    }\n    /* else if(matches[i][6] === undefined){//attribute without value: ab=\n                    return { err: { code:\"InvalidAttr\",msg:\"attribute \" + matches[i][2] + \" has no value assigned.\"}};\n                } */\n    const attrName = matches[i][2];\n    if (!validateAttrName(attrName)) {\n      return getErrorObject('InvalidAttr', \"Attribute '\"+attrName+\"' is an invalid name.\", getPositionFromMatch(attrStr, matches[i][0]));\n    }\n    if (!attrNames.hasOwnProperty(attrName)) {\n      //check for duplicate attribute.\n      attrNames[attrName] = 1;\n    } else {\n      return getErrorObject('InvalidAttr', \"Attribute '\"+attrName+\"' is repeated.\", getPositionFromMatch(attrStr, matches[i][0]));\n    }\n  }\n\n  return true;\n}\n\nfunction validateNumberAmpersand(xmlData, i) {\n  let re = /\\d/;\n  if (xmlData[i] === 'x') {\n    i++;\n    re = /[\\da-fA-F]/;\n  }\n  for (; i < xmlData.length; i++) {\n    if (xmlData[i] === ';')\n      return i;\n    if (!xmlData[i].match(re))\n      break;\n  }\n  return -1;\n}\n\nfunction validateAmpersand(xmlData, i) {\n  // https://www.w3.org/TR/xml/#dt-charref\n  i++;\n  if (xmlData[i] === ';')\n    return -1;\n  if (xmlData[i] === '#') {\n    i++;\n    return validateNumberAmpersand(xmlData, i);\n  }\n  let count = 0;\n  for (; i < xmlData.length; i++, count++) {\n    if (xmlData[i].match(/\\w/) && count < 20)\n      continue;\n    if (xmlData[i] === ';')\n      break;\n    return -1;\n  }\n  return i;\n}\n\nfunction getErrorObject(code, message, lineNumber) {\n  return {\n    err: {\n      code: code,\n      msg: message,\n      line: lineNumber,\n    },\n  };\n}\n\nfunction validateAttrName(attrName) {\n  return util.isName(attrName);\n}\n\n// const startsWithXML = /^xml/i;\n\nfunction validateTagName(tagname) {\n  return util.isName(tagname) /* && !tagname.match(startsWithXML) */;\n}\n\n//this function returns the line number for the character at the given index\nfunction getLineNumberForPosition(xmlData, index) {\n  var lines = xmlData.substring(0, index).split(/\\r?\\n/);\n  return lines.length;\n}\n\n//this function returns the position of the last character of match within attrStr\nfunction getPositionFromMatch(attrStr, match) {\n  return attrStr.indexOf(match) + match.length;\n}\n","'use strict';\n\nmodule.exports = function(tagname, parent, val) {\n  this.tagname = tagname;\n  this.parent = parent;\n  this.child = {}; //child tags\n  this.attrsMap = {}; //attributes map\n  this.val = val; //text only\n  this.addChild = function(child) {\n    if (Array.isArray(this.child[child.tagname])) {\n      //already presents\n      this.child[child.tagname].push(child);\n    } else {\n      this.child[child.tagname] = [child];\n    }\n  };\n};\n","'use strict';\n\nconst util = require('./util');\nconst buildOptions = require('./util').buildOptions;\nconst xmlNode = require('./xmlNode');\nconst regx =\n  '<((!\\\\[CDATA\\\\[([\\\\s\\\\S]*?)(]]>))|((NAME:)?(NAME))([^>]*)>|((\\\\/)(NAME)\\\\s*>))([^<]*)'\n  .replace(/NAME/g, util.nameRegexp);\n\n//const tagsRegx = new RegExp(\"<(\\\\/?[\\\\w:\\\\-\\._]+)([^>]*)>(\\\\s*\"+cdataRegx+\")*([^<]+)?\",\"g\");\n//const tagsRegx = new RegExp(\"<(\\\\/?)((\\\\w*:)?([\\\\w:\\\\-\\._]+))([^>]*)>([^<]*)(\"+cdataRegx+\"([^<]*))*([^<]+)?\",\"g\");\n\n//polyfill\nif (!Number.parseInt && window.parseInt) {\n  Number.parseInt = window.parseInt;\n}\nif (!Number.parseFloat && window.parseFloat) {\n  Number.parseFloat = window.parseFloat;\n}\n\nconst defaultOptions = {\n  attributeNamePrefix: '@_',\n  attrNodeName: false,\n  textNodeName: '#text',\n  ignoreAttributes: true,\n  ignoreNameSpace: false,\n  allowBooleanAttributes: false, //a tag can have attributes without any value\n  //ignoreRootElement : false,\n  parseNodeValue: true,\n  parseAttributeValue: false,\n  arrayMode: false,\n  trimValues: true, //Trim string values of tag and attributes\n  cdataTagName: false,\n  cdataPositionChar: '\\\\c',\n  tagValueProcessor: function(a, tagName) {\n    return a;\n  },\n  attrValueProcessor: function(a, attrName) {\n    return a;\n  },\n  stopNodes: []\n  //decodeStrict: false,\n};\n\nexports.defaultOptions = defaultOptions;\n\nconst props = [\n  'attributeNamePrefix',\n  'attrNodeName',\n  'textNodeName',\n  'ignoreAttributes',\n  'ignoreNameSpace',\n  'allowBooleanAttributes',\n  'parseNodeValue',\n  'parseAttributeValue',\n  'arrayMode',\n  'trimValues',\n  'cdataTagName',\n  'cdataPositionChar',\n  'tagValueProcessor',\n  'attrValueProcessor',\n  'parseTrueNumberOnly',\n  'stopNodes'\n];\nexports.props = props;\n\n/**\n * Trim -> valueProcessor -> parse value\n * @param {string} tagName\n * @param {string} val\n * @param {object} options\n */\nfunction processTagValue(tagName, val, options) {\n  if (val) {\n    if (options.trimValues) {\n      val = val.trim();\n    }\n    val = options.tagValueProcessor(val, tagName);\n    val = parseValue(val, options.parseNodeValue, options.parseTrueNumberOnly);\n  }\n\n  return val;\n}\n\nfunction resolveNameSpace(tagname, options) {\n  if (options.ignoreNameSpace) {\n    const tags = tagname.split(':');\n    const prefix = tagname.charAt(0) === '/' ? '/' : '';\n    if (tags[0] === 'xmlns') {\n      return '';\n    }\n    if (tags.length === 2) {\n      tagname = prefix + tags[1];\n    }\n  }\n  return tagname;\n}\n\nfunction parseValue(val, shouldParse, parseTrueNumberOnly) {\n  if (shouldParse && typeof val === 'string') {\n    let parsed;\n    if (val.trim() === '' || isNaN(val)) {\n      parsed = val === 'true' ? true : val === 'false' ? false : val;\n    } else {\n      if (val.indexOf('0x') !== -1) {\n        //support hexa decimal\n        parsed = Number.parseInt(val, 16);\n      } else if (val.indexOf('.') !== -1) {\n        parsed = Number.parseFloat(val);\n        val = val.replace(/\\.?0+$/, \"\");\n      } else {\n        parsed = Number.parseInt(val, 10);\n      }\n      if (parseTrueNumberOnly) {\n        parsed = String(parsed) === val ? parsed : val;\n      }\n    }\n    return parsed;\n  } else {\n    if (util.isExist(val)) {\n      return val;\n    } else {\n      return '';\n    }\n  }\n}\n\n//TODO: change regex to capture NS\n//const attrsRegx = new RegExp(\"([\\\\w\\\\-\\\\.\\\\:]+)\\\\s*=\\\\s*(['\\\"])((.|\\n)*?)\\\\2\",\"gm\");\nconst attrsRegx = new RegExp('([^\\\\s=]+)\\\\s*(=\\\\s*([\\'\"])(.*?)\\\\3)?', 'g');\n\nfunction buildAttributesMap(attrStr, options) {\n  if (!options.ignoreAttributes && typeof attrStr === 'string') {\n    attrStr = attrStr.replace(/\\r?\\n/g, ' ');\n    //attrStr = attrStr || attrStr.trim();\n\n    const matches = util.getAllMatches(attrStr, attrsRegx);\n    const len = matches.length; //don't make it inline\n    const attrs = {};\n    for (let i = 0; i < len; i++) {\n      const attrName = resolveNameSpace(matches[i][1], options);\n      if (attrName.length) {\n        if (matches[i][4] !== undefined) {\n          if (options.trimValues) {\n            matches[i][4] = matches[i][4].trim();\n          }\n          matches[i][4] = options.attrValueProcessor(matches[i][4], attrName);\n          attrs[options.attributeNamePrefix + attrName] = parseValue(\n            matches[i][4],\n            options.parseAttributeValue,\n            options.parseTrueNumberOnly\n          );\n        } else if (options.allowBooleanAttributes) {\n          attrs[options.attributeNamePrefix + attrName] = true;\n        }\n      }\n    }\n    if (!Object.keys(attrs).length) {\n      return;\n    }\n    if (options.attrNodeName) {\n      const attrCollection = {};\n      attrCollection[options.attrNodeName] = attrs;\n      return attrCollection;\n    }\n    return attrs;\n  }\n}\n\nconst getTraversalObj = function(xmlData, options) {\n  xmlData = xmlData.replace(/\\r\\n?/g, \"\\n\");\n  options = buildOptions(options, defaultOptions, props);\n  const xmlObj = new xmlNode('!xml');\n  let currentNode = xmlObj;\n  let textData = \"\";\n\n//function match(xmlData){\n  for(let i=0; i< xmlData.length; i++){\n    const ch = xmlData[i];\n    if(ch === '<'){\n      if( xmlData[i+1] === '/') {//Closing Tag\n        const closeIndex = findClosingIndex(xmlData, \">\", i, \"Closing Tag is not closed.\")\n        let tagName = xmlData.substring(i+2,closeIndex).trim();\n\n        if(options.ignoreNameSpace){\n          const colonIndex = tagName.indexOf(\":\");\n          if(colonIndex !== -1){\n            tagName = tagName.substr(colonIndex+1);\n          }\n        }\n\n        /* if (currentNode.parent) {\n          currentNode.parent.val = util.getValue(currentNode.parent.val) + '' + processTagValue2(tagName, textData , options);\n        } */\n        if(currentNode){\n          if(currentNode.val){\n            currentNode.val = util.getValue(currentNode.val) + '' + processTagValue(tagName, textData , options);\n          }else{\n            currentNode.val = processTagValue(tagName, textData , options);\n          }\n        }\n\n        if (options.stopNodes.length && options.stopNodes.includes(currentNode.tagname)) {\n          currentNode.child = []\n          if (currentNode.attrsMap == undefined) { currentNode.attrsMap = {}}\n          currentNode.val = xmlData.substr(currentNode.startIndex + 1, i - currentNode.startIndex - 1)\n        }\n        currentNode = currentNode.parent;\n        textData = \"\";\n        i = closeIndex;\n      } else if( xmlData[i+1] === '?') {\n        i = findClosingIndex(xmlData, \"?>\", i, \"Pi Tag is not closed.\")\n      } else if(xmlData.substr(i + 1, 3) === '!--') {\n        i = findClosingIndex(xmlData, \"-->\", i, \"Comment is not closed.\")\n      } else if( xmlData.substr(i + 1, 2) === '!D') {\n        const closeIndex = findClosingIndex(xmlData, \">\", i, \"DOCTYPE is not closed.\")\n        const tagExp = xmlData.substring(i, closeIndex);\n        if(tagExp.indexOf(\"[\") >= 0){\n          i = xmlData.indexOf(\"]>\", i) + 1;\n        }else{\n          i = closeIndex;\n        }\n      }else if(xmlData.substr(i + 1, 2) === '![') {\n        const closeIndex = findClosingIndex(xmlData, \"]]>\", i, \"CDATA is not closed.\") - 2\n        const tagExp = xmlData.substring(i + 9,closeIndex);\n\n        //considerations\n        //1. CDATA will always have parent node\n        //2. A tag with CDATA is not a leaf node so it's value would be string type.\n        if(textData){\n          currentNode.val = util.getValue(currentNode.val) + '' + processTagValue(currentNode.tagname, textData , options);\n          textData = \"\";\n        }\n\n        if (options.cdataTagName) {\n          //add cdata node\n          const childNode = new xmlNode(options.cdataTagName, currentNode, tagExp);\n          currentNode.addChild(childNode);\n          //for backtracking\n          currentNode.val = util.getValue(currentNode.val) + options.cdataPositionChar;\n          //add rest value to parent node\n          if (tagExp) {\n            childNode.val = tagExp;\n          }\n        } else {\n          currentNode.val = (currentNode.val || '') + (tagExp || '');\n        }\n\n        i = closeIndex + 2;\n      }else {//Opening tag\n        const result = closingIndexForOpeningTag(xmlData, i+1)\n        let tagExp = result.data;\n        const closeIndex = result.index;\n        const separatorIndex = tagExp.indexOf(\" \");\n        let tagName = tagExp;\n        let shouldBuildAttributesMap = true;\n        if(separatorIndex !== -1){\n          tagName = tagExp.substr(0, separatorIndex).replace(/\\s\\s*$/, '');\n          tagExp = tagExp.substr(separatorIndex + 1);\n        }\n\n        if(options.ignoreNameSpace){\n          const colonIndex = tagName.indexOf(\":\");\n          if(colonIndex !== -1){\n            tagName = tagName.substr(colonIndex+1);\n            shouldBuildAttributesMap = tagName !== result.data.substr(colonIndex + 1);\n          }\n        }\n\n        //save text to parent node\n        if (currentNode && textData) {\n          if(currentNode.tagname !== '!xml'){\n            currentNode.val = util.getValue(currentNode.val) + '' + processTagValue( currentNode.tagname, textData, options);\n          }\n        }\n\n        if(tagExp.length > 0 && tagExp.lastIndexOf(\"/\") === tagExp.length - 1){//selfClosing tag\n\n          if(tagName[tagName.length - 1] === \"/\"){ //remove trailing '/'\n            tagName = tagName.substr(0, tagName.length - 1);\n            tagExp = tagName;\n          }else{\n            tagExp = tagExp.substr(0, tagExp.length - 1);\n          }\n\n          const childNode = new xmlNode(tagName, currentNode, '');\n          if(tagName !== tagExp){\n            childNode.attrsMap = buildAttributesMap(tagExp, options);\n          }\n          currentNode.addChild(childNode);\n        }else{//opening tag\n\n          const childNode = new xmlNode( tagName, currentNode );\n          if (options.stopNodes.length && options.stopNodes.includes(childNode.tagname)) {\n            childNode.startIndex=closeIndex;\n          }\n          if(tagName !== tagExp && shouldBuildAttributesMap){\n            childNode.attrsMap = buildAttributesMap(tagExp, options);\n          }\n          currentNode.addChild(childNode);\n          currentNode = childNode;\n        }\n        textData = \"\";\n        i = closeIndex;\n      }\n    }else{\n      textData += xmlData[i];\n    }\n  }\n  return xmlObj;\n}\n\nfunction closingIndexForOpeningTag(data, i){\n  let attrBoundary;\n  let tagExp = \"\";\n  for (let index = i; index < data.length; index++) {\n    let ch = data[index];\n    if (attrBoundary) {\n        if (ch === attrBoundary) attrBoundary = \"\";//reset\n    } else if (ch === '\"' || ch === \"'\") {\n        attrBoundary = ch;\n    } else if (ch === '>') {\n        return {\n          data: tagExp,\n          index: index\n        }\n    } else if (ch === '\\t') {\n      ch = \" \"\n    }\n    tagExp += ch;\n  }\n}\n\nfunction findClosingIndex(xmlData, str, i, errMsg){\n  const closingIndex = xmlData.indexOf(str, i);\n  if(closingIndex === -1){\n    throw new Error(errMsg)\n  }else{\n    return closingIndex + str.length - 1;\n  }\n}\n\nexports.getTraversalObj = getTraversalObj;\n","'use strict';\n\n\nvar loader = require('./lib/loader');\nvar dumper = require('./lib/dumper');\n\n\nfunction renamed(from, to) {\n  return function () {\n    throw new Error('Function yaml.' + from + ' is removed in js-yaml 4. ' +\n      'Use yaml.' + to + ' instead, which is now safe by default.');\n  };\n}\n\n\nmodule.exports.Type                = require('./lib/type');\nmodule.exports.Schema              = require('./lib/schema');\nmodule.exports.FAILSAFE_SCHEMA     = require('./lib/schema/failsafe');\nmodule.exports.JSON_SCHEMA         = require('./lib/schema/json');\nmodule.exports.CORE_SCHEMA         = require('./lib/schema/core');\nmodule.exports.DEFAULT_SCHEMA      = require('./lib/schema/default');\nmodule.exports.load                = loader.load;\nmodule.exports.loadAll             = loader.loadAll;\nmodule.exports.dump                = dumper.dump;\nmodule.exports.YAMLException       = require('./lib/exception');\n\n// Re-export all types in case user wants to create custom schema\nmodule.exports.types = {\n  binary:    require('./lib/type/binary'),\n  float:     require('./lib/type/float'),\n  map:       require('./lib/type/map'),\n  null:      require('./lib/type/null'),\n  pairs:     require('./lib/type/pairs'),\n  set:       require('./lib/type/set'),\n  timestamp: require('./lib/type/timestamp'),\n  bool:      require('./lib/type/bool'),\n  int:       require('./lib/type/int'),\n  merge:     require('./lib/type/merge'),\n  omap:      require('./lib/type/omap'),\n  seq:       require('./lib/type/seq'),\n  str:       require('./lib/type/str')\n};\n\n// Removed functions from JS-YAML 3.0.x\nmodule.exports.safeLoad            = renamed('safeLoad', 'load');\nmodule.exports.safeLoadAll         = renamed('safeLoadAll', 'loadAll');\nmodule.exports.safeDump            = renamed('safeDump', 'dump');\n","'use strict';\n\n\nfunction isNothing(subject) {\n  return (typeof subject === 'undefined') || (subject === null);\n}\n\n\nfunction isObject(subject) {\n  return (typeof subject === 'object') && (subject !== null);\n}\n\n\nfunction toArray(sequence) {\n  if (Array.isArray(sequence)) return sequence;\n  else if (isNothing(sequence)) return [];\n\n  return [ sequence ];\n}\n\n\nfunction extend(target, source) {\n  var index, length, key, sourceKeys;\n\n  if (source) {\n    sourceKeys = Object.keys(source);\n\n    for (index = 0, length = sourceKeys.length; index < length; index += 1) {\n      key = sourceKeys[index];\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\n\nfunction repeat(string, count) {\n  var result = '', cycle;\n\n  for (cycle = 0; cycle < count; cycle += 1) {\n    result += string;\n  }\n\n  return result;\n}\n\n\nfunction isNegativeZero(number) {\n  return (number === 0) && (Number.NEGATIVE_INFINITY === 1 / number);\n}\n\n\nmodule.exports.isNothing      = isNothing;\nmodule.exports.isObject       = isObject;\nmodule.exports.toArray        = toArray;\nmodule.exports.repeat         = repeat;\nmodule.exports.isNegativeZero = isNegativeZero;\nmodule.exports.extend         = extend;\n","'use strict';\n\n/*eslint-disable no-use-before-define*/\n\nvar common              = require('./common');\nvar YAMLException       = require('./exception');\nvar DEFAULT_SCHEMA      = require('./schema/default');\n\nvar _toString       = Object.prototype.toString;\nvar _hasOwnProperty = Object.prototype.hasOwnProperty;\n\nvar CHAR_BOM                  = 0xFEFF;\nvar CHAR_TAB                  = 0x09; /* Tab */\nvar CHAR_LINE_FEED            = 0x0A; /* LF */\nvar CHAR_CARRIAGE_RETURN      = 0x0D; /* CR */\nvar CHAR_SPACE                = 0x20; /* Space */\nvar CHAR_EXCLAMATION          = 0x21; /* ! */\nvar CHAR_DOUBLE_QUOTE         = 0x22; /* \" */\nvar CHAR_SHARP                = 0x23; /* # */\nvar CHAR_PERCENT              = 0x25; /* % */\nvar CHAR_AMPERSAND            = 0x26; /* & */\nvar CHAR_SINGLE_QUOTE         = 0x27; /* ' */\nvar CHAR_ASTERISK             = 0x2A; /* * */\nvar CHAR_COMMA                = 0x2C; /* , */\nvar CHAR_MINUS                = 0x2D; /* - */\nvar CHAR_COLON                = 0x3A; /* : */\nvar CHAR_EQUALS               = 0x3D; /* = */\nvar CHAR_GREATER_THAN         = 0x3E; /* > */\nvar CHAR_QUESTION             = 0x3F; /* ? */\nvar CHAR_COMMERCIAL_AT        = 0x40; /* @ */\nvar CHAR_LEFT_SQUARE_BRACKET  = 0x5B; /* [ */\nvar CHAR_RIGHT_SQUARE_BRACKET = 0x5D; /* ] */\nvar CHAR_GRAVE_ACCENT         = 0x60; /* ` */\nvar CHAR_LEFT_CURLY_BRACKET   = 0x7B; /* { */\nvar CHAR_VERTICAL_LINE        = 0x7C; /* | */\nvar CHAR_RIGHT_CURLY_BRACKET  = 0x7D; /* } */\n\nvar ESCAPE_SEQUENCES = {};\n\nESCAPE_SEQUENCES[0x00]   = '\\\\0';\nESCAPE_SEQUENCES[0x07]   = '\\\\a';\nESCAPE_SEQUENCES[0x08]   = '\\\\b';\nESCAPE_SEQUENCES[0x09]   = '\\\\t';\nESCAPE_SEQUENCES[0x0A]   = '\\\\n';\nESCAPE_SEQUENCES[0x0B]   = '\\\\v';\nESCAPE_SEQUENCES[0x0C]   = '\\\\f';\nESCAPE_SEQUENCES[0x0D]   = '\\\\r';\nESCAPE_SEQUENCES[0x1B]   = '\\\\e';\nESCAPE_SEQUENCES[0x22]   = '\\\\\"';\nESCAPE_SEQUENCES[0x5C]   = '\\\\\\\\';\nESCAPE_SEQUENCES[0x85]   = '\\\\N';\nESCAPE_SEQUENCES[0xA0]   = '\\\\_';\nESCAPE_SEQUENCES[0x2028] = '\\\\L';\nESCAPE_SEQUENCES[0x2029] = '\\\\P';\n\nvar DEPRECATED_BOOLEANS_SYNTAX = [\n  'y', 'Y', 'yes', 'Yes', 'YES', 'on', 'On', 'ON',\n  'n', 'N', 'no', 'No', 'NO', 'off', 'Off', 'OFF'\n];\n\nvar DEPRECATED_BASE60_SYNTAX = /^[-+]?[0-9_]+(?::[0-9_]+)+(?:\\.[0-9_]*)?$/;\n\nfunction compileStyleMap(schema, map) {\n  var result, keys, index, length, tag, style, type;\n\n  if (map === null) return {};\n\n  result = {};\n  keys = Object.keys(map);\n\n  for (index = 0, length = keys.length; index < length; index += 1) {\n    tag = keys[index];\n    style = String(map[tag]);\n\n    if (tag.slice(0, 2) === '!!') {\n      tag = 'tag:yaml.org,2002:' + tag.slice(2);\n    }\n    type = schema.compiledTypeMap['fallback'][tag];\n\n    if (type && _hasOwnProperty.call(type.styleAliases, style)) {\n      style = type.styleAliases[style];\n    }\n\n    result[tag] = style;\n  }\n\n  return result;\n}\n\nfunction encodeHex(character) {\n  var string, handle, length;\n\n  string = character.toString(16).toUpperCase();\n\n  if (character <= 0xFF) {\n    handle = 'x';\n    length = 2;\n  } else if (character <= 0xFFFF) {\n    handle = 'u';\n    length = 4;\n  } else if (character <= 0xFFFFFFFF) {\n    handle = 'U';\n    length = 8;\n  } else {\n    throw new YAMLException('code point within a string may not be greater than 0xFFFFFFFF');\n  }\n\n  return '\\\\' + handle + common.repeat('0', length - string.length) + string;\n}\n\n\nvar QUOTING_TYPE_SINGLE = 1,\n    QUOTING_TYPE_DOUBLE = 2;\n\nfunction State(options) {\n  this.schema        = options['schema'] || DEFAULT_SCHEMA;\n  this.indent        = Math.max(1, (options['indent'] || 2));\n  this.noArrayIndent = options['noArrayIndent'] || false;\n  this.skipInvalid   = options['skipInvalid'] || false;\n  this.flowLevel     = (common.isNothing(options['flowLevel']) ? -1 : options['flowLevel']);\n  this.styleMap      = compileStyleMap(this.schema, options['styles'] || null);\n  this.sortKeys      = options['sortKeys'] || false;\n  this.lineWidth     = options['lineWidth'] || 80;\n  this.noRefs        = options['noRefs'] || false;\n  this.noCompatMode  = options['noCompatMode'] || false;\n  this.condenseFlow  = options['condenseFlow'] || false;\n  this.quotingType   = options['quotingType'] === '\"' ? QUOTING_TYPE_DOUBLE : QUOTING_TYPE_SINGLE;\n  this.forceQuotes   = options['forceQuotes'] || false;\n  this.replacer      = typeof options['replacer'] === 'function' ? options['replacer'] : null;\n\n  this.implicitTypes = this.schema.compiledImplicit;\n  this.explicitTypes = this.schema.compiledExplicit;\n\n  this.tag = null;\n  this.result = '';\n\n  this.duplicates = [];\n  this.usedDuplicates = null;\n}\n\n// Indents every line in a string. Empty lines (\\n only) are not indented.\nfunction indentString(string, spaces) {\n  var ind = common.repeat(' ', spaces),\n      position = 0,\n      next = -1,\n      result = '',\n      line,\n      length = string.length;\n\n  while (position < length) {\n    next = string.indexOf('\\n', position);\n    if (next === -1) {\n      line = string.slice(position);\n      position = length;\n    } else {\n      line = string.slice(position, next + 1);\n      position = next + 1;\n    }\n\n    if (line.length && line !== '\\n') result += ind;\n\n    result += line;\n  }\n\n  return result;\n}\n\nfunction generateNextLine(state, level) {\n  return '\\n' + common.repeat(' ', state.indent * level);\n}\n\nfunction testImplicitResolving(state, str) {\n  var index, length, type;\n\n  for (index = 0, length = state.implicitTypes.length; index < length; index += 1) {\n    type = state.implicitTypes[index];\n\n    if (type.resolve(str)) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\n// [33] s-white ::= s-space | s-tab\nfunction isWhitespace(c) {\n  return c === CHAR_SPACE || c === CHAR_TAB;\n}\n\n// Returns true if the character can be printed without escaping.\n// From YAML 1.2: \"any allowed characters known to be non-printable\n// should also be escaped. [However,] This isn’t mandatory\"\n// Derived from nb-char - \\t - #x85 - #xA0 - #x2028 - #x2029.\nfunction isPrintable(c) {\n  return  (0x00020 <= c && c <= 0x00007E)\n      || ((0x000A1 <= c && c <= 0x00D7FF) && c !== 0x2028 && c !== 0x2029)\n      || ((0x0E000 <= c && c <= 0x00FFFD) && c !== CHAR_BOM)\n      ||  (0x10000 <= c && c <= 0x10FFFF);\n}\n\n// [34] ns-char ::= nb-char - s-white\n// [27] nb-char ::= c-printable - b-char - c-byte-order-mark\n// [26] b-char  ::= b-line-feed | b-carriage-return\n// Including s-white (for some reason, examples doesn't match specs in this aspect)\n// ns-char ::= c-printable - b-line-feed - b-carriage-return - c-byte-order-mark\nfunction isNsCharOrWhitespace(c) {\n  return isPrintable(c)\n    && c !== CHAR_BOM\n    // - b-char\n    && c !== CHAR_CARRIAGE_RETURN\n    && c !== CHAR_LINE_FEED;\n}\n\n// [127]  ns-plain-safe(c) ::= c = flow-out  ⇒ ns-plain-safe-out\n//                             c = flow-in   ⇒ ns-plain-safe-in\n//                             c = block-key ⇒ ns-plain-safe-out\n//                             c = flow-key  ⇒ ns-plain-safe-in\n// [128] ns-plain-safe-out ::= ns-char\n// [129]  ns-plain-safe-in ::= ns-char - c-flow-indicator\n// [130]  ns-plain-char(c) ::=  ( ns-plain-safe(c) - “:” - “#” )\n//                            | ( /* An ns-char preceding */ “#” )\n//                            | ( “:” /* Followed by an ns-plain-safe(c) */ )\nfunction isPlainSafe(c, prev, inblock) {\n  var cIsNsCharOrWhitespace = isNsCharOrWhitespace(c);\n  var cIsNsChar = cIsNsCharOrWhitespace && !isWhitespace(c);\n  return (\n    // ns-plain-safe\n    inblock ? // c = flow-in\n      cIsNsCharOrWhitespace\n      : cIsNsCharOrWhitespace\n        // - c-flow-indicator\n        && c !== CHAR_COMMA\n        && c !== CHAR_LEFT_SQUARE_BRACKET\n        && c !== CHAR_RIGHT_SQUARE_BRACKET\n        && c !== CHAR_LEFT_CURLY_BRACKET\n        && c !== CHAR_RIGHT_CURLY_BRACKET\n  )\n    // ns-plain-char\n    && c !== CHAR_SHARP // false on '#'\n    && !(prev === CHAR_COLON && !cIsNsChar) // false on ': '\n    || (isNsCharOrWhitespace(prev) && !isWhitespace(prev) && c === CHAR_SHARP) // change to true on '[^ ]#'\n    || (prev === CHAR_COLON && cIsNsChar); // change to true on ':[^ ]'\n}\n\n// Simplified test for values allowed as the first character in plain style.\nfunction isPlainSafeFirst(c) {\n  // Uses a subset of ns-char - c-indicator\n  // where ns-char = nb-char - s-white.\n  // No support of ( ( “?” | “:” | “-” ) /* Followed by an ns-plain-safe(c)) */ ) part\n  return isPrintable(c) && c !== CHAR_BOM\n    && !isWhitespace(c) // - s-white\n    // - (c-indicator ::=\n    // “-” | “?” | “:” | “,” | “[” | “]” | “{” | “}”\n    && c !== CHAR_MINUS\n    && c !== CHAR_QUESTION\n    && c !== CHAR_COLON\n    && c !== CHAR_COMMA\n    && c !== CHAR_LEFT_SQUARE_BRACKET\n    && c !== CHAR_RIGHT_SQUARE_BRACKET\n    && c !== CHAR_LEFT_CURLY_BRACKET\n    && c !== CHAR_RIGHT_CURLY_BRACKET\n    // | “#” | “&” | “*” | “!” | “|” | “=” | “>” | “'” | “\"”\n    && c !== CHAR_SHARP\n    && c !== CHAR_AMPERSAND\n    && c !== CHAR_ASTERISK\n    && c !== CHAR_EXCLAMATION\n    && c !== CHAR_VERTICAL_LINE\n    && c !== CHAR_EQUALS\n    && c !== CHAR_GREATER_THAN\n    && c !== CHAR_SINGLE_QUOTE\n    && c !== CHAR_DOUBLE_QUOTE\n    // | “%” | “@” | “`”)\n    && c !== CHAR_PERCENT\n    && c !== CHAR_COMMERCIAL_AT\n    && c !== CHAR_GRAVE_ACCENT;\n}\n\n// Simplified test for values allowed as the last character in plain style.\nfunction isPlainSafeLast(c) {\n  // just not whitespace or colon, it will be checked to be plain character later\n  return !isWhitespace(c) && c !== CHAR_COLON;\n}\n\n// Same as 'string'.codePointAt(pos), but works in older browsers.\nfunction codePointAt(string, pos) {\n  var first = string.charCodeAt(pos), second;\n  if (first >= 0xD800 && first <= 0xDBFF && pos + 1 < string.length) {\n    second = string.charCodeAt(pos + 1);\n    if (second >= 0xDC00 && second <= 0xDFFF) {\n      // https://mathiasbynens.be/notes/javascript-encoding#surrogate-formulae\n      return (first - 0xD800) * 0x400 + second - 0xDC00 + 0x10000;\n    }\n  }\n  return first;\n}\n\n// Determines whether block indentation indicator is required.\nfunction needIndentIndicator(string) {\n  var leadingSpaceRe = /^\\n* /;\n  return leadingSpaceRe.test(string);\n}\n\nvar STYLE_PLAIN   = 1,\n    STYLE_SINGLE  = 2,\n    STYLE_LITERAL = 3,\n    STYLE_FOLDED  = 4,\n    STYLE_DOUBLE  = 5;\n\n// Determines which scalar styles are possible and returns the preferred style.\n// lineWidth = -1 => no limit.\n// Pre-conditions: str.length > 0.\n// Post-conditions:\n//    STYLE_PLAIN or STYLE_SINGLE => no \\n are in the string.\n//    STYLE_LITERAL => no lines are suitable for folding (or lineWidth is -1).\n//    STYLE_FOLDED => a line > lineWidth and can be folded (and lineWidth != -1).\nfunction chooseScalarStyle(string, singleLineOnly, indentPerLevel, lineWidth,\n  testAmbiguousType, quotingType, forceQuotes, inblock) {\n\n  var i;\n  var char = 0;\n  var prevChar = null;\n  var hasLineBreak = false;\n  var hasFoldableLine = false; // only checked if shouldTrackWidth\n  var shouldTrackWidth = lineWidth !== -1;\n  var previousLineBreak = -1; // count the first line correctly\n  var plain = isPlainSafeFirst(codePointAt(string, 0))\n          && isPlainSafeLast(codePointAt(string, string.length - 1));\n\n  if (singleLineOnly || forceQuotes) {\n    // Case: no block styles.\n    // Check for disallowed characters to rule out plain and single.\n    for (i = 0; i < string.length; char >= 0x10000 ? i += 2 : i++) {\n      char = codePointAt(string, i);\n      if (!isPrintable(char)) {\n        return STYLE_DOUBLE;\n      }\n      plain = plain && isPlainSafe(char, prevChar, inblock);\n      prevChar = char;\n    }\n  } else {\n    // Case: block styles permitted.\n    for (i = 0; i < string.length; char >= 0x10000 ? i += 2 : i++) {\n      char = codePointAt(string, i);\n      if (char === CHAR_LINE_FEED) {\n        hasLineBreak = true;\n        // Check if any line can be folded.\n        if (shouldTrackWidth) {\n          hasFoldableLine = hasFoldableLine ||\n            // Foldable line = too long, and not more-indented.\n            (i - previousLineBreak - 1 > lineWidth &&\n             string[previousLineBreak + 1] !== ' ');\n          previousLineBreak = i;\n        }\n      } else if (!isPrintable(char)) {\n        return STYLE_DOUBLE;\n      }\n      plain = plain && isPlainSafe(char, prevChar, inblock);\n      prevChar = char;\n    }\n    // in case the end is missing a \\n\n    hasFoldableLine = hasFoldableLine || (shouldTrackWidth &&\n      (i - previousLineBreak - 1 > lineWidth &&\n       string[previousLineBreak + 1] !== ' '));\n  }\n  // Although every style can represent \\n without escaping, prefer block styles\n  // for multiline, since they're more readable and they don't add empty lines.\n  // Also prefer folding a super-long line.\n  if (!hasLineBreak && !hasFoldableLine) {\n    // Strings interpretable as another type have to be quoted;\n    // e.g. the string 'true' vs. the boolean true.\n    if (plain && !forceQuotes && !testAmbiguousType(string)) {\n      return STYLE_PLAIN;\n    }\n    return quotingType === QUOTING_TYPE_DOUBLE ? STYLE_DOUBLE : STYLE_SINGLE;\n  }\n  // Edge case: block indentation indicator can only have one digit.\n  if (indentPerLevel > 9 && needIndentIndicator(string)) {\n    return STYLE_DOUBLE;\n  }\n  // At this point we know block styles are valid.\n  // Prefer literal style unless we want to fold.\n  if (!forceQuotes) {\n    return hasFoldableLine ? STYLE_FOLDED : STYLE_LITERAL;\n  }\n  return quotingType === QUOTING_TYPE_DOUBLE ? STYLE_DOUBLE : STYLE_SINGLE;\n}\n\n// Note: line breaking/folding is implemented for only the folded style.\n// NB. We drop the last trailing newline (if any) of a returned block scalar\n//  since the dumper adds its own newline. This always works:\n//    • No ending newline => unaffected; already using strip \"-\" chomping.\n//    • Ending newline    => removed then restored.\n//  Importantly, this keeps the \"+\" chomp indicator from gaining an extra line.\nfunction writeScalar(state, string, level, iskey, inblock) {\n  state.dump = (function () {\n    if (string.length === 0) {\n      return state.quotingType === QUOTING_TYPE_DOUBLE ? '\"\"' : \"''\";\n    }\n    if (!state.noCompatMode) {\n      if (DEPRECATED_BOOLEANS_SYNTAX.indexOf(string) !== -1 || DEPRECATED_BASE60_SYNTAX.test(string)) {\n        return state.quotingType === QUOTING_TYPE_DOUBLE ? ('\"' + string + '\"') : (\"'\" + string + \"'\");\n      }\n    }\n\n    var indent = state.indent * Math.max(1, level); // no 0-indent scalars\n    // As indentation gets deeper, let the width decrease monotonically\n    // to the lower bound min(state.lineWidth, 40).\n    // Note that this implies\n    //  state.lineWidth ≤ 40 + state.indent: width is fixed at the lower bound.\n    //  state.lineWidth > 40 + state.indent: width decreases until the lower bound.\n    // This behaves better than a constant minimum width which disallows narrower options,\n    // or an indent threshold which causes the width to suddenly increase.\n    var lineWidth = state.lineWidth === -1\n      ? -1 : Math.max(Math.min(state.lineWidth, 40), state.lineWidth - indent);\n\n    // Without knowing if keys are implicit/explicit, assume implicit for safety.\n    var singleLineOnly = iskey\n      // No block styles in flow mode.\n      || (state.flowLevel > -1 && level >= state.flowLevel);\n    function testAmbiguity(string) {\n      return testImplicitResolving(state, string);\n    }\n\n    switch (chooseScalarStyle(string, singleLineOnly, state.indent, lineWidth,\n      testAmbiguity, state.quotingType, state.forceQuotes && !iskey, inblock)) {\n\n      case STYLE_PLAIN:\n        return string;\n      case STYLE_SINGLE:\n        return \"'\" + string.replace(/'/g, \"''\") + \"'\";\n      case STYLE_LITERAL:\n        return '|' + blockHeader(string, state.indent)\n          + dropEndingNewline(indentString(string, indent));\n      case STYLE_FOLDED:\n        return '>' + blockHeader(string, state.indent)\n          + dropEndingNewline(indentString(foldString(string, lineWidth), indent));\n      case STYLE_DOUBLE:\n        return '\"' + escapeString(string, lineWidth) + '\"';\n      default:\n        throw new YAMLException('impossible error: invalid scalar style');\n    }\n  }());\n}\n\n// Pre-conditions: string is valid for a block scalar, 1 <= indentPerLevel <= 9.\nfunction blockHeader(string, indentPerLevel) {\n  var indentIndicator = needIndentIndicator(string) ? String(indentPerLevel) : '';\n\n  // note the special case: the string '\\n' counts as a \"trailing\" empty line.\n  var clip =          string[string.length - 1] === '\\n';\n  var keep = clip && (string[string.length - 2] === '\\n' || string === '\\n');\n  var chomp = keep ? '+' : (clip ? '' : '-');\n\n  return indentIndicator + chomp + '\\n';\n}\n\n// (See the note for writeScalar.)\nfunction dropEndingNewline(string) {\n  return string[string.length - 1] === '\\n' ? string.slice(0, -1) : string;\n}\n\n// Note: a long line without a suitable break point will exceed the width limit.\n// Pre-conditions: every char in str isPrintable, str.length > 0, width > 0.\nfunction foldString(string, width) {\n  // In folded style, $k$ consecutive newlines output as $k+1$ newlines—\n  // unless they're before or after a more-indented line, or at the very\n  // beginning or end, in which case $k$ maps to $k$.\n  // Therefore, parse each chunk as newline(s) followed by a content line.\n  var lineRe = /(\\n+)([^\\n]*)/g;\n\n  // first line (possibly an empty line)\n  var result = (function () {\n    var nextLF = string.indexOf('\\n');\n    nextLF = nextLF !== -1 ? nextLF : string.length;\n    lineRe.lastIndex = nextLF;\n    return foldLine(string.slice(0, nextLF), width);\n  }());\n  // If we haven't reached the first content line yet, don't add an extra \\n.\n  var prevMoreIndented = string[0] === '\\n' || string[0] === ' ';\n  var moreIndented;\n\n  // rest of the lines\n  var match;\n  while ((match = lineRe.exec(string))) {\n    var prefix = match[1], line = match[2];\n    moreIndented = (line[0] === ' ');\n    result += prefix\n      + (!prevMoreIndented && !moreIndented && line !== ''\n        ? '\\n' : '')\n      + foldLine(line, width);\n    prevMoreIndented = moreIndented;\n  }\n\n  return result;\n}\n\n// Greedy line breaking.\n// Picks the longest line under the limit each time,\n// otherwise settles for the shortest line over the limit.\n// NB. More-indented lines *cannot* be folded, as that would add an extra \\n.\nfunction foldLine(line, width) {\n  if (line === '' || line[0] === ' ') return line;\n\n  // Since a more-indented line adds a \\n, breaks can't be followed by a space.\n  var breakRe = / [^ ]/g; // note: the match index will always be <= length-2.\n  var match;\n  // start is an inclusive index. end, curr, and next are exclusive.\n  var start = 0, end, curr = 0, next = 0;\n  var result = '';\n\n  // Invariants: 0 <= start <= length-1.\n  //   0 <= curr <= next <= max(0, length-2). curr - start <= width.\n  // Inside the loop:\n  //   A match implies length >= 2, so curr and next are <= length-2.\n  while ((match = breakRe.exec(line))) {\n    next = match.index;\n    // maintain invariant: curr - start <= width\n    if (next - start > width) {\n      end = (curr > start) ? curr : next; // derive end <= length-2\n      result += '\\n' + line.slice(start, end);\n      // skip the space that was output as \\n\n      start = end + 1;                    // derive start <= length-1\n    }\n    curr = next;\n  }\n\n  // By the invariants, start <= length-1, so there is something left over.\n  // It is either the whole string or a part starting from non-whitespace.\n  result += '\\n';\n  // Insert a break if the remainder is too long and there is a break available.\n  if (line.length - start > width && curr > start) {\n    result += line.slice(start, curr) + '\\n' + line.slice(curr + 1);\n  } else {\n    result += line.slice(start);\n  }\n\n  return result.slice(1); // drop extra \\n joiner\n}\n\n// Escapes a double-quoted string.\nfunction escapeString(string) {\n  var result = '';\n  var char = 0;\n  var escapeSeq;\n\n  for (var i = 0; i < string.length; char >= 0x10000 ? i += 2 : i++) {\n    char = codePointAt(string, i);\n    escapeSeq = ESCAPE_SEQUENCES[char];\n\n    if (!escapeSeq && isPrintable(char)) {\n      result += string[i];\n      if (char >= 0x10000) result += string[i + 1];\n    } else {\n      result += escapeSeq || encodeHex(char);\n    }\n  }\n\n  return result;\n}\n\nfunction writeFlowSequence(state, level, object) {\n  var _result = '',\n      _tag    = state.tag,\n      index,\n      length,\n      value;\n\n  for (index = 0, length = object.length; index < length; index += 1) {\n    value = object[index];\n\n    if (state.replacer) {\n      value = state.replacer.call(object, String(index), value);\n    }\n\n    // Write only valid elements, put null instead of invalid elements.\n    if (writeNode(state, level, value, false, false) ||\n        (typeof value === 'undefined' &&\n         writeNode(state, level, null, false, false))) {\n\n      if (_result !== '') _result += ',' + (!state.condenseFlow ? ' ' : '');\n      _result += state.dump;\n    }\n  }\n\n  state.tag = _tag;\n  state.dump = '[' + _result + ']';\n}\n\nfunction writeBlockSequence(state, level, object, compact) {\n  var _result = '',\n      _tag    = state.tag,\n      index,\n      length,\n      value;\n\n  for (index = 0, length = object.length; index < length; index += 1) {\n    value = object[index];\n\n    if (state.replacer) {\n      value = state.replacer.call(object, String(index), value);\n    }\n\n    // Write only valid elements, put null instead of invalid elements.\n    if (writeNode(state, level + 1, value, true, true, false, true) ||\n        (typeof value === 'undefined' &&\n         writeNode(state, level + 1, null, true, true, false, true))) {\n\n      if (!compact || _result !== '') {\n        _result += generateNextLine(state, level);\n      }\n\n      if (state.dump && CHAR_LINE_FEED === state.dump.charCodeAt(0)) {\n        _result += '-';\n      } else {\n        _result += '- ';\n      }\n\n      _result += state.dump;\n    }\n  }\n\n  state.tag = _tag;\n  state.dump = _result || '[]'; // Empty sequence if no valid values.\n}\n\nfunction writeFlowMapping(state, level, object) {\n  var _result       = '',\n      _tag          = state.tag,\n      objectKeyList = Object.keys(object),\n      index,\n      length,\n      objectKey,\n      objectValue,\n      pairBuffer;\n\n  for (index = 0, length = objectKeyList.length; index < length; index += 1) {\n\n    pairBuffer = '';\n    if (_result !== '') pairBuffer += ', ';\n\n    if (state.condenseFlow) pairBuffer += '\"';\n\n    objectKey = objectKeyList[index];\n    objectValue = object[objectKey];\n\n    if (state.replacer) {\n      objectValue = state.replacer.call(object, objectKey, objectValue);\n    }\n\n    if (!writeNode(state, level, objectKey, false, false)) {\n      continue; // Skip this pair because of invalid key;\n    }\n\n    if (state.dump.length > 1024) pairBuffer += '? ';\n\n    pairBuffer += state.dump + (state.condenseFlow ? '\"' : '') + ':' + (state.condenseFlow ? '' : ' ');\n\n    if (!writeNode(state, level, objectValue, false, false)) {\n      continue; // Skip this pair because of invalid value.\n    }\n\n    pairBuffer += state.dump;\n\n    // Both key and value are valid.\n    _result += pairBuffer;\n  }\n\n  state.tag = _tag;\n  state.dump = '{' + _result + '}';\n}\n\nfunction writeBlockMapping(state, level, object, compact) {\n  var _result       = '',\n      _tag          = state.tag,\n      objectKeyList = Object.keys(object),\n      index,\n      length,\n      objectKey,\n      objectValue,\n      explicitPair,\n      pairBuffer;\n\n  // Allow sorting keys so that the output file is deterministic\n  if (state.sortKeys === true) {\n    // Default sorting\n    objectKeyList.sort();\n  } else if (typeof state.sortKeys === 'function') {\n    // Custom sort function\n    objectKeyList.sort(state.sortKeys);\n  } else if (state.sortKeys) {\n    // Something is wrong\n    throw new YAMLException('sortKeys must be a boolean or a function');\n  }\n\n  for (index = 0, length = objectKeyList.length; index < length; index += 1) {\n    pairBuffer = '';\n\n    if (!compact || _result !== '') {\n      pairBuffer += generateNextLine(state, level);\n    }\n\n    objectKey = objectKeyList[index];\n    objectValue = object[objectKey];\n\n    if (state.replacer) {\n      objectValue = state.replacer.call(object, objectKey, objectValue);\n    }\n\n    if (!writeNode(state, level + 1, objectKey, true, true, true)) {\n      continue; // Skip this pair because of invalid key.\n    }\n\n    explicitPair = (state.tag !== null && state.tag !== '?') ||\n                   (state.dump && state.dump.length > 1024);\n\n    if (explicitPair) {\n      if (state.dump && CHAR_LINE_FEED === state.dump.charCodeAt(0)) {\n        pairBuffer += '?';\n      } else {\n        pairBuffer += '? ';\n      }\n    }\n\n    pairBuffer += state.dump;\n\n    if (explicitPair) {\n      pairBuffer += generateNextLine(state, level);\n    }\n\n    if (!writeNode(state, level + 1, objectValue, true, explicitPair)) {\n      continue; // Skip this pair because of invalid value.\n    }\n\n    if (state.dump && CHAR_LINE_FEED === state.dump.charCodeAt(0)) {\n      pairBuffer += ':';\n    } else {\n      pairBuffer += ': ';\n    }\n\n    pairBuffer += state.dump;\n\n    // Both key and value are valid.\n    _result += pairBuffer;\n  }\n\n  state.tag = _tag;\n  state.dump = _result || '{}'; // Empty mapping if no valid pairs.\n}\n\nfunction detectType(state, object, explicit) {\n  var _result, typeList, index, length, type, style;\n\n  typeList = explicit ? state.explicitTypes : state.implicitTypes;\n\n  for (index = 0, length = typeList.length; index < length; index += 1) {\n    type = typeList[index];\n\n    if ((type.instanceOf  || type.predicate) &&\n        (!type.instanceOf || ((typeof object === 'object') && (object instanceof type.instanceOf))) &&\n        (!type.predicate  || type.predicate(object))) {\n\n      if (explicit) {\n        if (type.multi && type.representName) {\n          state.tag = type.representName(object);\n        } else {\n          state.tag = type.tag;\n        }\n      } else {\n        state.tag = '?';\n      }\n\n      if (type.represent) {\n        style = state.styleMap[type.tag] || type.defaultStyle;\n\n        if (_toString.call(type.represent) === '[object Function]') {\n          _result = type.represent(object, style);\n        } else if (_hasOwnProperty.call(type.represent, style)) {\n          _result = type.represent[style](object, style);\n        } else {\n          throw new YAMLException('!<' + type.tag + '> tag resolver accepts not \"' + style + '\" style');\n        }\n\n        state.dump = _result;\n      }\n\n      return true;\n    }\n  }\n\n  return false;\n}\n\n// Serializes `object` and writes it to global `result`.\n// Returns true on success, or false on invalid object.\n//\nfunction writeNode(state, level, object, block, compact, iskey, isblockseq) {\n  state.tag = null;\n  state.dump = object;\n\n  if (!detectType(state, object, false)) {\n    detectType(state, object, true);\n  }\n\n  var type = _toString.call(state.dump);\n  var inblock = block;\n  var tagStr;\n\n  if (block) {\n    block = (state.flowLevel < 0 || state.flowLevel > level);\n  }\n\n  var objectOrArray = type === '[object Object]' || type === '[object Array]',\n      duplicateIndex,\n      duplicate;\n\n  if (objectOrArray) {\n    duplicateIndex = state.duplicates.indexOf(object);\n    duplicate = duplicateIndex !== -1;\n  }\n\n  if ((state.tag !== null && state.tag !== '?') || duplicate || (state.indent !== 2 && level > 0)) {\n    compact = false;\n  }\n\n  if (duplicate && state.usedDuplicates[duplicateIndex]) {\n    state.dump = '*ref_' + duplicateIndex;\n  } else {\n    if (objectOrArray && duplicate && !state.usedDuplicates[duplicateIndex]) {\n      state.usedDuplicates[duplicateIndex] = true;\n    }\n    if (type === '[object Object]') {\n      if (block && (Object.keys(state.dump).length !== 0)) {\n        writeBlockMapping(state, level, state.dump, compact);\n        if (duplicate) {\n          state.dump = '&ref_' + duplicateIndex + state.dump;\n        }\n      } else {\n        writeFlowMapping(state, level, state.dump);\n        if (duplicate) {\n          state.dump = '&ref_' + duplicateIndex + ' ' + state.dump;\n        }\n      }\n    } else if (type === '[object Array]') {\n      if (block && (state.dump.length !== 0)) {\n        if (state.noArrayIndent && !isblockseq && level > 0) {\n          writeBlockSequence(state, level - 1, state.dump, compact);\n        } else {\n          writeBlockSequence(state, level, state.dump, compact);\n        }\n        if (duplicate) {\n          state.dump = '&ref_' + duplicateIndex + state.dump;\n        }\n      } else {\n        writeFlowSequence(state, level, state.dump);\n        if (duplicate) {\n          state.dump = '&ref_' + duplicateIndex + ' ' + state.dump;\n        }\n      }\n    } else if (type === '[object String]') {\n      if (state.tag !== '?') {\n        writeScalar(state, state.dump, level, iskey, inblock);\n      }\n    } else if (type === '[object Undefined]') {\n      return false;\n    } else {\n      if (state.skipInvalid) return false;\n      throw new YAMLException('unacceptable kind of an object to dump ' + type);\n    }\n\n    if (state.tag !== null && state.tag !== '?') {\n      // Need to encode all characters except those allowed by the spec:\n      //\n      // [35] ns-dec-digit    ::=  [#x30-#x39] /* 0-9 */\n      // [36] ns-hex-digit    ::=  ns-dec-digit\n      //                         | [#x41-#x46] /* A-F */ | [#x61-#x66] /* a-f */\n      // [37] ns-ascii-letter ::=  [#x41-#x5A] /* A-Z */ | [#x61-#x7A] /* a-z */\n      // [38] ns-word-char    ::=  ns-dec-digit | ns-ascii-letter | “-”\n      // [39] ns-uri-char     ::=  “%” ns-hex-digit ns-hex-digit | ns-word-char | “#”\n      //                         | “;” | “/” | “?” | “:” | “@” | “&” | “=” | “+” | “$” | “,”\n      //                         | “_” | “.” | “!” | “~” | “*” | “'” | “(” | “)” | “[” | “]”\n      //\n      // Also need to encode '!' because it has special meaning (end of tag prefix).\n      //\n      tagStr = encodeURI(\n        state.tag[0] === '!' ? state.tag.slice(1) : state.tag\n      ).replace(/!/g, '%21');\n\n      if (state.tag[0] === '!') {\n        tagStr = '!' + tagStr;\n      } else if (tagStr.slice(0, 18) === 'tag:yaml.org,2002:') {\n        tagStr = '!!' + tagStr.slice(18);\n      } else {\n        tagStr = '!<' + tagStr + '>';\n      }\n\n      state.dump = tagStr + ' ' + state.dump;\n    }\n  }\n\n  return true;\n}\n\nfunction getDuplicateReferences(object, state) {\n  var objects = [],\n      duplicatesIndexes = [],\n      index,\n      length;\n\n  inspectNode(object, objects, duplicatesIndexes);\n\n  for (index = 0, length = duplicatesIndexes.length; index < length; index += 1) {\n    state.duplicates.push(objects[duplicatesIndexes[index]]);\n  }\n  state.usedDuplicates = new Array(length);\n}\n\nfunction inspectNode(object, objects, duplicatesIndexes) {\n  var objectKeyList,\n      index,\n      length;\n\n  if (object !== null && typeof object === 'object') {\n    index = objects.indexOf(object);\n    if (index !== -1) {\n      if (duplicatesIndexes.indexOf(index) === -1) {\n        duplicatesIndexes.push(index);\n      }\n    } else {\n      objects.push(object);\n\n      if (Array.isArray(object)) {\n        for (index = 0, length = object.length; index < length; index += 1) {\n          inspectNode(object[index], objects, duplicatesIndexes);\n        }\n      } else {\n        objectKeyList = Object.keys(object);\n\n        for (index = 0, length = objectKeyList.length; index < length; index += 1) {\n          inspectNode(object[objectKeyList[index]], objects, duplicatesIndexes);\n        }\n      }\n    }\n  }\n}\n\nfunction dump(input, options) {\n  options = options || {};\n\n  var state = new State(options);\n\n  if (!state.noRefs) getDuplicateReferences(input, state);\n\n  var value = input;\n\n  if (state.replacer) {\n    value = state.replacer.call({ '': value }, '', value);\n  }\n\n  if (writeNode(state, 0, value, true, true)) return state.dump + '\\n';\n\n  return '';\n}\n\nmodule.exports.dump = dump;\n","// YAML error class. http://stackoverflow.com/questions/8458984\n//\n'use strict';\n\n\nfunction formatError(exception, compact) {\n  var where = '', message = exception.reason || '(unknown reason)';\n\n  if (!exception.mark) return message;\n\n  if (exception.mark.name) {\n    where += 'in \"' + exception.mark.name + '\" ';\n  }\n\n  where += '(' + (exception.mark.line + 1) + ':' + (exception.mark.column + 1) + ')';\n\n  if (!compact && exception.mark.snippet) {\n    where += '\\n\\n' + exception.mark.snippet;\n  }\n\n  return message + ' ' + where;\n}\n\n\nfunction YAMLException(reason, mark) {\n  // Super constructor\n  Error.call(this);\n\n  this.name = 'YAMLException';\n  this.reason = reason;\n  this.mark = mark;\n  this.message = formatError(this, false);\n\n  // Include stack trace in error object\n  if (Error.captureStackTrace) {\n    // Chrome and NodeJS\n    Error.captureStackTrace(this, this.constructor);\n  } else {\n    // FF, IE 10+ and Safari 6+. Fallback for others\n    this.stack = (new Error()).stack || '';\n  }\n}\n\n\n// Inherit from Error\nYAMLException.prototype = Object.create(Error.prototype);\nYAMLException.prototype.constructor = YAMLException;\n\n\nYAMLException.prototype.toString = function toString(compact) {\n  return this.name + ': ' + formatError(this, compact);\n};\n\n\nmodule.exports = YAMLException;\n","'use strict';\n\n/*eslint-disable max-len,no-use-before-define*/\n\nvar common              = require('./common');\nvar YAMLException       = require('./exception');\nvar makeSnippet         = require('./snippet');\nvar DEFAULT_SCHEMA      = require('./schema/default');\n\n\nvar _hasOwnProperty = Object.prototype.hasOwnProperty;\n\n\nvar CONTEXT_FLOW_IN   = 1;\nvar CONTEXT_FLOW_OUT  = 2;\nvar CONTEXT_BLOCK_IN  = 3;\nvar CONTEXT_BLOCK_OUT = 4;\n\n\nvar CHOMPING_CLIP  = 1;\nvar CHOMPING_STRIP = 2;\nvar CHOMPING_KEEP  = 3;\n\n\nvar PATTERN_NON_PRINTABLE         = /[\\x00-\\x08\\x0B\\x0C\\x0E-\\x1F\\x7F-\\x84\\x86-\\x9F\\uFFFE\\uFFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF]/;\nvar PATTERN_NON_ASCII_LINE_BREAKS = /[\\x85\\u2028\\u2029]/;\nvar PATTERN_FLOW_INDICATORS       = /[,\\[\\]\\{\\}]/;\nvar PATTERN_TAG_HANDLE            = /^(?:!|!!|![a-z\\-]+!)$/i;\nvar PATTERN_TAG_URI               = /^(?:!|[^,\\[\\]\\{\\}])(?:%[0-9a-f]{2}|[0-9a-z\\-#;\\/\\?:@&=\\+\\$,_\\.!~\\*'\\(\\)\\[\\]])*$/i;\n\n\nfunction _class(obj) { return Object.prototype.toString.call(obj); }\n\nfunction is_EOL(c) {\n  return (c === 0x0A/* LF */) || (c === 0x0D/* CR */);\n}\n\nfunction is_WHITE_SPACE(c) {\n  return (c === 0x09/* Tab */) || (c === 0x20/* Space */);\n}\n\nfunction is_WS_OR_EOL(c) {\n  return (c === 0x09/* Tab */) ||\n         (c === 0x20/* Space */) ||\n         (c === 0x0A/* LF */) ||\n         (c === 0x0D/* CR */);\n}\n\nfunction is_FLOW_INDICATOR(c) {\n  return c === 0x2C/* , */ ||\n         c === 0x5B/* [ */ ||\n         c === 0x5D/* ] */ ||\n         c === 0x7B/* { */ ||\n         c === 0x7D/* } */;\n}\n\nfunction fromHexCode(c) {\n  var lc;\n\n  if ((0x30/* 0 */ <= c) && (c <= 0x39/* 9 */)) {\n    return c - 0x30;\n  }\n\n  /*eslint-disable no-bitwise*/\n  lc = c | 0x20;\n\n  if ((0x61/* a */ <= lc) && (lc <= 0x66/* f */)) {\n    return lc - 0x61 + 10;\n  }\n\n  return -1;\n}\n\nfunction escapedHexLen(c) {\n  if (c === 0x78/* x */) { return 2; }\n  if (c === 0x75/* u */) { return 4; }\n  if (c === 0x55/* U */) { return 8; }\n  return 0;\n}\n\nfunction fromDecimalCode(c) {\n  if ((0x30/* 0 */ <= c) && (c <= 0x39/* 9 */)) {\n    return c - 0x30;\n  }\n\n  return -1;\n}\n\nfunction simpleEscapeSequence(c) {\n  /* eslint-disable indent */\n  return (c === 0x30/* 0 */) ? '\\x00' :\n        (c === 0x61/* a */) ? '\\x07' :\n        (c === 0x62/* b */) ? '\\x08' :\n        (c === 0x74/* t */) ? '\\x09' :\n        (c === 0x09/* Tab */) ? '\\x09' :\n        (c === 0x6E/* n */) ? '\\x0A' :\n        (c === 0x76/* v */) ? '\\x0B' :\n        (c === 0x66/* f */) ? '\\x0C' :\n        (c === 0x72/* r */) ? '\\x0D' :\n        (c === 0x65/* e */) ? '\\x1B' :\n        (c === 0x20/* Space */) ? ' ' :\n        (c === 0x22/* \" */) ? '\\x22' :\n        (c === 0x2F/* / */) ? '/' :\n        (c === 0x5C/* \\ */) ? '\\x5C' :\n        (c === 0x4E/* N */) ? '\\x85' :\n        (c === 0x5F/* _ */) ? '\\xA0' :\n        (c === 0x4C/* L */) ? '\\u2028' :\n        (c === 0x50/* P */) ? '\\u2029' : '';\n}\n\nfunction charFromCodepoint(c) {\n  if (c <= 0xFFFF) {\n    return String.fromCharCode(c);\n  }\n  // Encode UTF-16 surrogate pair\n  // https://en.wikipedia.org/wiki/UTF-16#Code_points_U.2B010000_to_U.2B10FFFF\n  return String.fromCharCode(\n    ((c - 0x010000) >> 10) + 0xD800,\n    ((c - 0x010000) & 0x03FF) + 0xDC00\n  );\n}\n\nvar simpleEscapeCheck = new Array(256); // integer, for fast access\nvar simpleEscapeMap = new Array(256);\nfor (var i = 0; i < 256; i++) {\n  simpleEscapeCheck[i] = simpleEscapeSequence(i) ? 1 : 0;\n  simpleEscapeMap[i] = simpleEscapeSequence(i);\n}\n\n\nfunction State(input, options) {\n  this.input = input;\n\n  this.filename  = options['filename']  || null;\n  this.schema    = options['schema']    || DEFAULT_SCHEMA;\n  this.onWarning = options['onWarning'] || null;\n  // (Hidden) Remove? makes the loader to expect YAML 1.1 documents\n  // if such documents have no explicit %YAML directive\n  this.legacy    = options['legacy']    || false;\n\n  this.json      = options['json']      || false;\n  this.listener  = options['listener']  || null;\n\n  this.implicitTypes = this.schema.compiledImplicit;\n  this.typeMap       = this.schema.compiledTypeMap;\n\n  this.length     = input.length;\n  this.position   = 0;\n  this.line       = 0;\n  this.lineStart  = 0;\n  this.lineIndent = 0;\n\n  // position of first leading tab in the current line,\n  // used to make sure there are no tabs in the indentation\n  this.firstTabInLine = -1;\n\n  this.documents = [];\n\n  /*\n  this.version;\n  this.checkLineBreaks;\n  this.tagMap;\n  this.anchorMap;\n  this.tag;\n  this.anchor;\n  this.kind;\n  this.result;*/\n\n}\n\n\nfunction generateError(state, message) {\n  var mark = {\n    name:     state.filename,\n    buffer:   state.input.slice(0, -1), // omit trailing \\0\n    position: state.position,\n    line:     state.line,\n    column:   state.position - state.lineStart\n  };\n\n  mark.snippet = makeSnippet(mark);\n\n  return new YAMLException(message, mark);\n}\n\nfunction throwError(state, message) {\n  throw generateError(state, message);\n}\n\nfunction throwWarning(state, message) {\n  if (state.onWarning) {\n    state.onWarning.call(null, generateError(state, message));\n  }\n}\n\n\nvar directiveHandlers = {\n\n  YAML: function handleYamlDirective(state, name, args) {\n\n    var match, major, minor;\n\n    if (state.version !== null) {\n      throwError(state, 'duplication of %YAML directive');\n    }\n\n    if (args.length !== 1) {\n      throwError(state, 'YAML directive accepts exactly one argument');\n    }\n\n    match = /^([0-9]+)\\.([0-9]+)$/.exec(args[0]);\n\n    if (match === null) {\n      throwError(state, 'ill-formed argument of the YAML directive');\n    }\n\n    major = parseInt(match[1], 10);\n    minor = parseInt(match[2], 10);\n\n    if (major !== 1) {\n      throwError(state, 'unacceptable YAML version of the document');\n    }\n\n    state.version = args[0];\n    state.checkLineBreaks = (minor < 2);\n\n    if (minor !== 1 && minor !== 2) {\n      throwWarning(state, 'unsupported YAML version of the document');\n    }\n  },\n\n  TAG: function handleTagDirective(state, name, args) {\n\n    var handle, prefix;\n\n    if (args.length !== 2) {\n      throwError(state, 'TAG directive accepts exactly two arguments');\n    }\n\n    handle = args[0];\n    prefix = args[1];\n\n    if (!PATTERN_TAG_HANDLE.test(handle)) {\n      throwError(state, 'ill-formed tag handle (first argument) of the TAG directive');\n    }\n\n    if (_hasOwnProperty.call(state.tagMap, handle)) {\n      throwError(state, 'there is a previously declared suffix for \"' + handle + '\" tag handle');\n    }\n\n    if (!PATTERN_TAG_URI.test(prefix)) {\n      throwError(state, 'ill-formed tag prefix (second argument) of the TAG directive');\n    }\n\n    try {\n      prefix = decodeURIComponent(prefix);\n    } catch (err) {\n      throwError(state, 'tag prefix is malformed: ' + prefix);\n    }\n\n    state.tagMap[handle] = prefix;\n  }\n};\n\n\nfunction captureSegment(state, start, end, checkJson) {\n  var _position, _length, _character, _result;\n\n  if (start < end) {\n    _result = state.input.slice(start, end);\n\n    if (checkJson) {\n      for (_position = 0, _length = _result.length; _position < _length; _position += 1) {\n        _character = _result.charCodeAt(_position);\n        if (!(_character === 0x09 ||\n              (0x20 <= _character && _character <= 0x10FFFF))) {\n          throwError(state, 'expected valid JSON character');\n        }\n      }\n    } else if (PATTERN_NON_PRINTABLE.test(_result)) {\n      throwError(state, 'the stream contains non-printable characters');\n    }\n\n    state.result += _result;\n  }\n}\n\nfunction mergeMappings(state, destination, source, overridableKeys) {\n  var sourceKeys, key, index, quantity;\n\n  if (!common.isObject(source)) {\n    throwError(state, 'cannot merge mappings; the provided source object is unacceptable');\n  }\n\n  sourceKeys = Object.keys(source);\n\n  for (index = 0, quantity = sourceKeys.length; index < quantity; index += 1) {\n    key = sourceKeys[index];\n\n    if (!_hasOwnProperty.call(destination, key)) {\n      destination[key] = source[key];\n      overridableKeys[key] = true;\n    }\n  }\n}\n\nfunction storeMappingPair(state, _result, overridableKeys, keyTag, keyNode, valueNode,\n  startLine, startLineStart, startPos) {\n\n  var index, quantity;\n\n  // The output is a plain object here, so keys can only be strings.\n  // We need to convert keyNode to a string, but doing so can hang the process\n  // (deeply nested arrays that explode exponentially using aliases).\n  if (Array.isArray(keyNode)) {\n    keyNode = Array.prototype.slice.call(keyNode);\n\n    for (index = 0, quantity = keyNode.length; index < quantity; index += 1) {\n      if (Array.isArray(keyNode[index])) {\n        throwError(state, 'nested arrays are not supported inside keys');\n      }\n\n      if (typeof keyNode === 'object' && _class(keyNode[index]) === '[object Object]') {\n        keyNode[index] = '[object Object]';\n      }\n    }\n  }\n\n  // Avoid code execution in load() via toString property\n  // (still use its own toString for arrays, timestamps,\n  // and whatever user schema extensions happen to have @@toStringTag)\n  if (typeof keyNode === 'object' && _class(keyNode) === '[object Object]') {\n    keyNode = '[object Object]';\n  }\n\n\n  keyNode = String(keyNode);\n\n  if (_result === null) {\n    _result = {};\n  }\n\n  if (keyTag === 'tag:yaml.org,2002:merge') {\n    if (Array.isArray(valueNode)) {\n      for (index = 0, quantity = valueNode.length; index < quantity; index += 1) {\n        mergeMappings(state, _result, valueNode[index], overridableKeys);\n      }\n    } else {\n      mergeMappings(state, _result, valueNode, overridableKeys);\n    }\n  } else {\n    if (!state.json &&\n        !_hasOwnProperty.call(overridableKeys, keyNode) &&\n        _hasOwnProperty.call(_result, keyNode)) {\n      state.line = startLine || state.line;\n      state.lineStart = startLineStart || state.lineStart;\n      state.position = startPos || state.position;\n      throwError(state, 'duplicated mapping key');\n    }\n\n    // used for this specific key only because Object.defineProperty is slow\n    if (keyNode === '__proto__') {\n      Object.defineProperty(_result, keyNode, {\n        configurable: true,\n        enumerable: true,\n        writable: true,\n        value: valueNode\n      });\n    } else {\n      _result[keyNode] = valueNode;\n    }\n    delete overridableKeys[keyNode];\n  }\n\n  return _result;\n}\n\nfunction readLineBreak(state) {\n  var ch;\n\n  ch = state.input.charCodeAt(state.position);\n\n  if (ch === 0x0A/* LF */) {\n    state.position++;\n  } else if (ch === 0x0D/* CR */) {\n    state.position++;\n    if (state.input.charCodeAt(state.position) === 0x0A/* LF */) {\n      state.position++;\n    }\n  } else {\n    throwError(state, 'a line break is expected');\n  }\n\n  state.line += 1;\n  state.lineStart = state.position;\n  state.firstTabInLine = -1;\n}\n\nfunction skipSeparationSpace(state, allowComments, checkIndent) {\n  var lineBreaks = 0,\n      ch = state.input.charCodeAt(state.position);\n\n  while (ch !== 0) {\n    while (is_WHITE_SPACE(ch)) {\n      if (ch === 0x09/* Tab */ && state.firstTabInLine === -1) {\n        state.firstTabInLine = state.position;\n      }\n      ch = state.input.charCodeAt(++state.position);\n    }\n\n    if (allowComments && ch === 0x23/* # */) {\n      do {\n        ch = state.input.charCodeAt(++state.position);\n      } while (ch !== 0x0A/* LF */ && ch !== 0x0D/* CR */ && ch !== 0);\n    }\n\n    if (is_EOL(ch)) {\n      readLineBreak(state);\n\n      ch = state.input.charCodeAt(state.position);\n      lineBreaks++;\n      state.lineIndent = 0;\n\n      while (ch === 0x20/* Space */) {\n        state.lineIndent++;\n        ch = state.input.charCodeAt(++state.position);\n      }\n    } else {\n      break;\n    }\n  }\n\n  if (checkIndent !== -1 && lineBreaks !== 0 && state.lineIndent < checkIndent) {\n    throwWarning(state, 'deficient indentation');\n  }\n\n  return lineBreaks;\n}\n\nfunction testDocumentSeparator(state) {\n  var _position = state.position,\n      ch;\n\n  ch = state.input.charCodeAt(_position);\n\n  // Condition state.position === state.lineStart is tested\n  // in parent on each call, for efficiency. No needs to test here again.\n  if ((ch === 0x2D/* - */ || ch === 0x2E/* . */) &&\n      ch === state.input.charCodeAt(_position + 1) &&\n      ch === state.input.charCodeAt(_position + 2)) {\n\n    _position += 3;\n\n    ch = state.input.charCodeAt(_position);\n\n    if (ch === 0 || is_WS_OR_EOL(ch)) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction writeFoldedLines(state, count) {\n  if (count === 1) {\n    state.result += ' ';\n  } else if (count > 1) {\n    state.result += common.repeat('\\n', count - 1);\n  }\n}\n\n\nfunction readPlainScalar(state, nodeIndent, withinFlowCollection) {\n  var preceding,\n      following,\n      captureStart,\n      captureEnd,\n      hasPendingContent,\n      _line,\n      _lineStart,\n      _lineIndent,\n      _kind = state.kind,\n      _result = state.result,\n      ch;\n\n  ch = state.input.charCodeAt(state.position);\n\n  if (is_WS_OR_EOL(ch)      ||\n      is_FLOW_INDICATOR(ch) ||\n      ch === 0x23/* # */    ||\n      ch === 0x26/* & */    ||\n      ch === 0x2A/* * */    ||\n      ch === 0x21/* ! */    ||\n      ch === 0x7C/* | */    ||\n      ch === 0x3E/* > */    ||\n      ch === 0x27/* ' */    ||\n      ch === 0x22/* \" */    ||\n      ch === 0x25/* % */    ||\n      ch === 0x40/* @ */    ||\n      ch === 0x60/* ` */) {\n    return false;\n  }\n\n  if (ch === 0x3F/* ? */ || ch === 0x2D/* - */) {\n    following = state.input.charCodeAt(state.position + 1);\n\n    if (is_WS_OR_EOL(following) ||\n        withinFlowCollection && is_FLOW_INDICATOR(following)) {\n      return false;\n    }\n  }\n\n  state.kind = 'scalar';\n  state.result = '';\n  captureStart = captureEnd = state.position;\n  hasPendingContent = false;\n\n  while (ch !== 0) {\n    if (ch === 0x3A/* : */) {\n      following = state.input.charCodeAt(state.position + 1);\n\n      if (is_WS_OR_EOL(following) ||\n          withinFlowCollection && is_FLOW_INDICATOR(following)) {\n        break;\n      }\n\n    } else if (ch === 0x23/* # */) {\n      preceding = state.input.charCodeAt(state.position - 1);\n\n      if (is_WS_OR_EOL(preceding)) {\n        break;\n      }\n\n    } else if ((state.position === state.lineStart && testDocumentSeparator(state)) ||\n               withinFlowCollection && is_FLOW_INDICATOR(ch)) {\n      break;\n\n    } else if (is_EOL(ch)) {\n      _line = state.line;\n      _lineStart = state.lineStart;\n      _lineIndent = state.lineIndent;\n      skipSeparationSpace(state, false, -1);\n\n      if (state.lineIndent >= nodeIndent) {\n        hasPendingContent = true;\n        ch = state.input.charCodeAt(state.position);\n        continue;\n      } else {\n        state.position = captureEnd;\n        state.line = _line;\n        state.lineStart = _lineStart;\n        state.lineIndent = _lineIndent;\n        break;\n      }\n    }\n\n    if (hasPendingContent) {\n      captureSegment(state, captureStart, captureEnd, false);\n      writeFoldedLines(state, state.line - _line);\n      captureStart = captureEnd = state.position;\n      hasPendingContent = false;\n    }\n\n    if (!is_WHITE_SPACE(ch)) {\n      captureEnd = state.position + 1;\n    }\n\n    ch = state.input.charCodeAt(++state.position);\n  }\n\n  captureSegment(state, captureStart, captureEnd, false);\n\n  if (state.result) {\n    return true;\n  }\n\n  state.kind = _kind;\n  state.result = _result;\n  return false;\n}\n\nfunction readSingleQuotedScalar(state, nodeIndent) {\n  var ch,\n      captureStart, captureEnd;\n\n  ch = state.input.charCodeAt(state.position);\n\n  if (ch !== 0x27/* ' */) {\n    return false;\n  }\n\n  state.kind = 'scalar';\n  state.result = '';\n  state.position++;\n  captureStart = captureEnd = state.position;\n\n  while ((ch = state.input.charCodeAt(state.position)) !== 0) {\n    if (ch === 0x27/* ' */) {\n      captureSegment(state, captureStart, state.position, true);\n      ch = state.input.charCodeAt(++state.position);\n\n      if (ch === 0x27/* ' */) {\n        captureStart = state.position;\n        state.position++;\n        captureEnd = state.position;\n      } else {\n        return true;\n      }\n\n    } else if (is_EOL(ch)) {\n      captureSegment(state, captureStart, captureEnd, true);\n      writeFoldedLines(state, skipSeparationSpace(state, false, nodeIndent));\n      captureStart = captureEnd = state.position;\n\n    } else if (state.position === state.lineStart && testDocumentSeparator(state)) {\n      throwError(state, 'unexpected end of the document within a single quoted scalar');\n\n    } else {\n      state.position++;\n      captureEnd = state.position;\n    }\n  }\n\n  throwError(state, 'unexpected end of the stream within a single quoted scalar');\n}\n\nfunction readDoubleQuotedScalar(state, nodeIndent) {\n  var captureStart,\n      captureEnd,\n      hexLength,\n      hexResult,\n      tmp,\n      ch;\n\n  ch = state.input.charCodeAt(state.position);\n\n  if (ch !== 0x22/* \" */) {\n    return false;\n  }\n\n  state.kind = 'scalar';\n  state.result = '';\n  state.position++;\n  captureStart = captureEnd = state.position;\n\n  while ((ch = state.input.charCodeAt(state.position)) !== 0) {\n    if (ch === 0x22/* \" */) {\n      captureSegment(state, captureStart, state.position, true);\n      state.position++;\n      return true;\n\n    } else if (ch === 0x5C/* \\ */) {\n      captureSegment(state, captureStart, state.position, true);\n      ch = state.input.charCodeAt(++state.position);\n\n      if (is_EOL(ch)) {\n        skipSeparationSpace(state, false, nodeIndent);\n\n        // TODO: rework to inline fn with no type cast?\n      } else if (ch < 256 && simpleEscapeCheck[ch]) {\n        state.result += simpleEscapeMap[ch];\n        state.position++;\n\n      } else if ((tmp = escapedHexLen(ch)) > 0) {\n        hexLength = tmp;\n        hexResult = 0;\n\n        for (; hexLength > 0; hexLength--) {\n          ch = state.input.charCodeAt(++state.position);\n\n          if ((tmp = fromHexCode(ch)) >= 0) {\n            hexResult = (hexResult << 4) + tmp;\n\n          } else {\n            throwError(state, 'expected hexadecimal character');\n          }\n        }\n\n        state.result += charFromCodepoint(hexResult);\n\n        state.position++;\n\n      } else {\n        throwError(state, 'unknown escape sequence');\n      }\n\n      captureStart = captureEnd = state.position;\n\n    } else if (is_EOL(ch)) {\n      captureSegment(state, captureStart, captureEnd, true);\n      writeFoldedLines(state, skipSeparationSpace(state, false, nodeIndent));\n      captureStart = captureEnd = state.position;\n\n    } else if (state.position === state.lineStart && testDocumentSeparator(state)) {\n      throwError(state, 'unexpected end of the document within a double quoted scalar');\n\n    } else {\n      state.position++;\n      captureEnd = state.position;\n    }\n  }\n\n  throwError(state, 'unexpected end of the stream within a double quoted scalar');\n}\n\nfunction readFlowCollection(state, nodeIndent) {\n  var readNext = true,\n      _line,\n      _lineStart,\n      _pos,\n      _tag     = state.tag,\n      _result,\n      _anchor  = state.anchor,\n      following,\n      terminator,\n      isPair,\n      isExplicitPair,\n      isMapping,\n      overridableKeys = Object.create(null),\n      keyNode,\n      keyTag,\n      valueNode,\n      ch;\n\n  ch = state.input.charCodeAt(state.position);\n\n  if (ch === 0x5B/* [ */) {\n    terminator = 0x5D;/* ] */\n    isMapping = false;\n    _result = [];\n  } else if (ch === 0x7B/* { */) {\n    terminator = 0x7D;/* } */\n    isMapping = true;\n    _result = {};\n  } else {\n    return false;\n  }\n\n  if (state.anchor !== null) {\n    state.anchorMap[state.anchor] = _result;\n  }\n\n  ch = state.input.charCodeAt(++state.position);\n\n  while (ch !== 0) {\n    skipSeparationSpace(state, true, nodeIndent);\n\n    ch = state.input.charCodeAt(state.position);\n\n    if (ch === terminator) {\n      state.position++;\n      state.tag = _tag;\n      state.anchor = _anchor;\n      state.kind = isMapping ? 'mapping' : 'sequence';\n      state.result = _result;\n      return true;\n    } else if (!readNext) {\n      throwError(state, 'missed comma between flow collection entries');\n    } else if (ch === 0x2C/* , */) {\n      // \"flow collection entries can never be completely empty\", as per YAML 1.2, section 7.4\n      throwError(state, \"expected the node content, but found ','\");\n    }\n\n    keyTag = keyNode = valueNode = null;\n    isPair = isExplicitPair = false;\n\n    if (ch === 0x3F/* ? */) {\n      following = state.input.charCodeAt(state.position + 1);\n\n      if (is_WS_OR_EOL(following)) {\n        isPair = isExplicitPair = true;\n        state.position++;\n        skipSeparationSpace(state, true, nodeIndent);\n      }\n    }\n\n    _line = state.line; // Save the current line.\n    _lineStart = state.lineStart;\n    _pos = state.position;\n    composeNode(state, nodeIndent, CONTEXT_FLOW_IN, false, true);\n    keyTag = state.tag;\n    keyNode = state.result;\n    skipSeparationSpace(state, true, nodeIndent);\n\n    ch = state.input.charCodeAt(state.position);\n\n    if ((isExplicitPair || state.line === _line) && ch === 0x3A/* : */) {\n      isPair = true;\n      ch = state.input.charCodeAt(++state.position);\n      skipSeparationSpace(state, true, nodeIndent);\n      composeNode(state, nodeIndent, CONTEXT_FLOW_IN, false, true);\n      valueNode = state.result;\n    }\n\n    if (isMapping) {\n      storeMappingPair(state, _result, overridableKeys, keyTag, keyNode, valueNode, _line, _lineStart, _pos);\n    } else if (isPair) {\n      _result.push(storeMappingPair(state, null, overridableKeys, keyTag, keyNode, valueNode, _line, _lineStart, _pos));\n    } else {\n      _result.push(keyNode);\n    }\n\n    skipSeparationSpace(state, true, nodeIndent);\n\n    ch = state.input.charCodeAt(state.position);\n\n    if (ch === 0x2C/* , */) {\n      readNext = true;\n      ch = state.input.charCodeAt(++state.position);\n    } else {\n      readNext = false;\n    }\n  }\n\n  throwError(state, 'unexpected end of the stream within a flow collection');\n}\n\nfunction readBlockScalar(state, nodeIndent) {\n  var captureStart,\n      folding,\n      chomping       = CHOMPING_CLIP,\n      didReadContent = false,\n      detectedIndent = false,\n      textIndent     = nodeIndent,\n      emptyLines     = 0,\n      atMoreIndented = false,\n      tmp,\n      ch;\n\n  ch = state.input.charCodeAt(state.position);\n\n  if (ch === 0x7C/* | */) {\n    folding = false;\n  } else if (ch === 0x3E/* > */) {\n    folding = true;\n  } else {\n    return false;\n  }\n\n  state.kind = 'scalar';\n  state.result = '';\n\n  while (ch !== 0) {\n    ch = state.input.charCodeAt(++state.position);\n\n    if (ch === 0x2B/* + */ || ch === 0x2D/* - */) {\n      if (CHOMPING_CLIP === chomping) {\n        chomping = (ch === 0x2B/* + */) ? CHOMPING_KEEP : CHOMPING_STRIP;\n      } else {\n        throwError(state, 'repeat of a chomping mode identifier');\n      }\n\n    } else if ((tmp = fromDecimalCode(ch)) >= 0) {\n      if (tmp === 0) {\n        throwError(state, 'bad explicit indentation width of a block scalar; it cannot be less than one');\n      } else if (!detectedIndent) {\n        textIndent = nodeIndent + tmp - 1;\n        detectedIndent = true;\n      } else {\n        throwError(state, 'repeat of an indentation width identifier');\n      }\n\n    } else {\n      break;\n    }\n  }\n\n  if (is_WHITE_SPACE(ch)) {\n    do { ch = state.input.charCodeAt(++state.position); }\n    while (is_WHITE_SPACE(ch));\n\n    if (ch === 0x23/* # */) {\n      do { ch = state.input.charCodeAt(++state.position); }\n      while (!is_EOL(ch) && (ch !== 0));\n    }\n  }\n\n  while (ch !== 0) {\n    readLineBreak(state);\n    state.lineIndent = 0;\n\n    ch = state.input.charCodeAt(state.position);\n\n    while ((!detectedIndent || state.lineIndent < textIndent) &&\n           (ch === 0x20/* Space */)) {\n      state.lineIndent++;\n      ch = state.input.charCodeAt(++state.position);\n    }\n\n    if (!detectedIndent && state.lineIndent > textIndent) {\n      textIndent = state.lineIndent;\n    }\n\n    if (is_EOL(ch)) {\n      emptyLines++;\n      continue;\n    }\n\n    // End of the scalar.\n    if (state.lineIndent < textIndent) {\n\n      // Perform the chomping.\n      if (chomping === CHOMPING_KEEP) {\n        state.result += common.repeat('\\n', didReadContent ? 1 + emptyLines : emptyLines);\n      } else if (chomping === CHOMPING_CLIP) {\n        if (didReadContent) { // i.e. only if the scalar is not empty.\n          state.result += '\\n';\n        }\n      }\n\n      // Break this `while` cycle and go to the funciton's epilogue.\n      break;\n    }\n\n    // Folded style: use fancy rules to handle line breaks.\n    if (folding) {\n\n      // Lines starting with white space characters (more-indented lines) are not folded.\n      if (is_WHITE_SPACE(ch)) {\n        atMoreIndented = true;\n        // except for the first content line (cf. Example 8.1)\n        state.result += common.repeat('\\n', didReadContent ? 1 + emptyLines : emptyLines);\n\n      // End of more-indented block.\n      } else if (atMoreIndented) {\n        atMoreIndented = false;\n        state.result += common.repeat('\\n', emptyLines + 1);\n\n      // Just one line break - perceive as the same line.\n      } else if (emptyLines === 0) {\n        if (didReadContent) { // i.e. only if we have already read some scalar content.\n          state.result += ' ';\n        }\n\n      // Several line breaks - perceive as different lines.\n      } else {\n        state.result += common.repeat('\\n', emptyLines);\n      }\n\n    // Literal style: just add exact number of line breaks between content lines.\n    } else {\n      // Keep all line breaks except the header line break.\n      state.result += common.repeat('\\n', didReadContent ? 1 + emptyLines : emptyLines);\n    }\n\n    didReadContent = true;\n    detectedIndent = true;\n    emptyLines = 0;\n    captureStart = state.position;\n\n    while (!is_EOL(ch) && (ch !== 0)) {\n      ch = state.input.charCodeAt(++state.position);\n    }\n\n    captureSegment(state, captureStart, state.position, false);\n  }\n\n  return true;\n}\n\nfunction readBlockSequence(state, nodeIndent) {\n  var _line,\n      _tag      = state.tag,\n      _anchor   = state.anchor,\n      _result   = [],\n      following,\n      detected  = false,\n      ch;\n\n  // there is a leading tab before this token, so it can't be a block sequence/mapping;\n  // it can still be flow sequence/mapping or a scalar\n  if (state.firstTabInLine !== -1) return false;\n\n  if (state.anchor !== null) {\n    state.anchorMap[state.anchor] = _result;\n  }\n\n  ch = state.input.charCodeAt(state.position);\n\n  while (ch !== 0) {\n    if (state.firstTabInLine !== -1) {\n      state.position = state.firstTabInLine;\n      throwError(state, 'tab characters must not be used in indentation');\n    }\n\n    if (ch !== 0x2D/* - */) {\n      break;\n    }\n\n    following = state.input.charCodeAt(state.position + 1);\n\n    if (!is_WS_OR_EOL(following)) {\n      break;\n    }\n\n    detected = true;\n    state.position++;\n\n    if (skipSeparationSpace(state, true, -1)) {\n      if (state.lineIndent <= nodeIndent) {\n        _result.push(null);\n        ch = state.input.charCodeAt(state.position);\n        continue;\n      }\n    }\n\n    _line = state.line;\n    composeNode(state, nodeIndent, CONTEXT_BLOCK_IN, false, true);\n    _result.push(state.result);\n    skipSeparationSpace(state, true, -1);\n\n    ch = state.input.charCodeAt(state.position);\n\n    if ((state.line === _line || state.lineIndent > nodeIndent) && (ch !== 0)) {\n      throwError(state, 'bad indentation of a sequence entry');\n    } else if (state.lineIndent < nodeIndent) {\n      break;\n    }\n  }\n\n  if (detected) {\n    state.tag = _tag;\n    state.anchor = _anchor;\n    state.kind = 'sequence';\n    state.result = _result;\n    return true;\n  }\n  return false;\n}\n\nfunction readBlockMapping(state, nodeIndent, flowIndent) {\n  var following,\n      allowCompact,\n      _line,\n      _keyLine,\n      _keyLineStart,\n      _keyPos,\n      _tag          = state.tag,\n      _anchor       = state.anchor,\n      _result       = {},\n      overridableKeys = Object.create(null),\n      keyTag        = null,\n      keyNode       = null,\n      valueNode     = null,\n      atExplicitKey = false,\n      detected      = false,\n      ch;\n\n  // there is a leading tab before this token, so it can't be a block sequence/mapping;\n  // it can still be flow sequence/mapping or a scalar\n  if (state.firstTabInLine !== -1) return false;\n\n  if (state.anchor !== null) {\n    state.anchorMap[state.anchor] = _result;\n  }\n\n  ch = state.input.charCodeAt(state.position);\n\n  while (ch !== 0) {\n    if (!atExplicitKey && state.firstTabInLine !== -1) {\n      state.position = state.firstTabInLine;\n      throwError(state, 'tab characters must not be used in indentation');\n    }\n\n    following = state.input.charCodeAt(state.position + 1);\n    _line = state.line; // Save the current line.\n\n    //\n    // Explicit notation case. There are two separate blocks:\n    // first for the key (denoted by \"?\") and second for the value (denoted by \":\")\n    //\n    if ((ch === 0x3F/* ? */ || ch === 0x3A/* : */) && is_WS_OR_EOL(following)) {\n\n      if (ch === 0x3F/* ? */) {\n        if (atExplicitKey) {\n          storeMappingPair(state, _result, overridableKeys, keyTag, keyNode, null, _keyLine, _keyLineStart, _keyPos);\n          keyTag = keyNode = valueNode = null;\n        }\n\n        detected = true;\n        atExplicitKey = true;\n        allowCompact = true;\n\n      } else if (atExplicitKey) {\n        // i.e. 0x3A/* : */ === character after the explicit key.\n        atExplicitKey = false;\n        allowCompact = true;\n\n      } else {\n        throwError(state, 'incomplete explicit mapping pair; a key node is missed; or followed by a non-tabulated empty line');\n      }\n\n      state.position += 1;\n      ch = following;\n\n    //\n    // Implicit notation case. Flow-style node as the key first, then \":\", and the value.\n    //\n    } else {\n      _keyLine = state.line;\n      _keyLineStart = state.lineStart;\n      _keyPos = state.position;\n\n      if (!composeNode(state, flowIndent, CONTEXT_FLOW_OUT, false, true)) {\n        // Neither implicit nor explicit notation.\n        // Reading is done. Go to the epilogue.\n        break;\n      }\n\n      if (state.line === _line) {\n        ch = state.input.charCodeAt(state.position);\n\n        while (is_WHITE_SPACE(ch)) {\n          ch = state.input.charCodeAt(++state.position);\n        }\n\n        if (ch === 0x3A/* : */) {\n          ch = state.input.charCodeAt(++state.position);\n\n          if (!is_WS_OR_EOL(ch)) {\n            throwError(state, 'a whitespace character is expected after the key-value separator within a block mapping');\n          }\n\n          if (atExplicitKey) {\n            storeMappingPair(state, _result, overridableKeys, keyTag, keyNode, null, _keyLine, _keyLineStart, _keyPos);\n            keyTag = keyNode = valueNode = null;\n          }\n\n          detected = true;\n          atExplicitKey = false;\n          allowCompact = false;\n          keyTag = state.tag;\n          keyNode = state.result;\n\n        } else if (detected) {\n          throwError(state, 'can not read an implicit mapping pair; a colon is missed');\n\n        } else {\n          state.tag = _tag;\n          state.anchor = _anchor;\n          return true; // Keep the result of `composeNode`.\n        }\n\n      } else if (detected) {\n        throwError(state, 'can not read a block mapping entry; a multiline key may not be an implicit key');\n\n      } else {\n        state.tag = _tag;\n        state.anchor = _anchor;\n        return true; // Keep the result of `composeNode`.\n      }\n    }\n\n    //\n    // Common reading code for both explicit and implicit notations.\n    //\n    if (state.line === _line || state.lineIndent > nodeIndent) {\n      if (atExplicitKey) {\n        _keyLine = state.line;\n        _keyLineStart = state.lineStart;\n        _keyPos = state.position;\n      }\n\n      if (composeNode(state, nodeIndent, CONTEXT_BLOCK_OUT, true, allowCompact)) {\n        if (atExplicitKey) {\n          keyNode = state.result;\n        } else {\n          valueNode = state.result;\n        }\n      }\n\n      if (!atExplicitKey) {\n        storeMappingPair(state, _result, overridableKeys, keyTag, keyNode, valueNode, _keyLine, _keyLineStart, _keyPos);\n        keyTag = keyNode = valueNode = null;\n      }\n\n      skipSeparationSpace(state, true, -1);\n      ch = state.input.charCodeAt(state.position);\n    }\n\n    if ((state.line === _line || state.lineIndent > nodeIndent) && (ch !== 0)) {\n      throwError(state, 'bad indentation of a mapping entry');\n    } else if (state.lineIndent < nodeIndent) {\n      break;\n    }\n  }\n\n  //\n  // Epilogue.\n  //\n\n  // Special case: last mapping's node contains only the key in explicit notation.\n  if (atExplicitKey) {\n    storeMappingPair(state, _result, overridableKeys, keyTag, keyNode, null, _keyLine, _keyLineStart, _keyPos);\n  }\n\n  // Expose the resulting mapping.\n  if (detected) {\n    state.tag = _tag;\n    state.anchor = _anchor;\n    state.kind = 'mapping';\n    state.result = _result;\n  }\n\n  return detected;\n}\n\nfunction readTagProperty(state) {\n  var _position,\n      isVerbatim = false,\n      isNamed    = false,\n      tagHandle,\n      tagName,\n      ch;\n\n  ch = state.input.charCodeAt(state.position);\n\n  if (ch !== 0x21/* ! */) return false;\n\n  if (state.tag !== null) {\n    throwError(state, 'duplication of a tag property');\n  }\n\n  ch = state.input.charCodeAt(++state.position);\n\n  if (ch === 0x3C/* < */) {\n    isVerbatim = true;\n    ch = state.input.charCodeAt(++state.position);\n\n  } else if (ch === 0x21/* ! */) {\n    isNamed = true;\n    tagHandle = '!!';\n    ch = state.input.charCodeAt(++state.position);\n\n  } else {\n    tagHandle = '!';\n  }\n\n  _position = state.position;\n\n  if (isVerbatim) {\n    do { ch = state.input.charCodeAt(++state.position); }\n    while (ch !== 0 && ch !== 0x3E/* > */);\n\n    if (state.position < state.length) {\n      tagName = state.input.slice(_position, state.position);\n      ch = state.input.charCodeAt(++state.position);\n    } else {\n      throwError(state, 'unexpected end of the stream within a verbatim tag');\n    }\n  } else {\n    while (ch !== 0 && !is_WS_OR_EOL(ch)) {\n\n      if (ch === 0x21/* ! */) {\n        if (!isNamed) {\n          tagHandle = state.input.slice(_position - 1, state.position + 1);\n\n          if (!PATTERN_TAG_HANDLE.test(tagHandle)) {\n            throwError(state, 'named tag handle cannot contain such characters');\n          }\n\n          isNamed = true;\n          _position = state.position + 1;\n        } else {\n          throwError(state, 'tag suffix cannot contain exclamation marks');\n        }\n      }\n\n      ch = state.input.charCodeAt(++state.position);\n    }\n\n    tagName = state.input.slice(_position, state.position);\n\n    if (PATTERN_FLOW_INDICATORS.test(tagName)) {\n      throwError(state, 'tag suffix cannot contain flow indicator characters');\n    }\n  }\n\n  if (tagName && !PATTERN_TAG_URI.test(tagName)) {\n    throwError(state, 'tag name cannot contain such characters: ' + tagName);\n  }\n\n  try {\n    tagName = decodeURIComponent(tagName);\n  } catch (err) {\n    throwError(state, 'tag name is malformed: ' + tagName);\n  }\n\n  if (isVerbatim) {\n    state.tag = tagName;\n\n  } else if (_hasOwnProperty.call(state.tagMap, tagHandle)) {\n    state.tag = state.tagMap[tagHandle] + tagName;\n\n  } else if (tagHandle === '!') {\n    state.tag = '!' + tagName;\n\n  } else if (tagHandle === '!!') {\n    state.tag = 'tag:yaml.org,2002:' + tagName;\n\n  } else {\n    throwError(state, 'undeclared tag handle \"' + tagHandle + '\"');\n  }\n\n  return true;\n}\n\nfunction readAnchorProperty(state) {\n  var _position,\n      ch;\n\n  ch = state.input.charCodeAt(state.position);\n\n  if (ch !== 0x26/* & */) return false;\n\n  if (state.anchor !== null) {\n    throwError(state, 'duplication of an anchor property');\n  }\n\n  ch = state.input.charCodeAt(++state.position);\n  _position = state.position;\n\n  while (ch !== 0 && !is_WS_OR_EOL(ch) && !is_FLOW_INDICATOR(ch)) {\n    ch = state.input.charCodeAt(++state.position);\n  }\n\n  if (state.position === _position) {\n    throwError(state, 'name of an anchor node must contain at least one character');\n  }\n\n  state.anchor = state.input.slice(_position, state.position);\n  return true;\n}\n\nfunction readAlias(state) {\n  var _position, alias,\n      ch;\n\n  ch = state.input.charCodeAt(state.position);\n\n  if (ch !== 0x2A/* * */) return false;\n\n  ch = state.input.charCodeAt(++state.position);\n  _position = state.position;\n\n  while (ch !== 0 && !is_WS_OR_EOL(ch) && !is_FLOW_INDICATOR(ch)) {\n    ch = state.input.charCodeAt(++state.position);\n  }\n\n  if (state.position === _position) {\n    throwError(state, 'name of an alias node must contain at least one character');\n  }\n\n  alias = state.input.slice(_position, state.position);\n\n  if (!_hasOwnProperty.call(state.anchorMap, alias)) {\n    throwError(state, 'unidentified alias \"' + alias + '\"');\n  }\n\n  state.result = state.anchorMap[alias];\n  skipSeparationSpace(state, true, -1);\n  return true;\n}\n\nfunction composeNode(state, parentIndent, nodeContext, allowToSeek, allowCompact) {\n  var allowBlockStyles,\n      allowBlockScalars,\n      allowBlockCollections,\n      indentStatus = 1, // 1: this>parent, 0: this=parent, -1: this<parent\n      atNewLine  = false,\n      hasContent = false,\n      typeIndex,\n      typeQuantity,\n      typeList,\n      type,\n      flowIndent,\n      blockIndent;\n\n  if (state.listener !== null) {\n    state.listener('open', state);\n  }\n\n  state.tag    = null;\n  state.anchor = null;\n  state.kind   = null;\n  state.result = null;\n\n  allowBlockStyles = allowBlockScalars = allowBlockCollections =\n    CONTEXT_BLOCK_OUT === nodeContext ||\n    CONTEXT_BLOCK_IN  === nodeContext;\n\n  if (allowToSeek) {\n    if (skipSeparationSpace(state, true, -1)) {\n      atNewLine = true;\n\n      if (state.lineIndent > parentIndent) {\n        indentStatus = 1;\n      } else if (state.lineIndent === parentIndent) {\n        indentStatus = 0;\n      } else if (state.lineIndent < parentIndent) {\n        indentStatus = -1;\n      }\n    }\n  }\n\n  if (indentStatus === 1) {\n    while (readTagProperty(state) || readAnchorProperty(state)) {\n      if (skipSeparationSpace(state, true, -1)) {\n        atNewLine = true;\n        allowBlockCollections = allowBlockStyles;\n\n        if (state.lineIndent > parentIndent) {\n          indentStatus = 1;\n        } else if (state.lineIndent === parentIndent) {\n          indentStatus = 0;\n        } else if (state.lineIndent < parentIndent) {\n          indentStatus = -1;\n        }\n      } else {\n        allowBlockCollections = false;\n      }\n    }\n  }\n\n  if (allowBlockCollections) {\n    allowBlockCollections = atNewLine || allowCompact;\n  }\n\n  if (indentStatus === 1 || CONTEXT_BLOCK_OUT === nodeContext) {\n    if (CONTEXT_FLOW_IN === nodeContext || CONTEXT_FLOW_OUT === nodeContext) {\n      flowIndent = parentIndent;\n    } else {\n      flowIndent = parentIndent + 1;\n    }\n\n    blockIndent = state.position - state.lineStart;\n\n    if (indentStatus === 1) {\n      if (allowBlockCollections &&\n          (readBlockSequence(state, blockIndent) ||\n           readBlockMapping(state, blockIndent, flowIndent)) ||\n          readFlowCollection(state, flowIndent)) {\n        hasContent = true;\n      } else {\n        if ((allowBlockScalars && readBlockScalar(state, flowIndent)) ||\n            readSingleQuotedScalar(state, flowIndent) ||\n            readDoubleQuotedScalar(state, flowIndent)) {\n          hasContent = true;\n\n        } else if (readAlias(state)) {\n          hasContent = true;\n\n          if (state.tag !== null || state.anchor !== null) {\n            throwError(state, 'alias node should not have any properties');\n          }\n\n        } else if (readPlainScalar(state, flowIndent, CONTEXT_FLOW_IN === nodeContext)) {\n          hasContent = true;\n\n          if (state.tag === null) {\n            state.tag = '?';\n          }\n        }\n\n        if (state.anchor !== null) {\n          state.anchorMap[state.anchor] = state.result;\n        }\n      }\n    } else if (indentStatus === 0) {\n      // Special case: block sequences are allowed to have same indentation level as the parent.\n      // http://www.yaml.org/spec/1.2/spec.html#id2799784\n      hasContent = allowBlockCollections && readBlockSequence(state, blockIndent);\n    }\n  }\n\n  if (state.tag === null) {\n    if (state.anchor !== null) {\n      state.anchorMap[state.anchor] = state.result;\n    }\n\n  } else if (state.tag === '?') {\n    // Implicit resolving is not allowed for non-scalar types, and '?'\n    // non-specific tag is only automatically assigned to plain scalars.\n    //\n    // We only need to check kind conformity in case user explicitly assigns '?'\n    // tag, for example like this: \"!<?> [0]\"\n    //\n    if (state.result !== null && state.kind !== 'scalar') {\n      throwError(state, 'unacceptable node kind for !<?> tag; it should be \"scalar\", not \"' + state.kind + '\"');\n    }\n\n    for (typeIndex = 0, typeQuantity = state.implicitTypes.length; typeIndex < typeQuantity; typeIndex += 1) {\n      type = state.implicitTypes[typeIndex];\n\n      if (type.resolve(state.result)) { // `state.result` updated in resolver if matched\n        state.result = type.construct(state.result);\n        state.tag = type.tag;\n        if (state.anchor !== null) {\n          state.anchorMap[state.anchor] = state.result;\n        }\n        break;\n      }\n    }\n  } else if (state.tag !== '!') {\n    if (_hasOwnProperty.call(state.typeMap[state.kind || 'fallback'], state.tag)) {\n      type = state.typeMap[state.kind || 'fallback'][state.tag];\n    } else {\n      // looking for multi type\n      type = null;\n      typeList = state.typeMap.multi[state.kind || 'fallback'];\n\n      for (typeIndex = 0, typeQuantity = typeList.length; typeIndex < typeQuantity; typeIndex += 1) {\n        if (state.tag.slice(0, typeList[typeIndex].tag.length) === typeList[typeIndex].tag) {\n          type = typeList[typeIndex];\n          break;\n        }\n      }\n    }\n\n    if (!type) {\n      throwError(state, 'unknown tag !<' + state.tag + '>');\n    }\n\n    if (state.result !== null && type.kind !== state.kind) {\n      throwError(state, 'unacceptable node kind for !<' + state.tag + '> tag; it should be \"' + type.kind + '\", not \"' + state.kind + '\"');\n    }\n\n    if (!type.resolve(state.result, state.tag)) { // `state.result` updated in resolver if matched\n      throwError(state, 'cannot resolve a node with !<' + state.tag + '> explicit tag');\n    } else {\n      state.result = type.construct(state.result, state.tag);\n      if (state.anchor !== null) {\n        state.anchorMap[state.anchor] = state.result;\n      }\n    }\n  }\n\n  if (state.listener !== null) {\n    state.listener('close', state);\n  }\n  return state.tag !== null ||  state.anchor !== null || hasContent;\n}\n\nfunction readDocument(state) {\n  var documentStart = state.position,\n      _position,\n      directiveName,\n      directiveArgs,\n      hasDirectives = false,\n      ch;\n\n  state.version = null;\n  state.checkLineBreaks = state.legacy;\n  state.tagMap = Object.create(null);\n  state.anchorMap = Object.create(null);\n\n  while ((ch = state.input.charCodeAt(state.position)) !== 0) {\n    skipSeparationSpace(state, true, -1);\n\n    ch = state.input.charCodeAt(state.position);\n\n    if (state.lineIndent > 0 || ch !== 0x25/* % */) {\n      break;\n    }\n\n    hasDirectives = true;\n    ch = state.input.charCodeAt(++state.position);\n    _position = state.position;\n\n    while (ch !== 0 && !is_WS_OR_EOL(ch)) {\n      ch = state.input.charCodeAt(++state.position);\n    }\n\n    directiveName = state.input.slice(_position, state.position);\n    directiveArgs = [];\n\n    if (directiveName.length < 1) {\n      throwError(state, 'directive name must not be less than one character in length');\n    }\n\n    while (ch !== 0) {\n      while (is_WHITE_SPACE(ch)) {\n        ch = state.input.charCodeAt(++state.position);\n      }\n\n      if (ch === 0x23/* # */) {\n        do { ch = state.input.charCodeAt(++state.position); }\n        while (ch !== 0 && !is_EOL(ch));\n        break;\n      }\n\n      if (is_EOL(ch)) break;\n\n      _position = state.position;\n\n      while (ch !== 0 && !is_WS_OR_EOL(ch)) {\n        ch = state.input.charCodeAt(++state.position);\n      }\n\n      directiveArgs.push(state.input.slice(_position, state.position));\n    }\n\n    if (ch !== 0) readLineBreak(state);\n\n    if (_hasOwnProperty.call(directiveHandlers, directiveName)) {\n      directiveHandlers[directiveName](state, directiveName, directiveArgs);\n    } else {\n      throwWarning(state, 'unknown document directive \"' + directiveName + '\"');\n    }\n  }\n\n  skipSeparationSpace(state, true, -1);\n\n  if (state.lineIndent === 0 &&\n      state.input.charCodeAt(state.position)     === 0x2D/* - */ &&\n      state.input.charCodeAt(state.position + 1) === 0x2D/* - */ &&\n      state.input.charCodeAt(state.position + 2) === 0x2D/* - */) {\n    state.position += 3;\n    skipSeparationSpace(state, true, -1);\n\n  } else if (hasDirectives) {\n    throwError(state, 'directives end mark is expected');\n  }\n\n  composeNode(state, state.lineIndent - 1, CONTEXT_BLOCK_OUT, false, true);\n  skipSeparationSpace(state, true, -1);\n\n  if (state.checkLineBreaks &&\n      PATTERN_NON_ASCII_LINE_BREAKS.test(state.input.slice(documentStart, state.position))) {\n    throwWarning(state, 'non-ASCII line breaks are interpreted as content');\n  }\n\n  state.documents.push(state.result);\n\n  if (state.position === state.lineStart && testDocumentSeparator(state)) {\n\n    if (state.input.charCodeAt(state.position) === 0x2E/* . */) {\n      state.position += 3;\n      skipSeparationSpace(state, true, -1);\n    }\n    return;\n  }\n\n  if (state.position < (state.length - 1)) {\n    throwError(state, 'end of the stream or a document separator is expected');\n  } else {\n    return;\n  }\n}\n\n\nfunction loadDocuments(input, options) {\n  input = String(input);\n  options = options || {};\n\n  if (input.length !== 0) {\n\n    // Add tailing `\\n` if not exists\n    if (input.charCodeAt(input.length - 1) !== 0x0A/* LF */ &&\n        input.charCodeAt(input.length - 1) !== 0x0D/* CR */) {\n      input += '\\n';\n    }\n\n    // Strip BOM\n    if (input.charCodeAt(0) === 0xFEFF) {\n      input = input.slice(1);\n    }\n  }\n\n  var state = new State(input, options);\n\n  var nullpos = input.indexOf('\\0');\n\n  if (nullpos !== -1) {\n    state.position = nullpos;\n    throwError(state, 'null byte is not allowed in input');\n  }\n\n  // Use 0 as string terminator. That significantly simplifies bounds check.\n  state.input += '\\0';\n\n  while (state.input.charCodeAt(state.position) === 0x20/* Space */) {\n    state.lineIndent += 1;\n    state.position += 1;\n  }\n\n  while (state.position < (state.length - 1)) {\n    readDocument(state);\n  }\n\n  return state.documents;\n}\n\n\nfunction loadAll(input, iterator, options) {\n  if (iterator !== null && typeof iterator === 'object' && typeof options === 'undefined') {\n    options = iterator;\n    iterator = null;\n  }\n\n  var documents = loadDocuments(input, options);\n\n  if (typeof iterator !== 'function') {\n    return documents;\n  }\n\n  for (var index = 0, length = documents.length; index < length; index += 1) {\n    iterator(documents[index]);\n  }\n}\n\n\nfunction load(input, options) {\n  var documents = loadDocuments(input, options);\n\n  if (documents.length === 0) {\n    /*eslint-disable no-undefined*/\n    return undefined;\n  } else if (documents.length === 1) {\n    return documents[0];\n  }\n  throw new YAMLException('expected a single document in the stream, but found more');\n}\n\n\nmodule.exports.loadAll = loadAll;\nmodule.exports.load    = load;\n","'use strict';\n\n/*eslint-disable max-len*/\n\nvar YAMLException = require('./exception');\nvar Type          = require('./type');\n\n\nfunction compileList(schema, name) {\n  var result = [];\n\n  schema[name].forEach(function (currentType) {\n    var newIndex = result.length;\n\n    result.forEach(function (previousType, previousIndex) {\n      if (previousType.tag === currentType.tag &&\n          previousType.kind === currentType.kind &&\n          previousType.multi === currentType.multi) {\n\n        newIndex = previousIndex;\n      }\n    });\n\n    result[newIndex] = currentType;\n  });\n\n  return result;\n}\n\n\nfunction compileMap(/* lists... */) {\n  var result = {\n        scalar: {},\n        sequence: {},\n        mapping: {},\n        fallback: {},\n        multi: {\n          scalar: [],\n          sequence: [],\n          mapping: [],\n          fallback: []\n        }\n      }, index, length;\n\n  function collectType(type) {\n    if (type.multi) {\n      result.multi[type.kind].push(type);\n      result.multi['fallback'].push(type);\n    } else {\n      result[type.kind][type.tag] = result['fallback'][type.tag] = type;\n    }\n  }\n\n  for (index = 0, length = arguments.length; index < length; index += 1) {\n    arguments[index].forEach(collectType);\n  }\n  return result;\n}\n\n\nfunction Schema(definition) {\n  return this.extend(definition);\n}\n\n\nSchema.prototype.extend = function extend(definition) {\n  var implicit = [];\n  var explicit = [];\n\n  if (definition instanceof Type) {\n    // Schema.extend(type)\n    explicit.push(definition);\n\n  } else if (Array.isArray(definition)) {\n    // Schema.extend([ type1, type2, ... ])\n    explicit = explicit.concat(definition);\n\n  } else if (definition && (Array.isArray(definition.implicit) || Array.isArray(definition.explicit))) {\n    // Schema.extend({ explicit: [ type1, type2, ... ], implicit: [ type1, type2, ... ] })\n    if (definition.implicit) implicit = implicit.concat(definition.implicit);\n    if (definition.explicit) explicit = explicit.concat(definition.explicit);\n\n  } else {\n    throw new YAMLException('Schema.extend argument should be a Type, [ Type ], ' +\n      'or a schema definition ({ implicit: [...], explicit: [...] })');\n  }\n\n  implicit.forEach(function (type) {\n    if (!(type instanceof Type)) {\n      throw new YAMLException('Specified list of YAML types (or a single Type object) contains a non-Type object.');\n    }\n\n    if (type.loadKind && type.loadKind !== 'scalar') {\n      throw new YAMLException('There is a non-scalar type in the implicit list of a schema. Implicit resolving of such types is not supported.');\n    }\n\n    if (type.multi) {\n      throw new YAMLException('There is a multi type in the implicit list of a schema. Multi tags can only be listed as explicit.');\n    }\n  });\n\n  explicit.forEach(function (type) {\n    if (!(type instanceof Type)) {\n      throw new YAMLException('Specified list of YAML types (or a single Type object) contains a non-Type object.');\n    }\n  });\n\n  var result = Object.create(Schema.prototype);\n\n  result.implicit = (this.implicit || []).concat(implicit);\n  result.explicit = (this.explicit || []).concat(explicit);\n\n  result.compiledImplicit = compileList(result, 'implicit');\n  result.compiledExplicit = compileList(result, 'explicit');\n  result.compiledTypeMap  = compileMap(result.compiledImplicit, result.compiledExplicit);\n\n  return result;\n};\n\n\nmodule.exports = Schema;\n","// Standard YAML's Core schema.\n// http://www.yaml.org/spec/1.2/spec.html#id2804923\n//\n// NOTE: JS-YAML does not support schema-specific tag resolution restrictions.\n// So, Core schema has no distinctions from JSON schema is JS-YAML.\n\n\n'use strict';\n\n\nmodule.exports = require('./json');\n","// JS-YAML's default schema for `safeLoad` function.\n// It is not described in the YAML specification.\n//\n// This schema is based on standard YAML's Core schema and includes most of\n// extra types described at YAML tag repository. (http://yaml.org/type/)\n\n\n'use strict';\n\n\nmodule.exports = require('./core').extend({\n  implicit: [\n    require('../type/timestamp'),\n    require('../type/merge')\n  ],\n  explicit: [\n    require('../type/binary'),\n    require('../type/omap'),\n    require('../type/pairs'),\n    require('../type/set')\n  ]\n});\n","// Standard YAML's Failsafe schema.\n// http://www.yaml.org/spec/1.2/spec.html#id2802346\n\n\n'use strict';\n\n\nvar Schema = require('../schema');\n\n\nmodule.exports = new Schema({\n  explicit: [\n    require('../type/str'),\n    require('../type/seq'),\n    require('../type/map')\n  ]\n});\n","// Standard YAML's JSON schema.\n// http://www.yaml.org/spec/1.2/spec.html#id2803231\n//\n// NOTE: JS-YAML does not support schema-specific tag resolution restrictions.\n// So, this schema is not such strict as defined in the YAML specification.\n// It allows numbers in binary notaion, use `Null` and `NULL` as `null`, etc.\n\n\n'use strict';\n\n\nmodule.exports = require('./failsafe').extend({\n  implicit: [\n    require('../type/null'),\n    require('../type/bool'),\n    require('../type/int'),\n    require('../type/float')\n  ]\n});\n","'use strict';\n\n\nvar common = require('./common');\n\n\n// get snippet for a single line, respecting maxLength\nfunction getLine(buffer, lineStart, lineEnd, position, maxLineLength) {\n  var head = '';\n  var tail = '';\n  var maxHalfLength = Math.floor(maxLineLength / 2) - 1;\n\n  if (position - lineStart > maxHalfLength) {\n    head = ' ... ';\n    lineStart = position - maxHalfLength + head.length;\n  }\n\n  if (lineEnd - position > maxHalfLength) {\n    tail = ' ...';\n    lineEnd = position + maxHalfLength - tail.length;\n  }\n\n  return {\n    str: head + buffer.slice(lineStart, lineEnd).replace(/\\t/g, '→') + tail,\n    pos: position - lineStart + head.length // relative position\n  };\n}\n\n\nfunction padStart(string, max) {\n  return common.repeat(' ', max - string.length) + string;\n}\n\n\nfunction makeSnippet(mark, options) {\n  options = Object.create(options || null);\n\n  if (!mark.buffer) return null;\n\n  if (!options.maxLength) options.maxLength = 79;\n  if (typeof options.indent      !== 'number') options.indent      = 1;\n  if (typeof options.linesBefore !== 'number') options.linesBefore = 3;\n  if (typeof options.linesAfter  !== 'number') options.linesAfter  = 2;\n\n  var re = /\\r?\\n|\\r|\\0/g;\n  var lineStarts = [ 0 ];\n  var lineEnds = [];\n  var match;\n  var foundLineNo = -1;\n\n  while ((match = re.exec(mark.buffer))) {\n    lineEnds.push(match.index);\n    lineStarts.push(match.index + match[0].length);\n\n    if (mark.position <= match.index && foundLineNo < 0) {\n      foundLineNo = lineStarts.length - 2;\n    }\n  }\n\n  if (foundLineNo < 0) foundLineNo = lineStarts.length - 1;\n\n  var result = '', i, line;\n  var lineNoLength = Math.min(mark.line + options.linesAfter, lineEnds.length).toString().length;\n  var maxLineLength = options.maxLength - (options.indent + lineNoLength + 3);\n\n  for (i = 1; i <= options.linesBefore; i++) {\n    if (foundLineNo - i < 0) break;\n    line = getLine(\n      mark.buffer,\n      lineStarts[foundLineNo - i],\n      lineEnds[foundLineNo - i],\n      mark.position - (lineStarts[foundLineNo] - lineStarts[foundLineNo - i]),\n      maxLineLength\n    );\n    result = common.repeat(' ', options.indent) + padStart((mark.line - i + 1).toString(), lineNoLength) +\n      ' | ' + line.str + '\\n' + result;\n  }\n\n  line = getLine(mark.buffer, lineStarts[foundLineNo], lineEnds[foundLineNo], mark.position, maxLineLength);\n  result += common.repeat(' ', options.indent) + padStart((mark.line + 1).toString(), lineNoLength) +\n    ' | ' + line.str + '\\n';\n  result += common.repeat('-', options.indent + lineNoLength + 3 + line.pos) + '^' + '\\n';\n\n  for (i = 1; i <= options.linesAfter; i++) {\n    if (foundLineNo + i >= lineEnds.length) break;\n    line = getLine(\n      mark.buffer,\n      lineStarts[foundLineNo + i],\n      lineEnds[foundLineNo + i],\n      mark.position - (lineStarts[foundLineNo] - lineStarts[foundLineNo + i]),\n      maxLineLength\n    );\n    result += common.repeat(' ', options.indent) + padStart((mark.line + i + 1).toString(), lineNoLength) +\n      ' | ' + line.str + '\\n';\n  }\n\n  return result.replace(/\\n$/, '');\n}\n\n\nmodule.exports = makeSnippet;\n","'use strict';\n\nvar YAMLException = require('./exception');\n\nvar TYPE_CONSTRUCTOR_OPTIONS = [\n  'kind',\n  'multi',\n  'resolve',\n  'construct',\n  'instanceOf',\n  'predicate',\n  'represent',\n  'representName',\n  'defaultStyle',\n  'styleAliases'\n];\n\nvar YAML_NODE_KINDS = [\n  'scalar',\n  'sequence',\n  'mapping'\n];\n\nfunction compileStyleAliases(map) {\n  var result = {};\n\n  if (map !== null) {\n    Object.keys(map).forEach(function (style) {\n      map[style].forEach(function (alias) {\n        result[String(alias)] = style;\n      });\n    });\n  }\n\n  return result;\n}\n\nfunction Type(tag, options) {\n  options = options || {};\n\n  Object.keys(options).forEach(function (name) {\n    if (TYPE_CONSTRUCTOR_OPTIONS.indexOf(name) === -1) {\n      throw new YAMLException('Unknown option \"' + name + '\" is met in definition of \"' + tag + '\" YAML type.');\n    }\n  });\n\n  // TODO: Add tag format check.\n  this.options       = options; // keep original options in case user wants to extend this type later\n  this.tag           = tag;\n  this.kind          = options['kind']          || null;\n  this.resolve       = options['resolve']       || function () { return true; };\n  this.construct     = options['construct']     || function (data) { return data; };\n  this.instanceOf    = options['instanceOf']    || null;\n  this.predicate     = options['predicate']     || null;\n  this.represent     = options['represent']     || null;\n  this.representName = options['representName'] || null;\n  this.defaultStyle  = options['defaultStyle']  || null;\n  this.multi         = options['multi']         || false;\n  this.styleAliases  = compileStyleAliases(options['styleAliases'] || null);\n\n  if (YAML_NODE_KINDS.indexOf(this.kind) === -1) {\n    throw new YAMLException('Unknown kind \"' + this.kind + '\" is specified for \"' + tag + '\" YAML type.');\n  }\n}\n\nmodule.exports = Type;\n","'use strict';\n\n/*eslint-disable no-bitwise*/\n\n\nvar Type = require('../type');\n\n\n// [ 64, 65, 66 ] -> [ padding, CR, LF ]\nvar BASE64_MAP = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\\n\\r';\n\n\nfunction resolveYamlBinary(data) {\n  if (data === null) return false;\n\n  var code, idx, bitlen = 0, max = data.length, map = BASE64_MAP;\n\n  // Convert one by one.\n  for (idx = 0; idx < max; idx++) {\n    code = map.indexOf(data.charAt(idx));\n\n    // Skip CR/LF\n    if (code > 64) continue;\n\n    // Fail on illegal characters\n    if (code < 0) return false;\n\n    bitlen += 6;\n  }\n\n  // If there are any bits left, source was corrupted\n  return (bitlen % 8) === 0;\n}\n\nfunction constructYamlBinary(data) {\n  var idx, tailbits,\n      input = data.replace(/[\\r\\n=]/g, ''), // remove CR/LF & padding to simplify scan\n      max = input.length,\n      map = BASE64_MAP,\n      bits = 0,\n      result = [];\n\n  // Collect by 6*4 bits (3 bytes)\n\n  for (idx = 0; idx < max; idx++) {\n    if ((idx % 4 === 0) && idx) {\n      result.push((bits >> 16) & 0xFF);\n      result.push((bits >> 8) & 0xFF);\n      result.push(bits & 0xFF);\n    }\n\n    bits = (bits << 6) | map.indexOf(input.charAt(idx));\n  }\n\n  // Dump tail\n\n  tailbits = (max % 4) * 6;\n\n  if (tailbits === 0) {\n    result.push((bits >> 16) & 0xFF);\n    result.push((bits >> 8) & 0xFF);\n    result.push(bits & 0xFF);\n  } else if (tailbits === 18) {\n    result.push((bits >> 10) & 0xFF);\n    result.push((bits >> 2) & 0xFF);\n  } else if (tailbits === 12) {\n    result.push((bits >> 4) & 0xFF);\n  }\n\n  return new Uint8Array(result);\n}\n\nfunction representYamlBinary(object /*, style*/) {\n  var result = '', bits = 0, idx, tail,\n      max = object.length,\n      map = BASE64_MAP;\n\n  // Convert every three bytes to 4 ASCII characters.\n\n  for (idx = 0; idx < max; idx++) {\n    if ((idx % 3 === 0) && idx) {\n      result += map[(bits >> 18) & 0x3F];\n      result += map[(bits >> 12) & 0x3F];\n      result += map[(bits >> 6) & 0x3F];\n      result += map[bits & 0x3F];\n    }\n\n    bits = (bits << 8) + object[idx];\n  }\n\n  // Dump tail\n\n  tail = max % 3;\n\n  if (tail === 0) {\n    result += map[(bits >> 18) & 0x3F];\n    result += map[(bits >> 12) & 0x3F];\n    result += map[(bits >> 6) & 0x3F];\n    result += map[bits & 0x3F];\n  } else if (tail === 2) {\n    result += map[(bits >> 10) & 0x3F];\n    result += map[(bits >> 4) & 0x3F];\n    result += map[(bits << 2) & 0x3F];\n    result += map[64];\n  } else if (tail === 1) {\n    result += map[(bits >> 2) & 0x3F];\n    result += map[(bits << 4) & 0x3F];\n    result += map[64];\n    result += map[64];\n  }\n\n  return result;\n}\n\nfunction isBinary(obj) {\n  return Object.prototype.toString.call(obj) ===  '[object Uint8Array]';\n}\n\nmodule.exports = new Type('tag:yaml.org,2002:binary', {\n  kind: 'scalar',\n  resolve: resolveYamlBinary,\n  construct: constructYamlBinary,\n  predicate: isBinary,\n  represent: representYamlBinary\n});\n","'use strict';\n\nvar Type = require('../type');\n\nfunction resolveYamlBoolean(data) {\n  if (data === null) return false;\n\n  var max = data.length;\n\n  return (max === 4 && (data === 'true' || data === 'True' || data === 'TRUE')) ||\n         (max === 5 && (data === 'false' || data === 'False' || data === 'FALSE'));\n}\n\nfunction constructYamlBoolean(data) {\n  return data === 'true' ||\n         data === 'True' ||\n         data === 'TRUE';\n}\n\nfunction isBoolean(object) {\n  return Object.prototype.toString.call(object) === '[object Boolean]';\n}\n\nmodule.exports = new Type('tag:yaml.org,2002:bool', {\n  kind: 'scalar',\n  resolve: resolveYamlBoolean,\n  construct: constructYamlBoolean,\n  predicate: isBoolean,\n  represent: {\n    lowercase: function (object) { return object ? 'true' : 'false'; },\n    uppercase: function (object) { return object ? 'TRUE' : 'FALSE'; },\n    camelcase: function (object) { return object ? 'True' : 'False'; }\n  },\n  defaultStyle: 'lowercase'\n});\n","'use strict';\n\nvar common = require('../common');\nvar Type   = require('../type');\n\nvar YAML_FLOAT_PATTERN = new RegExp(\n  // 2.5e4, 2.5 and integers\n  '^(?:[-+]?(?:[0-9][0-9_]*)(?:\\\\.[0-9_]*)?(?:[eE][-+]?[0-9]+)?' +\n  // .2e4, .2\n  // special case, seems not from spec\n  '|\\\\.[0-9_]+(?:[eE][-+]?[0-9]+)?' +\n  // .inf\n  '|[-+]?\\\\.(?:inf|Inf|INF)' +\n  // .nan\n  '|\\\\.(?:nan|NaN|NAN))$');\n\nfunction resolveYamlFloat(data) {\n  if (data === null) return false;\n\n  if (!YAML_FLOAT_PATTERN.test(data) ||\n      // Quick hack to not allow integers end with `_`\n      // Probably should update regexp & check speed\n      data[data.length - 1] === '_') {\n    return false;\n  }\n\n  return true;\n}\n\nfunction constructYamlFloat(data) {\n  var value, sign;\n\n  value  = data.replace(/_/g, '').toLowerCase();\n  sign   = value[0] === '-' ? -1 : 1;\n\n  if ('+-'.indexOf(value[0]) >= 0) {\n    value = value.slice(1);\n  }\n\n  if (value === '.inf') {\n    return (sign === 1) ? Number.POSITIVE_INFINITY : Number.NEGATIVE_INFINITY;\n\n  } else if (value === '.nan') {\n    return NaN;\n  }\n  return sign * parseFloat(value, 10);\n}\n\n\nvar SCIENTIFIC_WITHOUT_DOT = /^[-+]?[0-9]+e/;\n\nfunction representYamlFloat(object, style) {\n  var res;\n\n  if (isNaN(object)) {\n    switch (style) {\n      case 'lowercase': return '.nan';\n      case 'uppercase': return '.NAN';\n      case 'camelcase': return '.NaN';\n    }\n  } else if (Number.POSITIVE_INFINITY === object) {\n    switch (style) {\n      case 'lowercase': return '.inf';\n      case 'uppercase': return '.INF';\n      case 'camelcase': return '.Inf';\n    }\n  } else if (Number.NEGATIVE_INFINITY === object) {\n    switch (style) {\n      case 'lowercase': return '-.inf';\n      case 'uppercase': return '-.INF';\n      case 'camelcase': return '-.Inf';\n    }\n  } else if (common.isNegativeZero(object)) {\n    return '-0.0';\n  }\n\n  res = object.toString(10);\n\n  // JS stringifier can build scientific format without dots: 5e-100,\n  // while YAML requres dot: 5.e-100. Fix it with simple hack\n\n  return SCIENTIFIC_WITHOUT_DOT.test(res) ? res.replace('e', '.e') : res;\n}\n\nfunction isFloat(object) {\n  return (Object.prototype.toString.call(object) === '[object Number]') &&\n         (object % 1 !== 0 || common.isNegativeZero(object));\n}\n\nmodule.exports = new Type('tag:yaml.org,2002:float', {\n  kind: 'scalar',\n  resolve: resolveYamlFloat,\n  construct: constructYamlFloat,\n  predicate: isFloat,\n  represent: representYamlFloat,\n  defaultStyle: 'lowercase'\n});\n","'use strict';\n\nvar common = require('../common');\nvar Type   = require('../type');\n\nfunction isHexCode(c) {\n  return ((0x30/* 0 */ <= c) && (c <= 0x39/* 9 */)) ||\n         ((0x41/* A */ <= c) && (c <= 0x46/* F */)) ||\n         ((0x61/* a */ <= c) && (c <= 0x66/* f */));\n}\n\nfunction isOctCode(c) {\n  return ((0x30/* 0 */ <= c) && (c <= 0x37/* 7 */));\n}\n\nfunction isDecCode(c) {\n  return ((0x30/* 0 */ <= c) && (c <= 0x39/* 9 */));\n}\n\nfunction resolveYamlInteger(data) {\n  if (data === null) return false;\n\n  var max = data.length,\n      index = 0,\n      hasDigits = false,\n      ch;\n\n  if (!max) return false;\n\n  ch = data[index];\n\n  // sign\n  if (ch === '-' || ch === '+') {\n    ch = data[++index];\n  }\n\n  if (ch === '0') {\n    // 0\n    if (index + 1 === max) return true;\n    ch = data[++index];\n\n    // base 2, base 8, base 16\n\n    if (ch === 'b') {\n      // base 2\n      index++;\n\n      for (; index < max; index++) {\n        ch = data[index];\n        if (ch === '_') continue;\n        if (ch !== '0' && ch !== '1') return false;\n        hasDigits = true;\n      }\n      return hasDigits && ch !== '_';\n    }\n\n\n    if (ch === 'x') {\n      // base 16\n      index++;\n\n      for (; index < max; index++) {\n        ch = data[index];\n        if (ch === '_') continue;\n        if (!isHexCode(data.charCodeAt(index))) return false;\n        hasDigits = true;\n      }\n      return hasDigits && ch !== '_';\n    }\n\n\n    if (ch === 'o') {\n      // base 8\n      index++;\n\n      for (; index < max; index++) {\n        ch = data[index];\n        if (ch === '_') continue;\n        if (!isOctCode(data.charCodeAt(index))) return false;\n        hasDigits = true;\n      }\n      return hasDigits && ch !== '_';\n    }\n  }\n\n  // base 10 (except 0)\n\n  // value should not start with `_`;\n  if (ch === '_') return false;\n\n  for (; index < max; index++) {\n    ch = data[index];\n    if (ch === '_') continue;\n    if (!isDecCode(data.charCodeAt(index))) {\n      return false;\n    }\n    hasDigits = true;\n  }\n\n  // Should have digits and should not end with `_`\n  if (!hasDigits || ch === '_') return false;\n\n  return true;\n}\n\nfunction constructYamlInteger(data) {\n  var value = data, sign = 1, ch;\n\n  if (value.indexOf('_') !== -1) {\n    value = value.replace(/_/g, '');\n  }\n\n  ch = value[0];\n\n  if (ch === '-' || ch === '+') {\n    if (ch === '-') sign = -1;\n    value = value.slice(1);\n    ch = value[0];\n  }\n\n  if (value === '0') return 0;\n\n  if (ch === '0') {\n    if (value[1] === 'b') return sign * parseInt(value.slice(2), 2);\n    if (value[1] === 'x') return sign * parseInt(value.slice(2), 16);\n    if (value[1] === 'o') return sign * parseInt(value.slice(2), 8);\n  }\n\n  return sign * parseInt(value, 10);\n}\n\nfunction isInteger(object) {\n  return (Object.prototype.toString.call(object)) === '[object Number]' &&\n         (object % 1 === 0 && !common.isNegativeZero(object));\n}\n\nmodule.exports = new Type('tag:yaml.org,2002:int', {\n  kind: 'scalar',\n  resolve: resolveYamlInteger,\n  construct: constructYamlInteger,\n  predicate: isInteger,\n  represent: {\n    binary:      function (obj) { return obj >= 0 ? '0b' + obj.toString(2) : '-0b' + obj.toString(2).slice(1); },\n    octal:       function (obj) { return obj >= 0 ? '0o'  + obj.toString(8) : '-0o'  + obj.toString(8).slice(1); },\n    decimal:     function (obj) { return obj.toString(10); },\n    /* eslint-disable max-len */\n    hexadecimal: function (obj) { return obj >= 0 ? '0x' + obj.toString(16).toUpperCase() :  '-0x' + obj.toString(16).toUpperCase().slice(1); }\n  },\n  defaultStyle: 'decimal',\n  styleAliases: {\n    binary:      [ 2,  'bin' ],\n    octal:       [ 8,  'oct' ],\n    decimal:     [ 10, 'dec' ],\n    hexadecimal: [ 16, 'hex' ]\n  }\n});\n","'use strict';\n\nvar Type = require('../type');\n\nmodule.exports = new Type('tag:yaml.org,2002:map', {\n  kind: 'mapping',\n  construct: function (data) { return data !== null ? data : {}; }\n});\n","'use strict';\n\nvar Type = require('../type');\n\nfunction resolveYamlMerge(data) {\n  return data === '<<' || data === null;\n}\n\nmodule.exports = new Type('tag:yaml.org,2002:merge', {\n  kind: 'scalar',\n  resolve: resolveYamlMerge\n});\n","'use strict';\n\nvar Type = require('../type');\n\nfunction resolveYamlNull(data) {\n  if (data === null) return true;\n\n  var max = data.length;\n\n  return (max === 1 && data === '~') ||\n         (max === 4 && (data === 'null' || data === 'Null' || data === 'NULL'));\n}\n\nfunction constructYamlNull() {\n  return null;\n}\n\nfunction isNull(object) {\n  return object === null;\n}\n\nmodule.exports = new Type('tag:yaml.org,2002:null', {\n  kind: 'scalar',\n  resolve: resolveYamlNull,\n  construct: constructYamlNull,\n  predicate: isNull,\n  represent: {\n    canonical: function () { return '~';    },\n    lowercase: function () { return 'null'; },\n    uppercase: function () { return 'NULL'; },\n    camelcase: function () { return 'Null'; },\n    empty:     function () { return '';     }\n  },\n  defaultStyle: 'lowercase'\n});\n","'use strict';\n\nvar Type = require('../type');\n\nvar _hasOwnProperty = Object.prototype.hasOwnProperty;\nvar _toString       = Object.prototype.toString;\n\nfunction resolveYamlOmap(data) {\n  if (data === null) return true;\n\n  var objectKeys = [], index, length, pair, pairKey, pairHasKey,\n      object = data;\n\n  for (index = 0, length = object.length; index < length; index += 1) {\n    pair = object[index];\n    pairHasKey = false;\n\n    if (_toString.call(pair) !== '[object Object]') return false;\n\n    for (pairKey in pair) {\n      if (_hasOwnProperty.call(pair, pairKey)) {\n        if (!pairHasKey) pairHasKey = true;\n        else return false;\n      }\n    }\n\n    if (!pairHasKey) return false;\n\n    if (objectKeys.indexOf(pairKey) === -1) objectKeys.push(pairKey);\n    else return false;\n  }\n\n  return true;\n}\n\nfunction constructYamlOmap(data) {\n  return data !== null ? data : [];\n}\n\nmodule.exports = new Type('tag:yaml.org,2002:omap', {\n  kind: 'sequence',\n  resolve: resolveYamlOmap,\n  construct: constructYamlOmap\n});\n","'use strict';\n\nvar Type = require('../type');\n\nvar _toString = Object.prototype.toString;\n\nfunction resolveYamlPairs(data) {\n  if (data === null) return true;\n\n  var index, length, pair, keys, result,\n      object = data;\n\n  result = new Array(object.length);\n\n  for (index = 0, length = object.length; index < length; index += 1) {\n    pair = object[index];\n\n    if (_toString.call(pair) !== '[object Object]') return false;\n\n    keys = Object.keys(pair);\n\n    if (keys.length !== 1) return false;\n\n    result[index] = [ keys[0], pair[keys[0]] ];\n  }\n\n  return true;\n}\n\nfunction constructYamlPairs(data) {\n  if (data === null) return [];\n\n  var index, length, pair, keys, result,\n      object = data;\n\n  result = new Array(object.length);\n\n  for (index = 0, length = object.length; index < length; index += 1) {\n    pair = object[index];\n\n    keys = Object.keys(pair);\n\n    result[index] = [ keys[0], pair[keys[0]] ];\n  }\n\n  return result;\n}\n\nmodule.exports = new Type('tag:yaml.org,2002:pairs', {\n  kind: 'sequence',\n  resolve: resolveYamlPairs,\n  construct: constructYamlPairs\n});\n","'use strict';\n\nvar Type = require('../type');\n\nmodule.exports = new Type('tag:yaml.org,2002:seq', {\n  kind: 'sequence',\n  construct: function (data) { return data !== null ? data : []; }\n});\n","'use strict';\n\nvar Type = require('../type');\n\nvar _hasOwnProperty = Object.prototype.hasOwnProperty;\n\nfunction resolveYamlSet(data) {\n  if (data === null) return true;\n\n  var key, object = data;\n\n  for (key in object) {\n    if (_hasOwnProperty.call(object, key)) {\n      if (object[key] !== null) return false;\n    }\n  }\n\n  return true;\n}\n\nfunction constructYamlSet(data) {\n  return data !== null ? data : {};\n}\n\nmodule.exports = new Type('tag:yaml.org,2002:set', {\n  kind: 'mapping',\n  resolve: resolveYamlSet,\n  construct: constructYamlSet\n});\n","'use strict';\n\nvar Type = require('../type');\n\nmodule.exports = new Type('tag:yaml.org,2002:str', {\n  kind: 'scalar',\n  construct: function (data) { return data !== null ? data : ''; }\n});\n","'use strict';\n\nvar Type = require('../type');\n\nvar YAML_DATE_REGEXP = new RegExp(\n  '^([0-9][0-9][0-9][0-9])'          + // [1] year\n  '-([0-9][0-9])'                    + // [2] month\n  '-([0-9][0-9])$');                   // [3] day\n\nvar YAML_TIMESTAMP_REGEXP = new RegExp(\n  '^([0-9][0-9][0-9][0-9])'          + // [1] year\n  '-([0-9][0-9]?)'                   + // [2] month\n  '-([0-9][0-9]?)'                   + // [3] day\n  '(?:[Tt]|[ \\\\t]+)'                 + // ...\n  '([0-9][0-9]?)'                    + // [4] hour\n  ':([0-9][0-9])'                    + // [5] minute\n  ':([0-9][0-9])'                    + // [6] second\n  '(?:\\\\.([0-9]*))?'                 + // [7] fraction\n  '(?:[ \\\\t]*(Z|([-+])([0-9][0-9]?)' + // [8] tz [9] tz_sign [10] tz_hour\n  '(?::([0-9][0-9]))?))?$');           // [11] tz_minute\n\nfunction resolveYamlTimestamp(data) {\n  if (data === null) return false;\n  if (YAML_DATE_REGEXP.exec(data) !== null) return true;\n  if (YAML_TIMESTAMP_REGEXP.exec(data) !== null) return true;\n  return false;\n}\n\nfunction constructYamlTimestamp(data) {\n  var match, year, month, day, hour, minute, second, fraction = 0,\n      delta = null, tz_hour, tz_minute, date;\n\n  match = YAML_DATE_REGEXP.exec(data);\n  if (match === null) match = YAML_TIMESTAMP_REGEXP.exec(data);\n\n  if (match === null) throw new Error('Date resolve error');\n\n  // match: [1] year [2] month [3] day\n\n  year = +(match[1]);\n  month = +(match[2]) - 1; // JS month starts with 0\n  day = +(match[3]);\n\n  if (!match[4]) { // no hour\n    return new Date(Date.UTC(year, month, day));\n  }\n\n  // match: [4] hour [5] minute [6] second [7] fraction\n\n  hour = +(match[4]);\n  minute = +(match[5]);\n  second = +(match[6]);\n\n  if (match[7]) {\n    fraction = match[7].slice(0, 3);\n    while (fraction.length < 3) { // milli-seconds\n      fraction += '0';\n    }\n    fraction = +fraction;\n  }\n\n  // match: [8] tz [9] tz_sign [10] tz_hour [11] tz_minute\n\n  if (match[9]) {\n    tz_hour = +(match[10]);\n    tz_minute = +(match[11] || 0);\n    delta = (tz_hour * 60 + tz_minute) * 60000; // delta in mili-seconds\n    if (match[9] === '-') delta = -delta;\n  }\n\n  date = new Date(Date.UTC(year, month, day, hour, minute, second, fraction));\n\n  if (delta) date.setTime(date.getTime() - delta);\n\n  return date;\n}\n\nfunction representYamlTimestamp(object /*, style*/) {\n  return object.toISOString();\n}\n\nmodule.exports = new Type('tag:yaml.org,2002:timestamp', {\n  kind: 'scalar',\n  resolve: resolveYamlTimestamp,\n  construct: constructYamlTimestamp,\n  instanceOf: Date,\n  represent: representYamlTimestamp\n});\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global global, define, System, Reflect, Promise */\r\nvar __extends;\r\nvar __assign;\r\nvar __rest;\r\nvar __decorate;\r\nvar __param;\r\nvar __metadata;\r\nvar __awaiter;\r\nvar __generator;\r\nvar __exportStar;\r\nvar __values;\r\nvar __read;\r\nvar __spread;\r\nvar __spreadArrays;\r\nvar __spreadArray;\r\nvar __await;\r\nvar __asyncGenerator;\r\nvar __asyncDelegator;\r\nvar __asyncValues;\r\nvar __makeTemplateObject;\r\nvar __importStar;\r\nvar __importDefault;\r\nvar __classPrivateFieldGet;\r\nvar __classPrivateFieldSet;\r\nvar __createBinding;\r\n(function (factory) {\r\n    var root = typeof global === \"object\" ? global : typeof self === \"object\" ? self : typeof this === \"object\" ? this : {};\r\n    if (typeof define === \"function\" && define.amd) {\r\n        define(\"tslib\", [\"exports\"], function (exports) { factory(createExporter(root, createExporter(exports))); });\r\n    }\r\n    else if (typeof module === \"object\" && typeof module.exports === \"object\") {\r\n        factory(createExporter(root, createExporter(module.exports)));\r\n    }\r\n    else {\r\n        factory(createExporter(root));\r\n    }\r\n    function createExporter(exports, previous) {\r\n        if (exports !== root) {\r\n            if (typeof Object.create === \"function\") {\r\n                Object.defineProperty(exports, \"__esModule\", { value: true });\r\n            }\r\n            else {\r\n                exports.__esModule = true;\r\n            }\r\n        }\r\n        return function (id, v) { return exports[id] = previous ? previous(id, v) : v; };\r\n    }\r\n})\r\n(function (exporter) {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n\r\n    __extends = function (d, b) {\r\n        if (typeof b !== \"function\" && b !== null)\r\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n\r\n    __assign = Object.assign || function (t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    };\r\n\r\n    __rest = function (s, e) {\r\n        var t = {};\r\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n            t[p] = s[p];\r\n        if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n            for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n                if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                    t[p[i]] = s[p[i]];\r\n            }\r\n        return t;\r\n    };\r\n\r\n    __decorate = function (decorators, target, key, desc) {\r\n        var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n        if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n        else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n        return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n    };\r\n\r\n    __param = function (paramIndex, decorator) {\r\n        return function (target, key) { decorator(target, key, paramIndex); }\r\n    };\r\n\r\n    __metadata = function (metadataKey, metadataValue) {\r\n        if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n    };\r\n\r\n    __awaiter = function (thisArg, _arguments, P, generator) {\r\n        function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n        return new (P || (P = Promise))(function (resolve, reject) {\r\n            function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n            function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n            function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n            step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n        });\r\n    };\r\n\r\n    __generator = function (thisArg, body) {\r\n        var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n        return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n        function verb(n) { return function (v) { return step([n, v]); }; }\r\n        function step(op) {\r\n            if (f) throw new TypeError(\"Generator is already executing.\");\r\n            while (_) try {\r\n                if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n                if (y = 0, t) op = [op[0] & 2, t.value];\r\n                switch (op[0]) {\r\n                    case 0: case 1: t = op; break;\r\n                    case 4: _.label++; return { value: op[1], done: false };\r\n                    case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                    case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                    default:\r\n                        if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                        if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                        if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                        if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                        if (t[2]) _.ops.pop();\r\n                        _.trys.pop(); continue;\r\n                }\r\n                op = body.call(thisArg, _);\r\n            } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n            if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n        }\r\n    };\r\n\r\n    __exportStar = function(m, o) {\r\n        for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n    };\r\n\r\n    __createBinding = Object.create ? (function(o, m, k, k2) {\r\n        if (k2 === undefined) k2 = k;\r\n        Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n    }) : (function(o, m, k, k2) {\r\n        if (k2 === undefined) k2 = k;\r\n        o[k2] = m[k];\r\n    });\r\n\r\n    __values = function (o) {\r\n        var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n        if (m) return m.call(o);\r\n        if (o && typeof o.length === \"number\") return {\r\n            next: function () {\r\n                if (o && i >= o.length) o = void 0;\r\n                return { value: o && o[i++], done: !o };\r\n            }\r\n        };\r\n        throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n    };\r\n\r\n    __read = function (o, n) {\r\n        var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n        if (!m) return o;\r\n        var i = m.call(o), r, ar = [], e;\r\n        try {\r\n            while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n        }\r\n        catch (error) { e = { error: error }; }\r\n        finally {\r\n            try {\r\n                if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n            }\r\n            finally { if (e) throw e.error; }\r\n        }\r\n        return ar;\r\n    };\r\n\r\n    /** @deprecated */\r\n    __spread = function () {\r\n        for (var ar = [], i = 0; i < arguments.length; i++)\r\n            ar = ar.concat(__read(arguments[i]));\r\n        return ar;\r\n    };\r\n\r\n    /** @deprecated */\r\n    __spreadArrays = function () {\r\n        for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n        for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n            for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n                r[k] = a[j];\r\n        return r;\r\n    };\r\n\r\n    __spreadArray = function (to, from, pack) {\r\n        if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\r\n            if (ar || !(i in from)) {\r\n                if (!ar) ar = Array.prototype.slice.call(from, 0, i);\r\n                ar[i] = from[i];\r\n            }\r\n        }\r\n        return to.concat(ar || from);\r\n    };\r\n\r\n    __await = function (v) {\r\n        return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n    };\r\n\r\n    __asyncGenerator = function (thisArg, _arguments, generator) {\r\n        if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n        var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n        return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n        function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n        function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n        function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r);  }\r\n        function fulfill(value) { resume(\"next\", value); }\r\n        function reject(value) { resume(\"throw\", value); }\r\n        function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n    };\r\n\r\n    __asyncDelegator = function (o) {\r\n        var i, p;\r\n        return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n        function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n    };\r\n\r\n    __asyncValues = function (o) {\r\n        if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n        var m = o[Symbol.asyncIterator], i;\r\n        return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n        function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n        function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n    };\r\n\r\n    __makeTemplateObject = function (cooked, raw) {\r\n        if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n        return cooked;\r\n    };\r\n\r\n    var __setModuleDefault = Object.create ? (function(o, v) {\r\n        Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n    }) : function(o, v) {\r\n        o[\"default\"] = v;\r\n    };\r\n\r\n    __importStar = function (mod) {\r\n        if (mod && mod.__esModule) return mod;\r\n        var result = {};\r\n        if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n        __setModuleDefault(result, mod);\r\n        return result;\r\n    };\r\n\r\n    __importDefault = function (mod) {\r\n        return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n    };\r\n\r\n    __classPrivateFieldGet = function (receiver, state, kind, f) {\r\n        if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\r\n        if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\r\n        return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\r\n    };\r\n\r\n    __classPrivateFieldSet = function (receiver, state, value, kind, f) {\r\n        if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\r\n        if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\r\n        if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\r\n        return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\r\n    };\r\n\r\n    exporter(\"__extends\", __extends);\r\n    exporter(\"__assign\", __assign);\r\n    exporter(\"__rest\", __rest);\r\n    exporter(\"__decorate\", __decorate);\r\n    exporter(\"__param\", __param);\r\n    exporter(\"__metadata\", __metadata);\r\n    exporter(\"__awaiter\", __awaiter);\r\n    exporter(\"__generator\", __generator);\r\n    exporter(\"__exportStar\", __exportStar);\r\n    exporter(\"__createBinding\", __createBinding);\r\n    exporter(\"__values\", __values);\r\n    exporter(\"__read\", __read);\r\n    exporter(\"__spread\", __spread);\r\n    exporter(\"__spreadArrays\", __spreadArrays);\r\n    exporter(\"__spreadArray\", __spreadArray);\r\n    exporter(\"__await\", __await);\r\n    exporter(\"__asyncGenerator\", __asyncGenerator);\r\n    exporter(\"__asyncDelegator\", __asyncDelegator);\r\n    exporter(\"__asyncValues\", __asyncValues);\r\n    exporter(\"__makeTemplateObject\", __makeTemplateObject);\r\n    exporter(\"__importStar\", __importStar);\r\n    exporter(\"__importDefault\", __importDefault);\r\n    exporter(\"__classPrivateFieldGet\", __classPrivateFieldGet);\r\n    exporter(\"__classPrivateFieldSet\", __classPrivateFieldSet);\r\n});\r\n",null,"module.exports = require(\"buffer\");","module.exports = require(\"child_process\");","module.exports = require(\"crypto\");","module.exports = require(\"fs\");","module.exports = require(\"http\");","module.exports = require(\"http2\");","module.exports = require(\"https\");","module.exports = require(\"os\");","module.exports = require(\"path\");","module.exports = require(\"process\");","module.exports = require(\"stream\");","module.exports = require(\"url\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\tvar threw = true;\n\ttry {\n\t\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\t\tthrew = false;\n\t} finally {\n\t\tif(threw) delete __webpack_module_cache__[moduleId];\n\t}\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","\nif (typeof __webpack_require__ !== 'undefined') __webpack_require__.ab = __dirname + \"/\";","\"use strict\";\n/*\nCopyright 2021 Expedia, Inc.\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    https://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst main_1 = require(\"./main\");\nmain_1.run();\n//# sourceMappingURL=index.js.map"],"mappings":";;;;;;;A;;A;;;;;;A;;A;;;;;;A;;A;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;ACzrSA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;ACzCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;ACnlBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;AClCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACnCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACnCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACnCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACnCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACnCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACnCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACnCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACnCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACnCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACnCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACnCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACnCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACnCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACnCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACnCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACnCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACnCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACnCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACnCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACnCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACnCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACnCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACnCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACnCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACnCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACnCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACnCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACnCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACnCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACnCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACnCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACnCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACnCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACnCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACnCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACnCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACnCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACnCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACnCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACnCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;AC1CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACzLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACPA;AACA;AACA;AACA;;;A;;;;;;ACHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;AC1gBA;AACA;;;A;;;;;;ACDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACjCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;AClCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACjCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACjCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;AClCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACjCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACjCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACjjlLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACjDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;AClEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;AC/BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACnCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACnCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACnCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACntEA;AACA;;;A;;;;;;ACDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;AClCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;AClxgBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;AC9CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;AChjCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACrCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACnCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACnCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACrCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACrCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACrCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACrCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACrCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACdjMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACPA;AACA;AACA;AACA;;;A;;;;;;ACHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;AChhuCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACjDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACpBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACnBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACdA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACTA;AACA;AACA;AACA;AACA;;;A;;;;;;ACJA;AACA;AACA;AACA;AACA;;;A;;;;;;ACJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;AC5BA;AACA;;;A;;;;;;ACDA;AACA;;;A;;;;;;ACDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACjCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACRA;AACA;AACA;AACA;AACA;;;A;;;;;;ACJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACfA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACxBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACrEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;AC5FA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACxCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACtxGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACzCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACrEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACvFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;AC3BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACpBA;AACA;AACA;AACA;AACA;;;A;;;;;;ACJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;AC7BA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACzCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACnCA;AACA;AACA;AACA;;;A;;;;;;ACHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACjCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACxvGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACxFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACpEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;AC/BA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;AC1BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACtBA;AACA;;;A;;;;;;ACDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;AC9EA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;ACtBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;AC5CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;ACvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;ACtBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;ACtfpCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;ACpBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;AChBA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACzzFA;AACA;AACA;AACA;AACA;;;A;;;;;;ACJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;AC9CA;AACA;AACA;AACA;AACA;;;A;;;;;;ACJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACXA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACtNA;AACA;AACA;AACA;;;A;;;;;;ACHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACNA;AACA;AACA;AACA;AACA;;;A;;;;;;ACJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;AC5DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;AC3BA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACNA;AACA;AACA;AACA;;;A;;;;;;ACHA;AACA;AACA;AACA;;;A;;;;;;ACHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACXA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;AC/FA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;AClIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACrBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;AC1BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACnCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;AClBA;AACA;AACA;AACA;AACA;;;A;;;;;;ACJA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;AC/CA;AACA;;;A;;;;;;ACDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;AChDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACxBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;AC1BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;AC5BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACpBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACnFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACrJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;AC7CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACrCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACpBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;AC9BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACtBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;AC/BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;AClBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACpBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACtBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACnBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;AC3BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACTA;AACA;AACA;AACA;;;A;;;;;;ACHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;AC3JA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;AC7BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACRA;AACA;AACA;AACA;AACA;;;A;;;;;;ACJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACrhBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;AC9BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;AClBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACnBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACrBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;AClBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACjBA;AACA;AACA;AACA;;;A;;;;;;ACHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACbA;AACA;AACA;AACA;;;A;;;;;;ACHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACxDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACrCA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACLA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACLA;AACA;AACA;AACA;AACA;;;A;;;;;;ACJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACxCA;;;;;AAKA;;;;;;;;;;;;A;;;;;;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACpDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;AC7BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACvIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACxzlhtp8BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACtrxHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACrBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;AClpGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACjlCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;AChlpDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;AC5BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;ACvjTA;;;A;;;;;;A;;A;;;;;;A;;A;;;;;;A;;A;;;;;;A;;A;;;;;;ACAA;;A;;;;;;ACAA;;A;;;;;;ACAA;;A;;;;;;ACAA;;A;;;;;;ACAA;;A;;;;;;ACAA;;A;;;;;;ACAA;;A;;;;;;ACAA;;A;;;;;;ACAA;;A;;;;;;ACAA;;A;;;;;;ACAA;;A;;;;;;ACAA;;A;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AC7BA;AACA;;;;;;;;ACDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;A","sourceRoot":""}